//
//  LanesStyleKit.swift
//  Mapbox Navigation
//
//  Created on 2021-03-23.
//  Copyright Â© 2021 Mapbox. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public class LanesStyleKit : NSObject {

    //// Drawing Methods

    @objc dynamic public class func drawLaneStraightNotRight(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group 2
        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: frame.minX + 18.05, y: frame.minY + 14.59))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 19.31, y: frame.minY + 14.59))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 19.31, y: frame.minY + 14.59))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 19.51, y: frame.minY + 14.59), controlPoint1: CGPoint(x: frame.minX + 19.37, y: frame.minY + 14.59), controlPoint2: CGPoint(x: frame.minX + 19.44, y: frame.minY + 14.59))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 20.03, y: frame.minY + 14.1), controlPoint1: CGPoint(x: frame.minX + 19.8, y: frame.minY + 14.59), controlPoint2: CGPoint(x: frame.minX + 20.03, y: frame.minY + 14.4))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 20.03, y: frame.minY + 14.01), controlPoint1: CGPoint(x: frame.minX + 20.03, y: frame.minY + 14.07), controlPoint2: CGPoint(x: frame.minX + 20.03, y: frame.minY + 14.04))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 20.03, y: frame.minY + 14.01))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 19.04, y: frame.minY + 11.28))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 19.04, y: frame.minY + 11.29))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 19, y: frame.minY + 11.09), controlPoint1: CGPoint(x: frame.minX + 19.02, y: frame.minY + 11.23), controlPoint2: CGPoint(x: frame.minX + 19, y: frame.minY + 11.16))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 19.52, y: frame.minY + 10.58), controlPoint1: CGPoint(x: frame.minX + 19, y: frame.minY + 10.81), controlPoint2: CGPoint(x: frame.minX + 19.23, y: frame.minY + 10.58))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 19.9, y: frame.minY + 10.74), controlPoint1: CGPoint(x: frame.minX + 19.67, y: frame.minY + 10.58), controlPoint2: CGPoint(x: frame.minX + 19.8, y: frame.minY + 10.64))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 19.9, y: frame.minY + 10.74))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 26.97, y: frame.minY + 16.59))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 19.83, y: frame.minY + 22.44))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 19.84, y: frame.minY + 22.43))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 19.46, y: frame.minY + 22.6), controlPoint1: CGPoint(x: frame.minX + 19.74, y: frame.minY + 22.53), controlPoint2: CGPoint(x: frame.minX + 19.6, y: frame.minY + 22.6))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 18.94, y: frame.minY + 22.08), controlPoint1: CGPoint(x: frame.minX + 19.17, y: frame.minY + 22.6), controlPoint2: CGPoint(x: frame.minX + 18.94, y: frame.minY + 22.37))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 18.98, y: frame.minY + 21.89), controlPoint1: CGPoint(x: frame.minX + 18.94, y: frame.minY + 22.01), controlPoint2: CGPoint(x: frame.minX + 18.95, y: frame.minY + 21.95))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 18.98, y: frame.minY + 21.89))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 19.97, y: frame.minY + 19.16))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 19.97, y: frame.minY + 19.16))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 19.97, y: frame.minY + 19.07), controlPoint1: CGPoint(x: frame.minX + 19.97, y: frame.minY + 19.14), controlPoint2: CGPoint(x: frame.minX + 19.97, y: frame.minY + 19.1))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 19.45, y: frame.minY + 18.59), controlPoint1: CGPoint(x: frame.minX + 19.97, y: frame.minY + 18.78), controlPoint2: CGPoint(x: frame.minX + 19.74, y: frame.minY + 18.59))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 19.25, y: frame.minY + 18.58), controlPoint1: CGPoint(x: frame.minX + 19.38, y: frame.minY + 18.59), controlPoint2: CGPoint(x: frame.minX + 19.31, y: frame.minY + 18.58))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 19.25, y: frame.minY + 18.58))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 17.99, y: frame.minY + 18.59))
        bezier2Path.usesEvenOddFillRule = true
        secondaryColor.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: frame.minX + 11.03, y: frame.minY + 27))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 11.03, y: frame.minY + 22.87))
        bezier3Path.addCurve(to: CGPoint(x: frame.minX + 13, y: frame.minY + 18.61), controlPoint1: CGPoint(x: frame.minX + 11.03, y: frame.minY + 21.23), controlPoint2: CGPoint(x: frame.minX + 11.73, y: frame.minY + 19.65))
        bezier3Path.addCurve(to: CGPoint(x: frame.minX + 17.84, y: frame.minY + 16.61), controlPoint1: CGPoint(x: frame.minX + 14.23, y: frame.minY + 17.61), controlPoint2: CGPoint(x: frame.minX + 15.93, y: frame.minY + 16.61))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 20.03, y: frame.minY + 16.61))
        secondaryColor.setStroke()
        bezier3Path.lineWidth = 4
        bezier3Path.stroke()




        //// Group
        context.saveGState()
        context.translateBy(x: frame.minX + 15.02, y: frame.minY + 14.58)
        context.scaleBy(x: scaleX, y: 1)



        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: -6.02, y: -3.58, width: 4, height: 16))
        primaryColor.setFill()
        rectanglePath.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: -4, y: -12.58))
        bezierPath.addCurve(to: CGPoint(x: 1.84, y: -4.45), controlPoint1: CGPoint(x: -3.96, y: -12.53), controlPoint2: CGPoint(x: 1.72, y: -4.62))
        bezierPath.addCurve(to: CGPoint(x: 2, y: -4.07), controlPoint1: CGPoint(x: 1.94, y: -4.35), controlPoint2: CGPoint(x: 2, y: -4.21))
        bezierPath.addCurve(to: CGPoint(x: 1.49, y: -3.55), controlPoint1: CGPoint(x: 2, y: -3.78), controlPoint2: CGPoint(x: 1.77, y: -3.55))
        bezierPath.addCurve(to: CGPoint(x: 1.3, y: -3.59), controlPoint1: CGPoint(x: 1.42, y: -3.55), controlPoint2: CGPoint(x: 1.36, y: -3.56))
        bezierPath.addCurve(to: CGPoint(x: -1.43, y: -4.58), controlPoint1: CGPoint(x: 1.18, y: -3.63), controlPoint2: CGPoint(x: -1.32, y: -4.54))
        bezierPath.addCurve(to: CGPoint(x: -2.01, y: -4.06), controlPoint1: CGPoint(x: -1.81, y: -4.58), controlPoint2: CGPoint(x: -2.01, y: -4.35))
        bezierPath.addCurve(to: CGPoint(x: -2.01, y: -3.86), controlPoint1: CGPoint(x: -2.01, y: -3.99), controlPoint2: CGPoint(x: -2.01, y: -3.92))
        bezierPath.addCurve(to: CGPoint(x: -2.01, y: -2.6), controlPoint1: CGPoint(x: -2.01, y: -3.78), controlPoint2: CGPoint(x: -2.01, y: -2.6))
        bezierPath.addLine(to: CGPoint(x: -6, y: -2.66))
        bezierPath.addCurve(to: CGPoint(x: -6, y: -3.92), controlPoint1: CGPoint(x: -6, y: -2.66), controlPoint2: CGPoint(x: -6, y: -3.83))
        bezierPath.addCurve(to: CGPoint(x: -6.01, y: -4.12), controlPoint1: CGPoint(x: -6, y: -3.98), controlPoint2: CGPoint(x: -6.01, y: -4.05))
        bezierPath.addCurve(to: CGPoint(x: -6.49, y: -4.65), controlPoint1: CGPoint(x: -6.01, y: -4.41), controlPoint2: CGPoint(x: -6.2, y: -4.65))
        bezierPath.addCurve(to: CGPoint(x: -9.3, y: -3.65), controlPoint1: CGPoint(x: -6.69, y: -4.6), controlPoint2: CGPoint(x: -9.19, y: -3.69))
        bezierPath.addCurve(to: CGPoint(x: -9.5, y: -3.61), controlPoint1: CGPoint(x: -9.37, y: -3.63), controlPoint2: CGPoint(x: -9.43, y: -3.61))
        bezierPath.addCurve(to: CGPoint(x: -10.02, y: -4.12), controlPoint1: CGPoint(x: -9.78, y: -3.61), controlPoint2: CGPoint(x: -10.01, y: -3.84))
        bezierPath.addCurve(to: CGPoint(x: -9.86, y: -4.51), controlPoint1: CGPoint(x: -10.01, y: -4.28), controlPoint2: CGPoint(x: -9.95, y: -4.41))
        bezierPath.addCurve(to: CGPoint(x: -4, y: -12.58), controlPoint1: CGPoint(x: -9.73, y: -4.68), controlPoint2: CGPoint(x: -4.04, y: -12.53))
        bezierPath.addLine(to: CGPoint(x: -4, y: -12.58))
        bezierPath.close()
        primaryColor.setFill()
        bezierPath.fill()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneRight(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group
        context.saveGState()
        context.translateBy(x: frame.minX + 14.98, y: frame.minY + 15.02)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 1.47, y: -11.01))
        bezierPath.addCurve(to: CGPoint(x: 1.79, y: -10.85), controlPoint1: CGPoint(x: 1.57, y: -11.01), controlPoint2: CGPoint(x: 1.7, y: -10.95))
        bezierPath.addCurve(to: CGPoint(x: 8.87, y: -5), controlPoint1: CGPoint(x: 1.95, y: -10.72), controlPoint2: CGPoint(x: 8.87, y: -5))
        bezierPath.addCurve(to: CGPoint(x: 1.73, y: 0.84), controlPoint1: CGPoint(x: 8.87, y: -5), controlPoint2: CGPoint(x: 1.89, y: 0.71))
        bezierPath.addCurve(to: CGPoint(x: 1.35, y: 1), controlPoint1: CGPoint(x: 1.63, y: 0.94), controlPoint2: CGPoint(x: 1.5, y: 1))
        bezierPath.addCurve(to: CGPoint(x: 0.84, y: 0.49), controlPoint1: CGPoint(x: 1.07, y: 1), controlPoint2: CGPoint(x: 0.84, y: 0.77))
        bezierPath.addCurve(to: CGPoint(x: 0.87, y: 0.3), controlPoint1: CGPoint(x: 0.84, y: 0.42), controlPoint2: CGPoint(x: 0.85, y: 0.36))
        bezierPath.addCurve(to: CGPoint(x: 1.86, y: -2.43), controlPoint1: CGPoint(x: 0.92, y: 0.18), controlPoint2: CGPoint(x: 1.82, y: -2.32))
        bezierPath.addCurve(to: CGPoint(x: 1.34, y: -3.01), controlPoint1: CGPoint(x: 1.87, y: -2.81), controlPoint2: CGPoint(x: 1.63, y: -3.01))
        bezierPath.addCurve(to: CGPoint(x: 1.15, y: -3.01), controlPoint1: CGPoint(x: 1.28, y: -3.01), controlPoint2: CGPoint(x: 1.21, y: -3.01))
        bezierPath.addCurve(to: CGPoint(x: -0.12, y: -3.01), controlPoint1: CGPoint(x: 1.06, y: -3.01), controlPoint2: CGPoint(x: -0.12, y: -3.01))
        bezierPath.addLine(to: CGPoint(x: -0.06, y: -7))
        bezierPath.addCurve(to: CGPoint(x: 1.2, y: -7), controlPoint1: CGPoint(x: -0.06, y: -7), controlPoint2: CGPoint(x: 1.12, y: -7))
        bezierPath.addCurve(to: CGPoint(x: 1.4, y: -7.01), controlPoint1: CGPoint(x: 1.27, y: -7), controlPoint2: CGPoint(x: 1.34, y: -7.01))
        bezierPath.addCurve(to: CGPoint(x: 1.93, y: -7.49), controlPoint1: CGPoint(x: 1.7, y: -7.01), controlPoint2: CGPoint(x: 1.93, y: -7.2))
        bezierPath.addCurve(to: CGPoint(x: 0.94, y: -10.3), controlPoint1: CGPoint(x: 1.89, y: -7.69), controlPoint2: CGPoint(x: 0.98, y: -10.19))
        bezierPath.addCurve(to: CGPoint(x: 0.9, y: -10.5), controlPoint1: CGPoint(x: 0.91, y: -10.37), controlPoint2: CGPoint(x: 0.9, y: -10.43))
        bezierPath.addCurve(to: CGPoint(x: 1.41, y: -11.02), controlPoint1: CGPoint(x: 0.9, y: -10.78), controlPoint2: CGPoint(x: 1.13, y: -11.01))
        bezierPath.addLine(to: CGPoint(x: 1.47, y: -11.01))
        bezierPath.close()
        primaryColor.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: -5.98, y: 11.98))
        bezier2Path.addLine(to: CGPoint(x: -5.92, y: -1.45))
        bezier2Path.addCurve(to: CGPoint(x: -2.05, y: -4.98), controlPoint1: CGPoint(x: -5.92, y: -1.45), controlPoint2: CGPoint(x: -5.64, y: -4.98))
        bezier2Path.addLine(to: CGPoint(x: 5.05, y: -4.98))
        primaryColor.setStroke()
        bezier2Path.lineWidth = 4
        bezier2Path.stroke()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneRightNotStraight(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group 2
        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: frame.minX + 9, y: frame.minY + 11, width: 4, height: 16))
        secondaryColor.setFill()
        rectanglePath.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: frame.minX + 11.02, y: frame.minY + 2))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 16.86, y: frame.minY + 10.13), controlPoint1: CGPoint(x: frame.minX + 11.06, y: frame.minY + 2.06), controlPoint2: CGPoint(x: frame.minX + 16.74, y: frame.minY + 9.97))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 17.02, y: frame.minY + 10.52), controlPoint1: CGPoint(x: frame.minX + 16.96, y: frame.minY + 10.23), controlPoint2: CGPoint(x: frame.minX + 17.02, y: frame.minY + 10.37))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 16.5, y: frame.minY + 11.03), controlPoint1: CGPoint(x: frame.minX + 17.02, y: frame.minY + 10.8), controlPoint2: CGPoint(x: frame.minX + 16.79, y: frame.minY + 11.03))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 16.31, y: frame.minY + 10.99), controlPoint1: CGPoint(x: frame.minX + 16.44, y: frame.minY + 11.03), controlPoint2: CGPoint(x: frame.minX + 16.37, y: frame.minY + 11.02))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 13.59, y: frame.minY + 10), controlPoint1: CGPoint(x: frame.minX + 16.2, y: frame.minY + 10.95), controlPoint2: CGPoint(x: frame.minX + 13.69, y: frame.minY + 10.04))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 13.01, y: frame.minY + 10.52), controlPoint1: CGPoint(x: frame.minX + 13.2, y: frame.minY + 10), controlPoint2: CGPoint(x: frame.minX + 13.01, y: frame.minY + 10.23))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 13, y: frame.minY + 10.72), controlPoint1: CGPoint(x: frame.minX + 13.01, y: frame.minY + 10.59), controlPoint2: CGPoint(x: frame.minX + 13, y: frame.minY + 10.66))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 13.01, y: frame.minY + 11.99), controlPoint1: CGPoint(x: frame.minX + 13, y: frame.minY + 10.8), controlPoint2: CGPoint(x: frame.minX + 13.01, y: frame.minY + 11.99))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 9.01, y: frame.minY + 11.92))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 9.02, y: frame.minY + 10.66), controlPoint1: CGPoint(x: frame.minX + 9.01, y: frame.minY + 11.92), controlPoint2: CGPoint(x: frame.minX + 9.02, y: frame.minY + 10.75))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 9.01, y: frame.minY + 10.46), controlPoint1: CGPoint(x: frame.minX + 9.01, y: frame.minY + 10.6), controlPoint2: CGPoint(x: frame.minX + 9.01, y: frame.minY + 10.53))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 8.53, y: frame.minY + 9.94), controlPoint1: CGPoint(x: frame.minX + 9.01, y: frame.minY + 10.17), controlPoint2: CGPoint(x: frame.minX + 8.82, y: frame.minY + 9.94))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 5.71, y: frame.minY + 10.93), controlPoint1: CGPoint(x: frame.minX + 8.32, y: frame.minY + 9.98), controlPoint2: CGPoint(x: frame.minX + 5.82, y: frame.minY + 10.89))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 5.52, y: frame.minY + 10.97), controlPoint1: CGPoint(x: frame.minX + 5.65, y: frame.minY + 10.96), controlPoint2: CGPoint(x: frame.minX + 5.58, y: frame.minY + 10.97))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 5, y: frame.minY + 10.46), controlPoint1: CGPoint(x: frame.minX + 5.23, y: frame.minY + 10.97), controlPoint2: CGPoint(x: frame.minX + 5, y: frame.minY + 10.74))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 5.16, y: frame.minY + 10.08), controlPoint1: CGPoint(x: frame.minX + 5, y: frame.minY + 10.3), controlPoint2: CGPoint(x: frame.minX + 5.06, y: frame.minY + 10.17))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 11.01, y: frame.minY + 2), controlPoint1: CGPoint(x: frame.minX + 5.28, y: frame.minY + 9.9), controlPoint2: CGPoint(x: frame.minX + 10.97, y: frame.minY + 2.06))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 11.02, y: frame.minY + 2))
        bezierPath.close()
        secondaryColor.setFill()
        bezierPath.fill()




        //// Group
        context.saveGState()
        context.translateBy(x: frame.minX + 14.98, y: frame.minY + 14.42)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 3.07, y: 0.17))
        bezier2Path.addLine(to: CGPoint(x: 4.33, y: 0.17))
        bezier2Path.addLine(to: CGPoint(x: 4.33, y: 0.17))
        bezier2Path.addCurve(to: CGPoint(x: 4.53, y: 0.17), controlPoint1: CGPoint(x: 4.39, y: 0.17), controlPoint2: CGPoint(x: 4.46, y: 0.17))
        bezier2Path.addCurve(to: CGPoint(x: 5.05, y: -0.32), controlPoint1: CGPoint(x: 4.82, y: 0.17), controlPoint2: CGPoint(x: 5.05, y: -0.03))
        bezier2Path.addCurve(to: CGPoint(x: 5.05, y: -0.41), controlPoint1: CGPoint(x: 5.05, y: -0.35), controlPoint2: CGPoint(x: 5.05, y: -0.38))
        bezier2Path.addLine(to: CGPoint(x: 5.05, y: -0.41))
        bezier2Path.addLine(to: CGPoint(x: 4.06, y: -3.14))
        bezier2Path.addLine(to: CGPoint(x: 4.06, y: -3.13))
        bezier2Path.addCurve(to: CGPoint(x: 4.02, y: -3.33), controlPoint1: CGPoint(x: 4.04, y: -3.19), controlPoint2: CGPoint(x: 4.02, y: -3.26))
        bezier2Path.addCurve(to: CGPoint(x: 4.54, y: -3.84), controlPoint1: CGPoint(x: 4.02, y: -3.61), controlPoint2: CGPoint(x: 4.25, y: -3.84))
        bezier2Path.addCurve(to: CGPoint(x: 4.92, y: -3.68), controlPoint1: CGPoint(x: 4.69, y: -3.84), controlPoint2: CGPoint(x: 4.82, y: -3.78))
        bezier2Path.addLine(to: CGPoint(x: 4.92, y: -3.68))
        bezier2Path.addLine(to: CGPoint(x: 11.99, y: 2.17))
        bezier2Path.addLine(to: CGPoint(x: 4.85, y: 8.02))
        bezier2Path.addLine(to: CGPoint(x: 4.86, y: 8.01))
        bezier2Path.addCurve(to: CGPoint(x: 4.48, y: 8.18), controlPoint1: CGPoint(x: 4.76, y: 8.11), controlPoint2: CGPoint(x: 4.62, y: 8.18))
        bezier2Path.addCurve(to: CGPoint(x: 3.96, y: 7.66), controlPoint1: CGPoint(x: 4.19, y: 8.18), controlPoint2: CGPoint(x: 3.96, y: 7.94))
        bezier2Path.addCurve(to: CGPoint(x: 4, y: 7.46), controlPoint1: CGPoint(x: 3.96, y: 7.59), controlPoint2: CGPoint(x: 3.97, y: 7.52))
        bezier2Path.addLine(to: CGPoint(x: 4, y: 7.47))
        bezier2Path.addLine(to: CGPoint(x: 4.99, y: 4.74))
        bezier2Path.addLine(to: CGPoint(x: 4.99, y: 4.74))
        bezier2Path.addCurve(to: CGPoint(x: 4.99, y: 4.65), controlPoint1: CGPoint(x: 4.99, y: 4.71), controlPoint2: CGPoint(x: 4.99, y: 4.68))
        bezier2Path.addCurve(to: CGPoint(x: 4.47, y: 4.17), controlPoint1: CGPoint(x: 4.99, y: 4.36), controlPoint2: CGPoint(x: 4.76, y: 4.17))
        bezier2Path.addCurve(to: CGPoint(x: 4.27, y: 4.16), controlPoint1: CGPoint(x: 4.4, y: 4.17), controlPoint2: CGPoint(x: 4.33, y: 4.16))
        bezier2Path.addLine(to: CGPoint(x: 4.27, y: 4.16))
        bezier2Path.addLine(to: CGPoint(x: 3.01, y: 4.16))
        bezier2Path.usesEvenOddFillRule = true
        primaryColor.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: -3.95, y: 12.58))
        bezier3Path.addLine(to: CGPoint(x: -3.95, y: 8.45))
        bezier3Path.addCurve(to: CGPoint(x: -1.98, y: 4.19), controlPoint1: CGPoint(x: -3.95, y: 6.81), controlPoint2: CGPoint(x: -3.25, y: 5.23))
        bezier3Path.addCurve(to: CGPoint(x: 2.86, y: 2.19), controlPoint1: CGPoint(x: -0.75, y: 3.19), controlPoint2: CGPoint(x: 0.95, y: 2.19))
        bezier3Path.addLine(to: CGPoint(x: 5.05, y: 2.19))
        primaryColor.setStroke()
        bezier3Path.lineWidth = 4
        bezier3Path.stroke()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneStraight(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group
        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: frame.minX + 13, y: frame.minY + 11, width: 4, height: 16))
        primaryColor.setFill()
        rectanglePath.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: frame.minX + 13.01, y: frame.minY + 12.92))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 13.02, y: frame.minY + 11.66))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 13.01, y: frame.minY + 11.66))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 13.01, y: frame.minY + 11.46), controlPoint1: CGPoint(x: frame.minX + 13.01, y: frame.minY + 11.6), controlPoint2: CGPoint(x: frame.minX + 13.01, y: frame.minY + 11.53))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 12.53, y: frame.minY + 10.94), controlPoint1: CGPoint(x: frame.minX + 13.01, y: frame.minY + 11.17), controlPoint2: CGPoint(x: frame.minX + 12.82, y: frame.minY + 10.94))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 12.43, y: frame.minY + 10.94), controlPoint1: CGPoint(x: frame.minX + 12.5, y: frame.minY + 10.94), controlPoint2: CGPoint(x: frame.minX + 12.46, y: frame.minY + 10.94))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 12.44, y: frame.minY + 10.94))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 9.71, y: frame.minY + 11.93))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 9.71, y: frame.minY + 11.93))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 9.52, y: frame.minY + 11.97), controlPoint1: CGPoint(x: frame.minX + 9.65, y: frame.minY + 11.96), controlPoint2: CGPoint(x: frame.minX + 9.59, y: frame.minY + 11.97))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 9, y: frame.minY + 11.45), controlPoint1: CGPoint(x: frame.minX + 9.23, y: frame.minY + 11.97), controlPoint2: CGPoint(x: frame.minX + 9, y: frame.minY + 11.74))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 9.16, y: frame.minY + 11.07), controlPoint1: CGPoint(x: frame.minX + 9, y: frame.minY + 11.3), controlPoint2: CGPoint(x: frame.minX + 9.06, y: frame.minY + 11.17))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 9.16, y: frame.minY + 11.08))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 15.02, y: frame.minY + 3))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 20.86, y: frame.minY + 11.14))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 20.86, y: frame.minY + 11.14))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 21.02, y: frame.minY + 11.52), controlPoint1: CGPoint(x: frame.minX + 20.96, y: frame.minY + 11.23), controlPoint2: CGPoint(x: frame.minX + 21.02, y: frame.minY + 11.37))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 20.5, y: frame.minY + 12.03), controlPoint1: CGPoint(x: frame.minX + 21.02, y: frame.minY + 11.8), controlPoint2: CGPoint(x: frame.minX + 20.79, y: frame.minY + 12.03))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 20.31, y: frame.minY + 11.99), controlPoint1: CGPoint(x: frame.minX + 20.43, y: frame.minY + 12.03), controlPoint2: CGPoint(x: frame.minX + 20.37, y: frame.minY + 12.02))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 20.31, y: frame.minY + 11.99))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 17.58, y: frame.minY + 11))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 17.59, y: frame.minY + 11.01))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 17.49, y: frame.minY + 11), controlPoint1: CGPoint(x: frame.minX + 17.56, y: frame.minY + 11), controlPoint2: CGPoint(x: frame.minX + 17.52, y: frame.minY + 11))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 17.01, y: frame.minY + 11.52), controlPoint1: CGPoint(x: frame.minX + 17.2, y: frame.minY + 11), controlPoint2: CGPoint(x: frame.minX + 17.01, y: frame.minY + 11.23))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 17.01, y: frame.minY + 11.73), controlPoint1: CGPoint(x: frame.minX + 17.01, y: frame.minY + 11.59), controlPoint2: CGPoint(x: frame.minX + 17.01, y: frame.minY + 11.66))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 17, y: frame.minY + 11.72))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 17.01, y: frame.minY + 12.99))
        bezierPath.usesEvenOddFillRule = true
        primaryColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneUturn(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group
        context.saveGState()
        context.translateBy(x: frame.minX + 14.89, y: frame.minY + 15.95)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 4.11, y: 4.05))
        bezierPath.addLine(to: CGPoint(x: 4.11, y: -4.69))
        bezierPath.addCurve(to: CGPoint(x: -0.89, y: -10.95), controlPoint1: CGPoint(x: 4.11, y: -6.33), controlPoint2: CGPoint(x: 4.11, y: -10.95))
        bezierPath.addCurve(to: CGPoint(x: -5.89, y: -4.95), controlPoint1: CGPoint(x: -5.89, y: -10.95), controlPoint2: CGPoint(x: -5.89, y: -4.95))
        bezierPath.addLine(to: CGPoint(x: -5.89, y: 11.05))
        primaryColor.setStroke()
        bezierPath.lineWidth = 4
        bezierPath.stroke()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 6.13, y: 2.1))
        bezier2Path.addCurve(to: CGPoint(x: 6.12, y: 3.36), controlPoint1: CGPoint(x: 6.13, y: 2.1), controlPoint2: CGPoint(x: 6.12, y: 3.28))
        bezier2Path.addCurve(to: CGPoint(x: 6.13, y: 3.56), controlPoint1: CGPoint(x: 6.12, y: 3.43), controlPoint2: CGPoint(x: 6.13, y: 3.5))
        bezier2Path.addCurve(to: CGPoint(x: 6.61, y: 4.09), controlPoint1: CGPoint(x: 6.13, y: 3.85), controlPoint2: CGPoint(x: 6.32, y: 4.09))
        bezier2Path.addCurve(to: CGPoint(x: 9.43, y: 3.09), controlPoint1: CGPoint(x: 6.81, y: 4.04), controlPoint2: CGPoint(x: 9.31, y: 3.13))
        bezier2Path.addCurve(to: CGPoint(x: 9.62, y: 3.06), controlPoint1: CGPoint(x: 9.49, y: 3.07), controlPoint2: CGPoint(x: 9.55, y: 3.06))
        bezier2Path.addCurve(to: CGPoint(x: 10.11, y: 3.4), controlPoint1: CGPoint(x: 9.84, y: 3.06), controlPoint2: CGPoint(x: 10.04, y: 3.2))
        bezier2Path.addLine(to: CGPoint(x: 10.11, y: 3.57))
        bezier2Path.addLine(to: CGPoint(x: 10.11, y: 3.75))
        bezier2Path.addCurve(to: CGPoint(x: 9.98, y: 3.95), controlPoint1: CGPoint(x: 10.08, y: 3.82), controlPoint2: CGPoint(x: 10.03, y: 3.89))
        bezier2Path.addCurve(to: CGPoint(x: 4.12, y: 11.02), controlPoint1: CGPoint(x: 9.85, y: 4.11), controlPoint2: CGPoint(x: 4.12, y: 11.02))
        bezier2Path.addCurve(to: CGPoint(x: 0.41, y: 6.5), controlPoint1: CGPoint(x: 4.12, y: 11.02), controlPoint2: CGPoint(x: 2.08, y: 8.53))
        bezier2Path.addCurve(to: CGPoint(x: -1.72, y: 3.89), controlPoint1: CGPoint(x: -0.71, y: 5.12), controlPoint2: CGPoint(x: -1.67, y: 3.95))
        bezier2Path.addCurve(to: CGPoint(x: -1.88, y: 3.51), controlPoint1: CGPoint(x: -1.82, y: 3.79), controlPoint2: CGPoint(x: -1.88, y: 3.66))
        bezier2Path.addCurve(to: CGPoint(x: -1.37, y: 2.99), controlPoint1: CGPoint(x: -1.88, y: 3.22), controlPoint2: CGPoint(x: -1.65, y: 2.99))
        bezier2Path.addCurve(to: CGPoint(x: -1.18, y: 3.03), controlPoint1: CGPoint(x: -1.3, y: 2.99), controlPoint2: CGPoint(x: -1.23, y: 3.01))
        bezier2Path.addCurve(to: CGPoint(x: 1.55, y: 4.02), controlPoint1: CGPoint(x: -1.06, y: 3.07), controlPoint2: CGPoint(x: 1.44, y: 3.98))
        bezier2Path.addCurve(to: CGPoint(x: 2.13, y: 3.5), controlPoint1: CGPoint(x: 1.94, y: 4.02), controlPoint2: CGPoint(x: 2.13, y: 3.79))
        bezier2Path.addCurve(to: CGPoint(x: 2.13, y: 3.3), controlPoint1: CGPoint(x: 2.13, y: 3.43), controlPoint2: CGPoint(x: 2.13, y: 3.36))
        bezier2Path.addCurve(to: CGPoint(x: 2.13, y: 2.04), controlPoint1: CGPoint(x: 2.13, y: 3.22), controlPoint2: CGPoint(x: 2.13, y: 2.04))
        bezier2Path.addLine(to: CGPoint(x: 6.13, y: 2.1))
        bezier2Path.close()
        primaryColor.setFill()
        bezier2Path.fill()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneSlightRight(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group
        context.saveGState()
        context.translateBy(x: frame.minX + 14.98, y: frame.minY + 13.11)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 0.87, y: -3.35))
        bezier3Path.addLine(to: CGPoint(x: -4.82, y: 1.92))
        bezier3Path.addCurve(to: CGPoint(x: -6.3, y: 6.5), controlPoint1: CGPoint(x: -5.7, y: 3.24), controlPoint2: CGPoint(x: -6.3, y: 4.85))
        bezier3Path.addLine(to: CGPoint(x: -6.3, y: 13.63))
        primaryColor.setStroke()
        bezier3Path.lineWidth = 4
        bezier3Path.lineJoinStyle = .round
        bezier3Path.stroke()


        //// Bezier Drawing
        context.saveGState()
        context.translateBy(x: 3.95, y: -13.97)
        context.rotate(by: 49 * CGFloat.pi/180)

        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 4.01, y: 9.92))
        bezierPath.addLine(to: CGPoint(x: 4.02, y: 8.66))
        bezierPath.addLine(to: CGPoint(x: 4.01, y: 8.66))
        bezierPath.addCurve(to: CGPoint(x: 4.01, y: 8.46), controlPoint1: CGPoint(x: 4.01, y: 8.6), controlPoint2: CGPoint(x: 4.01, y: 8.53))
        bezierPath.addCurve(to: CGPoint(x: 3.53, y: 7.94), controlPoint1: CGPoint(x: 4.01, y: 8.17), controlPoint2: CGPoint(x: 3.82, y: 7.94))
        bezierPath.addCurve(to: CGPoint(x: 3.43, y: 7.94), controlPoint1: CGPoint(x: 3.5, y: 7.94), controlPoint2: CGPoint(x: 3.46, y: 7.94))
        bezierPath.addLine(to: CGPoint(x: 3.44, y: 7.94))
        bezierPath.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezierPath.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezierPath.addCurve(to: CGPoint(x: 0.52, y: 8.97), controlPoint1: CGPoint(x: 0.65, y: 8.96), controlPoint2: CGPoint(x: 0.58, y: 8.97))
        bezierPath.addCurve(to: CGPoint(x: -0, y: 8.45), controlPoint1: CGPoint(x: 0.23, y: 8.97), controlPoint2: CGPoint(x: -0, y: 8.74))
        bezierPath.addCurve(to: CGPoint(x: 0.16, y: 8.07), controlPoint1: CGPoint(x: -0, y: 8.3), controlPoint2: CGPoint(x: 0.06, y: 8.17))
        bezierPath.addLine(to: CGPoint(x: 0.16, y: 8.08))
        bezierPath.addLine(to: CGPoint(x: 6.01, y: 0))
        bezierPath.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezierPath.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezierPath.addCurve(to: CGPoint(x: 12.02, y: 8.52), controlPoint1: CGPoint(x: 11.96, y: 8.23), controlPoint2: CGPoint(x: 12.02, y: 8.37))
        bezierPath.addCurve(to: CGPoint(x: 11.5, y: 9.03), controlPoint1: CGPoint(x: 12.02, y: 8.8), controlPoint2: CGPoint(x: 11.79, y: 9.03))
        bezierPath.addCurve(to: CGPoint(x: 11.31, y: 8.99), controlPoint1: CGPoint(x: 11.43, y: 9.03), controlPoint2: CGPoint(x: 11.37, y: 9.02))
        bezierPath.addLine(to: CGPoint(x: 11.31, y: 8.99))
        bezierPath.addLine(to: CGPoint(x: 8.58, y: 8))
        bezierPath.addLine(to: CGPoint(x: 8.59, y: 8.01))
        bezierPath.addCurve(to: CGPoint(x: 8.49, y: 8), controlPoint1: CGPoint(x: 8.56, y: 8), controlPoint2: CGPoint(x: 8.52, y: 8))
        bezierPath.addCurve(to: CGPoint(x: 8.01, y: 8.53), controlPoint1: CGPoint(x: 8.2, y: 8), controlPoint2: CGPoint(x: 8.01, y: 8.23))
        bezierPath.addCurve(to: CGPoint(x: 8, y: 8.73), controlPoint1: CGPoint(x: 8.01, y: 8.59), controlPoint2: CGPoint(x: 8, y: 8.66))
        bezierPath.addLine(to: CGPoint(x: 8, y: 8.72))
        bezierPath.addLine(to: CGPoint(x: 8.01, y: 9.99))
        bezierPath.usesEvenOddFillRule = true
        primaryColor.setFill()
        bezierPath.fill()

        context.restoreGState()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneSlightRightNotStraight(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group
        context.saveGState()
        context.translateBy(x: frame.minX + 14.98, y: frame.minY + 14.42)
        context.scaleBy(x: scaleX, y: 1)



        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: -5.98, y: -3.43, width: 4, height: 16))
        secondaryColor.setFill()
        rectanglePath.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: -3.96, y: -12.42))
        bezierPath.addCurve(to: CGPoint(x: 1.88, y: -4.29), controlPoint1: CGPoint(x: -3.92, y: -12.37), controlPoint2: CGPoint(x: 1.76, y: -4.46))
        bezierPath.addCurve(to: CGPoint(x: 2.04, y: -3.91), controlPoint1: CGPoint(x: 1.98, y: -4.19), controlPoint2: CGPoint(x: 2.04, y: -4.06))
        bezierPath.addCurve(to: CGPoint(x: 1.52, y: -3.39), controlPoint1: CGPoint(x: 2.04, y: -3.62), controlPoint2: CGPoint(x: 1.81, y: -3.39))
        bezierPath.addCurve(to: CGPoint(x: 1.33, y: -3.43), controlPoint1: CGPoint(x: 1.46, y: -3.39), controlPoint2: CGPoint(x: 1.39, y: -3.41))
        bezierPath.addCurve(to: CGPoint(x: -1.39, y: -4.42), controlPoint1: CGPoint(x: 1.22, y: -3.47), controlPoint2: CGPoint(x: -1.28, y: -4.38))
        bezierPath.addCurve(to: CGPoint(x: -1.97, y: -3.9), controlPoint1: CGPoint(x: -1.78, y: -4.43), controlPoint2: CGPoint(x: -1.97, y: -4.19))
        bezierPath.addCurve(to: CGPoint(x: -1.97, y: -3.7), controlPoint1: CGPoint(x: -1.97, y: -3.83), controlPoint2: CGPoint(x: -1.97, y: -3.76))
        bezierPath.addCurve(to: CGPoint(x: -1.97, y: -2.44), controlPoint1: CGPoint(x: -1.98, y: -3.62), controlPoint2: CGPoint(x: -1.97, y: -2.44))
        bezierPath.addLine(to: CGPoint(x: -5.97, y: -2.5))
        bezierPath.addCurve(to: CGPoint(x: -5.96, y: -3.76), controlPoint1: CGPoint(x: -5.97, y: -2.5), controlPoint2: CGPoint(x: -5.96, y: -3.68))
        bezierPath.addCurve(to: CGPoint(x: -5.97, y: -3.96), controlPoint1: CGPoint(x: -5.97, y: -3.83), controlPoint2: CGPoint(x: -5.97, y: -3.9))
        bezierPath.addCurve(to: CGPoint(x: -6.45, y: -4.49), controlPoint1: CGPoint(x: -5.97, y: -4.25), controlPoint2: CGPoint(x: -6.16, y: -4.49))
        bezierPath.addCurve(to: CGPoint(x: -9.27, y: -3.49), controlPoint1: CGPoint(x: -6.66, y: -4.44), controlPoint2: CGPoint(x: -9.16, y: -3.54))
        bezierPath.addCurve(to: CGPoint(x: -9.46, y: -3.46), controlPoint1: CGPoint(x: -9.33, y: -3.47), controlPoint2: CGPoint(x: -9.4, y: -3.46))
        bezierPath.addCurve(to: CGPoint(x: -9.98, y: -3.97), controlPoint1: CGPoint(x: -9.75, y: -3.46), controlPoint2: CGPoint(x: -9.98, y: -3.68))
        bezierPath.addCurve(to: CGPoint(x: -9.82, y: -4.35), controlPoint1: CGPoint(x: -9.98, y: -4.12), controlPoint2: CGPoint(x: -9.92, y: -4.26))
        bezierPath.addCurve(to: CGPoint(x: -3.96, y: -12.43), controlPoint1: CGPoint(x: -9.7, y: -4.52), controlPoint2: CGPoint(x: -4.01, y: -12.37))
        bezierPath.addLine(to: CGPoint(x: -3.96, y: -12.42))
        bezierPath.close()
        secondaryColor.setFill()
        bezierPath.fill()



        context.restoreGState()


        //// Group 2
        context.saveGState()
        context.translateBy(x: 10.98, y: -0.58)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 7.17, y: 10.61))
        bezier3Path.addLine(to: CGPoint(x: 4.02, y: 13.58))
        bezier3Path.addCurve(to: CGPoint(x: 0.02, y: 22.58), controlPoint1: CGPoint(x: 1.02, y: 16.58), controlPoint2: CGPoint(x: 0.02, y: 20.93))
        bezier3Path.addLine(to: CGPoint(x: 0, y: 27.6))
        primaryColor.setStroke()
        bezier3Path.lineWidth = 4
        bezier3Path.lineJoinStyle = .round
        bezier3Path.stroke()


        //// Bezier 2 Drawing
        context.saveGState()
        context.translateBy(x: 10.25, y: -0)
        context.rotate(by: 49 * CGFloat.pi/180)

        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 4.01, y: 9.92))
        bezier2Path.addLine(to: CGPoint(x: 4.02, y: 8.66))
        bezier2Path.addLine(to: CGPoint(x: 4.01, y: 8.66))
        bezier2Path.addCurve(to: CGPoint(x: 4.01, y: 8.46), controlPoint1: CGPoint(x: 4.01, y: 8.6), controlPoint2: CGPoint(x: 4.01, y: 8.53))
        bezier2Path.addCurve(to: CGPoint(x: 3.53, y: 7.94), controlPoint1: CGPoint(x: 4.01, y: 8.17), controlPoint2: CGPoint(x: 3.82, y: 7.94))
        bezier2Path.addCurve(to: CGPoint(x: 3.43, y: 7.94), controlPoint1: CGPoint(x: 3.5, y: 7.94), controlPoint2: CGPoint(x: 3.46, y: 7.94))
        bezier2Path.addLine(to: CGPoint(x: 3.44, y: 7.94))
        bezier2Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier2Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier2Path.addCurve(to: CGPoint(x: 0.52, y: 8.97), controlPoint1: CGPoint(x: 0.65, y: 8.96), controlPoint2: CGPoint(x: 0.58, y: 8.97))
        bezier2Path.addCurve(to: CGPoint(x: -0, y: 8.45), controlPoint1: CGPoint(x: 0.23, y: 8.97), controlPoint2: CGPoint(x: -0, y: 8.74))
        bezier2Path.addCurve(to: CGPoint(x: 0.16, y: 8.07), controlPoint1: CGPoint(x: -0, y: 8.3), controlPoint2: CGPoint(x: 0.06, y: 8.17))
        bezier2Path.addLine(to: CGPoint(x: 0.16, y: 8.08))
        bezier2Path.addLine(to: CGPoint(x: 6.01, y: 0))
        bezier2Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier2Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier2Path.addCurve(to: CGPoint(x: 12.02, y: 8.52), controlPoint1: CGPoint(x: 11.96, y: 8.23), controlPoint2: CGPoint(x: 12.02, y: 8.37))
        bezier2Path.addCurve(to: CGPoint(x: 11.5, y: 9.03), controlPoint1: CGPoint(x: 12.02, y: 8.8), controlPoint2: CGPoint(x: 11.79, y: 9.03))
        bezier2Path.addCurve(to: CGPoint(x: 11.31, y: 8.99), controlPoint1: CGPoint(x: 11.43, y: 9.03), controlPoint2: CGPoint(x: 11.37, y: 9.02))
        bezier2Path.addLine(to: CGPoint(x: 11.31, y: 8.99))
        bezier2Path.addLine(to: CGPoint(x: 8.58, y: 8))
        bezier2Path.addLine(to: CGPoint(x: 8.59, y: 8.01))
        bezier2Path.addCurve(to: CGPoint(x: 8.49, y: 8), controlPoint1: CGPoint(x: 8.56, y: 8), controlPoint2: CGPoint(x: 8.52, y: 8))
        bezier2Path.addCurve(to: CGPoint(x: 8.01, y: 8.53), controlPoint1: CGPoint(x: 8.2, y: 8), controlPoint2: CGPoint(x: 8.01, y: 8.23))
        bezier2Path.addCurve(to: CGPoint(x: 8, y: 8.73), controlPoint1: CGPoint(x: 8.01, y: 8.59), controlPoint2: CGPoint(x: 8, y: 8.66))
        bezier2Path.addLine(to: CGPoint(x: 8, y: 8.72))
        bezier2Path.addLine(to: CGPoint(x: 8.01, y: 9.99))
        bezier2Path.usesEvenOddFillRule = true
        primaryColor.setFill()
        bezier2Path.fill()

        context.restoreGState()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneRightNotLeftOrStraight(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group
        context.saveGState()
        context.translateBy(x: frame.minX + 14.98, y: frame.minY + 14.42)
        context.scaleBy(x: scaleX, y: 1)



        //// Group 2
        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: -1.98, y: -5.42, width: 4, height: 18))
        secondaryColor.setFill()
        rectanglePath.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 0.04, y: -12.42))
        bezierPath.addCurve(to: CGPoint(x: 5.88, y: -5.9), controlPoint1: CGPoint(x: 0.08, y: -12.38), controlPoint2: CGPoint(x: 5.76, y: -6.04))
        bezierPath.addCurve(to: CGPoint(x: 6.04, y: -5.6), controlPoint1: CGPoint(x: 5.98, y: -5.83), controlPoint2: CGPoint(x: 6.04, y: -5.72))
        bezierPath.addCurve(to: CGPoint(x: 5.52, y: -5.19), controlPoint1: CGPoint(x: 6.04, y: -5.37), controlPoint2: CGPoint(x: 5.81, y: -5.19))
        bezierPath.addCurve(to: CGPoint(x: 5.33, y: -5.21), controlPoint1: CGPoint(x: 5.46, y: -5.19), controlPoint2: CGPoint(x: 5.39, y: -5.2))
        bezierPath.addCurve(to: CGPoint(x: 2.61, y: -6.01), controlPoint1: CGPoint(x: 5.22, y: -5.25), controlPoint2: CGPoint(x: 2.72, y: -5.98))
        bezierPath.addCurve(to: CGPoint(x: 2.03, y: -5.59), controlPoint1: CGPoint(x: 2.22, y: -6.01), controlPoint2: CGPoint(x: 2.03, y: -5.82))
        bezierPath.addCurve(to: CGPoint(x: 2.03, y: -5.43), controlPoint1: CGPoint(x: 2.03, y: -5.54), controlPoint2: CGPoint(x: 2.03, y: -5.48))
        bezierPath.addCurve(to: CGPoint(x: 2.03, y: -4.42), controlPoint1: CGPoint(x: 2.02, y: -5.37), controlPoint2: CGPoint(x: 2.03, y: -4.42))
        bezierPath.addLine(to: CGPoint(x: -1.97, y: -4.47))
        bezierPath.addCurve(to: CGPoint(x: -1.96, y: -5.48), controlPoint1: CGPoint(x: -1.97, y: -4.47), controlPoint2: CGPoint(x: -1.96, y: -5.41))
        bezierPath.addCurve(to: CGPoint(x: -1.97, y: -5.64), controlPoint1: CGPoint(x: -1.97, y: -5.53), controlPoint2: CGPoint(x: -1.97, y: -5.59))
        bezierPath.addCurve(to: CGPoint(x: -2.45, y: -6.06), controlPoint1: CGPoint(x: -1.97, y: -5.87), controlPoint2: CGPoint(x: -2.16, y: -6.06))
        bezierPath.addCurve(to: CGPoint(x: -5.27, y: -5.27), controlPoint1: CGPoint(x: -2.66, y: -6.03), controlPoint2: CGPoint(x: -5.16, y: -5.3))
        bezierPath.addCurve(to: CGPoint(x: -5.46, y: -5.24), controlPoint1: CGPoint(x: -5.33, y: -5.25), controlPoint2: CGPoint(x: -5.4, y: -5.24))
        bezierPath.addCurve(to: CGPoint(x: -5.98, y: -5.64), controlPoint1: CGPoint(x: -5.75, y: -5.24), controlPoint2: CGPoint(x: -5.98, y: -5.42))
        bezierPath.addCurve(to: CGPoint(x: -5.82, y: -5.95), controlPoint1: CGPoint(x: -5.98, y: -5.77), controlPoint2: CGPoint(x: -5.92, y: -5.88))
        bezierPath.addCurve(to: CGPoint(x: 0.04, y: -12.42), controlPoint1: CGPoint(x: -5.7, y: -6.09), controlPoint2: CGPoint(x: -0.01, y: -12.38))
        bezierPath.addLine(to: CGPoint(x: 0.04, y: -12.42))
        bezierPath.close()
        secondaryColor.setFill()
        bezierPath.fill()




        //// Group 4
        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: -5.71, y: 0.17))
        bezier4Path.addLine(to: CGPoint(x: -6.73, y: 0.17))
        bezier4Path.addLine(to: CGPoint(x: -6.73, y: 0.17))
        bezier4Path.addCurve(to: CGPoint(x: -6.89, y: 0.17), controlPoint1: CGPoint(x: -6.78, y: 0.17), controlPoint2: CGPoint(x: -6.84, y: 0.17))
        bezier4Path.addCurve(to: CGPoint(x: -7.32, y: -0.32), controlPoint1: CGPoint(x: -7.13, y: 0.17), controlPoint2: CGPoint(x: -7.32, y: -0.03))
        bezier4Path.addCurve(to: CGPoint(x: -7.31, y: -0.41), controlPoint1: CGPoint(x: -7.32, y: -0.35), controlPoint2: CGPoint(x: -7.32, y: -0.38))
        bezier4Path.addLine(to: CGPoint(x: -7.32, y: -0.41))
        bezier4Path.addLine(to: CGPoint(x: -6.51, y: -3.14))
        bezier4Path.addLine(to: CGPoint(x: -6.51, y: -3.13))
        bezier4Path.addCurve(to: CGPoint(x: -6.48, y: -3.33), controlPoint1: CGPoint(x: -6.49, y: -3.19), controlPoint2: CGPoint(x: -6.48, y: -3.26))
        bezier4Path.addCurve(to: CGPoint(x: -6.9, y: -3.84), controlPoint1: CGPoint(x: -6.48, y: -3.61), controlPoint2: CGPoint(x: -6.67, y: -3.84))
        bezier4Path.addCurve(to: CGPoint(x: -7.21, y: -3.68), controlPoint1: CGPoint(x: -7.02, y: -3.84), controlPoint2: CGPoint(x: -7.13, y: -3.78))
        bezier4Path.addLine(to: CGPoint(x: -7.21, y: -3.68))
        bezier4Path.addLine(to: CGPoint(x: -12.95, y: 2.17))
        bezier4Path.addLine(to: CGPoint(x: -7.16, y: 8.02))
        bezier4Path.addLine(to: CGPoint(x: -7.16, y: 8.01))
        bezier4Path.addCurve(to: CGPoint(x: -6.85, y: 8.18), controlPoint1: CGPoint(x: -7.08, y: 8.11), controlPoint2: CGPoint(x: -6.97, y: 8.18))
        bezier4Path.addCurve(to: CGPoint(x: -6.43, y: 7.66), controlPoint1: CGPoint(x: -6.62, y: 8.18), controlPoint2: CGPoint(x: -6.43, y: 7.94))
        bezier4Path.addCurve(to: CGPoint(x: -6.46, y: 7.46), controlPoint1: CGPoint(x: -6.43, y: 7.59), controlPoint2: CGPoint(x: -6.44, y: 7.52))
        bezier4Path.addLine(to: CGPoint(x: -6.46, y: 7.47))
        bezier4Path.addLine(to: CGPoint(x: -7.27, y: 4.74))
        bezier4Path.addLine(to: CGPoint(x: -7.26, y: 4.74))
        bezier4Path.addCurve(to: CGPoint(x: -7.27, y: 4.65), controlPoint1: CGPoint(x: -7.27, y: 4.71), controlPoint2: CGPoint(x: -7.27, y: 4.68))
        bezier4Path.addCurve(to: CGPoint(x: -6.84, y: 4.17), controlPoint1: CGPoint(x: -7.27, y: 4.36), controlPoint2: CGPoint(x: -7.08, y: 4.17))
        bezier4Path.addCurve(to: CGPoint(x: -6.68, y: 4.16), controlPoint1: CGPoint(x: -6.79, y: 4.17), controlPoint2: CGPoint(x: -6.73, y: 4.16))
        bezier4Path.addLine(to: CGPoint(x: -6.68, y: 4.16))
        bezier4Path.addLine(to: CGPoint(x: -5.66, y: 4.16))
        bezier4Path.usesEvenOddFillRule = true
        secondaryColor.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: -0.01, y: 12.58))
        bezier5Path.addLine(to: CGPoint(x: -0.01, y: 8.45))
        bezier5Path.addCurve(to: CGPoint(x: -1.61, y: 4.19), controlPoint1: CGPoint(x: -0.01, y: 6.81), controlPoint2: CGPoint(x: -0.58, y: 5.23))
        bezier5Path.addCurve(to: CGPoint(x: -5.54, y: 2.19), controlPoint1: CGPoint(x: -2.61, y: 3.19), controlPoint2: CGPoint(x: -3.99, y: 2.19))
        bezier5Path.addLine(to: CGPoint(x: -7.31, y: 2.19))
        secondaryColor.setStroke()
        bezier5Path.lineWidth = 4
        bezier5Path.stroke()




        //// Group 3
        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 5.75, y: 0.17))
        bezier2Path.addLine(to: CGPoint(x: 6.77, y: 0.17))
        bezier2Path.addLine(to: CGPoint(x: 6.77, y: 0.17))
        bezier2Path.addCurve(to: CGPoint(x: 6.93, y: 0.17), controlPoint1: CGPoint(x: 6.82, y: 0.17), controlPoint2: CGPoint(x: 6.88, y: 0.17))
        bezier2Path.addCurve(to: CGPoint(x: 7.36, y: -0.32), controlPoint1: CGPoint(x: 7.17, y: 0.17), controlPoint2: CGPoint(x: 7.36, y: -0.03))
        bezier2Path.addCurve(to: CGPoint(x: 7.35, y: -0.41), controlPoint1: CGPoint(x: 7.36, y: -0.35), controlPoint2: CGPoint(x: 7.36, y: -0.38))
        bezier2Path.addLine(to: CGPoint(x: 7.36, y: -0.41))
        bezier2Path.addLine(to: CGPoint(x: 6.55, y: -3.14))
        bezier2Path.addLine(to: CGPoint(x: 6.55, y: -3.13))
        bezier2Path.addCurve(to: CGPoint(x: 6.52, y: -3.33), controlPoint1: CGPoint(x: 6.53, y: -3.19), controlPoint2: CGPoint(x: 6.52, y: -3.26))
        bezier2Path.addCurve(to: CGPoint(x: 6.94, y: -3.84), controlPoint1: CGPoint(x: 6.52, y: -3.61), controlPoint2: CGPoint(x: 6.71, y: -3.84))
        bezier2Path.addCurve(to: CGPoint(x: 7.25, y: -3.68), controlPoint1: CGPoint(x: 7.06, y: -3.84), controlPoint2: CGPoint(x: 7.17, y: -3.78))
        bezier2Path.addLine(to: CGPoint(x: 7.25, y: -3.68))
        bezier2Path.addLine(to: CGPoint(x: 12.99, y: 2.17))
        bezier2Path.addLine(to: CGPoint(x: 7.2, y: 8.02))
        bezier2Path.addLine(to: CGPoint(x: 7.2, y: 8.01))
        bezier2Path.addCurve(to: CGPoint(x: 6.89, y: 8.18), controlPoint1: CGPoint(x: 7.12, y: 8.11), controlPoint2: CGPoint(x: 7.01, y: 8.18))
        bezier2Path.addCurve(to: CGPoint(x: 6.47, y: 7.66), controlPoint1: CGPoint(x: 6.66, y: 8.18), controlPoint2: CGPoint(x: 6.47, y: 7.94))
        bezier2Path.addCurve(to: CGPoint(x: 6.5, y: 7.46), controlPoint1: CGPoint(x: 6.47, y: 7.59), controlPoint2: CGPoint(x: 6.48, y: 7.52))
        bezier2Path.addLine(to: CGPoint(x: 6.5, y: 7.47))
        bezier2Path.addLine(to: CGPoint(x: 7.31, y: 4.74))
        bezier2Path.addLine(to: CGPoint(x: 7.3, y: 4.74))
        bezier2Path.addCurve(to: CGPoint(x: 7.31, y: 4.65), controlPoint1: CGPoint(x: 7.31, y: 4.71), controlPoint2: CGPoint(x: 7.31, y: 4.68))
        bezier2Path.addCurve(to: CGPoint(x: 6.88, y: 4.17), controlPoint1: CGPoint(x: 7.31, y: 4.36), controlPoint2: CGPoint(x: 7.12, y: 4.17))
        bezier2Path.addCurve(to: CGPoint(x: 6.72, y: 4.16), controlPoint1: CGPoint(x: 6.83, y: 4.17), controlPoint2: CGPoint(x: 6.77, y: 4.16))
        bezier2Path.addLine(to: CGPoint(x: 6.72, y: 4.16))
        bezier2Path.addLine(to: CGPoint(x: 5.7, y: 4.16))
        bezier2Path.usesEvenOddFillRule = true
        primaryColor.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 0.05, y: 12.58))
        bezier3Path.addLine(to: CGPoint(x: 0.05, y: 8.45))
        bezier3Path.addCurve(to: CGPoint(x: 1.65, y: 4.19), controlPoint1: CGPoint(x: 0.05, y: 6.81), controlPoint2: CGPoint(x: 0.62, y: 5.23))
        bezier3Path.addCurve(to: CGPoint(x: 5.58, y: 2.19), controlPoint1: CGPoint(x: 2.65, y: 3.19), controlPoint2: CGPoint(x: 4.03, y: 2.19))
        bezier3Path.addLine(to: CGPoint(x: 7.35, y: 2.19))
        primaryColor.setStroke()
        bezier3Path.lineWidth = 4
        bezier3Path.stroke()





        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneStraightNotLeftOrRight(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group
        context.saveGState()
        context.translateBy(x: frame.minX + 14.98, y: frame.minY + 14.42)
        context.scaleBy(x: scaleX, y: 1)



        //// Group 4
        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: -5.71, y: 0.17))
        bezier4Path.addLine(to: CGPoint(x: -6.73, y: 0.17))
        bezier4Path.addLine(to: CGPoint(x: -6.73, y: 0.17))
        bezier4Path.addCurve(to: CGPoint(x: -6.89, y: 0.17), controlPoint1: CGPoint(x: -6.78, y: 0.17), controlPoint2: CGPoint(x: -6.84, y: 0.17))
        bezier4Path.addCurve(to: CGPoint(x: -7.32, y: -0.32), controlPoint1: CGPoint(x: -7.13, y: 0.17), controlPoint2: CGPoint(x: -7.32, y: -0.03))
        bezier4Path.addCurve(to: CGPoint(x: -7.31, y: -0.41), controlPoint1: CGPoint(x: -7.32, y: -0.35), controlPoint2: CGPoint(x: -7.32, y: -0.38))
        bezier4Path.addLine(to: CGPoint(x: -7.32, y: -0.41))
        bezier4Path.addLine(to: CGPoint(x: -6.51, y: -3.14))
        bezier4Path.addLine(to: CGPoint(x: -6.51, y: -3.13))
        bezier4Path.addCurve(to: CGPoint(x: -6.48, y: -3.33), controlPoint1: CGPoint(x: -6.49, y: -3.19), controlPoint2: CGPoint(x: -6.48, y: -3.26))
        bezier4Path.addCurve(to: CGPoint(x: -6.9, y: -3.84), controlPoint1: CGPoint(x: -6.48, y: -3.61), controlPoint2: CGPoint(x: -6.67, y: -3.84))
        bezier4Path.addCurve(to: CGPoint(x: -7.21, y: -3.68), controlPoint1: CGPoint(x: -7.02, y: -3.84), controlPoint2: CGPoint(x: -7.13, y: -3.78))
        bezier4Path.addLine(to: CGPoint(x: -7.21, y: -3.68))
        bezier4Path.addLine(to: CGPoint(x: -12.95, y: 2.17))
        bezier4Path.addLine(to: CGPoint(x: -7.16, y: 8.02))
        bezier4Path.addLine(to: CGPoint(x: -7.16, y: 8.01))
        bezier4Path.addCurve(to: CGPoint(x: -6.85, y: 8.18), controlPoint1: CGPoint(x: -7.08, y: 8.11), controlPoint2: CGPoint(x: -6.97, y: 8.18))
        bezier4Path.addCurve(to: CGPoint(x: -6.43, y: 7.66), controlPoint1: CGPoint(x: -6.62, y: 8.18), controlPoint2: CGPoint(x: -6.43, y: 7.94))
        bezier4Path.addCurve(to: CGPoint(x: -6.46, y: 7.46), controlPoint1: CGPoint(x: -6.43, y: 7.59), controlPoint2: CGPoint(x: -6.44, y: 7.52))
        bezier4Path.addLine(to: CGPoint(x: -6.46, y: 7.47))
        bezier4Path.addLine(to: CGPoint(x: -7.27, y: 4.74))
        bezier4Path.addLine(to: CGPoint(x: -7.26, y: 4.74))
        bezier4Path.addCurve(to: CGPoint(x: -7.27, y: 4.65), controlPoint1: CGPoint(x: -7.27, y: 4.71), controlPoint2: CGPoint(x: -7.27, y: 4.68))
        bezier4Path.addCurve(to: CGPoint(x: -6.84, y: 4.17), controlPoint1: CGPoint(x: -7.27, y: 4.36), controlPoint2: CGPoint(x: -7.08, y: 4.17))
        bezier4Path.addCurve(to: CGPoint(x: -6.68, y: 4.16), controlPoint1: CGPoint(x: -6.79, y: 4.17), controlPoint2: CGPoint(x: -6.73, y: 4.16))
        bezier4Path.addLine(to: CGPoint(x: -6.68, y: 4.16))
        bezier4Path.addLine(to: CGPoint(x: -5.66, y: 4.16))
        bezier4Path.usesEvenOddFillRule = true
        secondaryColor.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: -0.01, y: 12.58))
        bezier5Path.addLine(to: CGPoint(x: -0.01, y: 8.45))
        bezier5Path.addCurve(to: CGPoint(x: -1.61, y: 4.19), controlPoint1: CGPoint(x: -0.01, y: 6.81), controlPoint2: CGPoint(x: -0.58, y: 5.23))
        bezier5Path.addCurve(to: CGPoint(x: -5.54, y: 2.19), controlPoint1: CGPoint(x: -2.61, y: 3.19), controlPoint2: CGPoint(x: -3.99, y: 2.19))
        bezier5Path.addLine(to: CGPoint(x: -7.31, y: 2.19))
        secondaryColor.setStroke()
        bezier5Path.lineWidth = 4
        bezier5Path.stroke()




        //// Group 3
        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 5.75, y: 0.17))
        bezier2Path.addLine(to: CGPoint(x: 6.77, y: 0.17))
        bezier2Path.addLine(to: CGPoint(x: 6.77, y: 0.17))
        bezier2Path.addCurve(to: CGPoint(x: 6.93, y: 0.17), controlPoint1: CGPoint(x: 6.82, y: 0.17), controlPoint2: CGPoint(x: 6.88, y: 0.17))
        bezier2Path.addCurve(to: CGPoint(x: 7.36, y: -0.32), controlPoint1: CGPoint(x: 7.17, y: 0.17), controlPoint2: CGPoint(x: 7.36, y: -0.03))
        bezier2Path.addCurve(to: CGPoint(x: 7.35, y: -0.41), controlPoint1: CGPoint(x: 7.36, y: -0.35), controlPoint2: CGPoint(x: 7.36, y: -0.38))
        bezier2Path.addLine(to: CGPoint(x: 7.36, y: -0.41))
        bezier2Path.addLine(to: CGPoint(x: 6.55, y: -3.14))
        bezier2Path.addLine(to: CGPoint(x: 6.55, y: -3.13))
        bezier2Path.addCurve(to: CGPoint(x: 6.52, y: -3.33), controlPoint1: CGPoint(x: 6.53, y: -3.19), controlPoint2: CGPoint(x: 6.52, y: -3.26))
        bezier2Path.addCurve(to: CGPoint(x: 6.94, y: -3.84), controlPoint1: CGPoint(x: 6.52, y: -3.61), controlPoint2: CGPoint(x: 6.71, y: -3.84))
        bezier2Path.addCurve(to: CGPoint(x: 7.25, y: -3.68), controlPoint1: CGPoint(x: 7.06, y: -3.84), controlPoint2: CGPoint(x: 7.17, y: -3.78))
        bezier2Path.addLine(to: CGPoint(x: 7.25, y: -3.68))
        bezier2Path.addLine(to: CGPoint(x: 12.99, y: 2.17))
        bezier2Path.addLine(to: CGPoint(x: 7.2, y: 8.02))
        bezier2Path.addLine(to: CGPoint(x: 7.2, y: 8.01))
        bezier2Path.addCurve(to: CGPoint(x: 6.89, y: 8.18), controlPoint1: CGPoint(x: 7.12, y: 8.11), controlPoint2: CGPoint(x: 7.01, y: 8.18))
        bezier2Path.addCurve(to: CGPoint(x: 6.47, y: 7.66), controlPoint1: CGPoint(x: 6.66, y: 8.18), controlPoint2: CGPoint(x: 6.47, y: 7.94))
        bezier2Path.addCurve(to: CGPoint(x: 6.5, y: 7.46), controlPoint1: CGPoint(x: 6.47, y: 7.59), controlPoint2: CGPoint(x: 6.48, y: 7.52))
        bezier2Path.addLine(to: CGPoint(x: 6.5, y: 7.47))
        bezier2Path.addLine(to: CGPoint(x: 7.31, y: 4.74))
        bezier2Path.addLine(to: CGPoint(x: 7.3, y: 4.74))
        bezier2Path.addCurve(to: CGPoint(x: 7.31, y: 4.65), controlPoint1: CGPoint(x: 7.31, y: 4.71), controlPoint2: CGPoint(x: 7.31, y: 4.68))
        bezier2Path.addCurve(to: CGPoint(x: 6.88, y: 4.17), controlPoint1: CGPoint(x: 7.31, y: 4.36), controlPoint2: CGPoint(x: 7.12, y: 4.17))
        bezier2Path.addCurve(to: CGPoint(x: 6.72, y: 4.16), controlPoint1: CGPoint(x: 6.83, y: 4.17), controlPoint2: CGPoint(x: 6.77, y: 4.16))
        bezier2Path.addLine(to: CGPoint(x: 6.72, y: 4.16))
        bezier2Path.addLine(to: CGPoint(x: 5.7, y: 4.16))
        bezier2Path.usesEvenOddFillRule = true
        secondaryColor.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 0.05, y: 12.58))
        bezier3Path.addLine(to: CGPoint(x: 0.05, y: 8.45))
        bezier3Path.addCurve(to: CGPoint(x: 1.65, y: 4.19), controlPoint1: CGPoint(x: 0.05, y: 6.81), controlPoint2: CGPoint(x: 0.62, y: 5.23))
        bezier3Path.addCurve(to: CGPoint(x: 5.58, y: 2.19), controlPoint1: CGPoint(x: 2.65, y: 3.19), controlPoint2: CGPoint(x: 4.03, y: 2.19))
        bezier3Path.addLine(to: CGPoint(x: 7.35, y: 2.19))
        secondaryColor.setStroke()
        bezier3Path.lineWidth = 4
        bezier3Path.stroke()




        //// Group 5
        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: -1.98, y: -5.42, width: 4, height: 18))
        primaryColor.setFill()
        rectanglePath.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 0.04, y: -12.42))
        bezierPath.addCurve(to: CGPoint(x: 5.88, y: -5.9), controlPoint1: CGPoint(x: 0.08, y: -12.38), controlPoint2: CGPoint(x: 5.76, y: -6.04))
        bezierPath.addCurve(to: CGPoint(x: 6.04, y: -5.6), controlPoint1: CGPoint(x: 5.98, y: -5.83), controlPoint2: CGPoint(x: 6.04, y: -5.72))
        bezierPath.addCurve(to: CGPoint(x: 5.52, y: -5.19), controlPoint1: CGPoint(x: 6.04, y: -5.37), controlPoint2: CGPoint(x: 5.81, y: -5.19))
        bezierPath.addCurve(to: CGPoint(x: 5.33, y: -5.21), controlPoint1: CGPoint(x: 5.46, y: -5.19), controlPoint2: CGPoint(x: 5.39, y: -5.2))
        bezierPath.addCurve(to: CGPoint(x: 2.61, y: -6.01), controlPoint1: CGPoint(x: 5.22, y: -5.25), controlPoint2: CGPoint(x: 2.72, y: -5.98))
        bezierPath.addCurve(to: CGPoint(x: 2.03, y: -5.59), controlPoint1: CGPoint(x: 2.22, y: -6.01), controlPoint2: CGPoint(x: 2.03, y: -5.82))
        bezierPath.addCurve(to: CGPoint(x: 2.03, y: -5.43), controlPoint1: CGPoint(x: 2.03, y: -5.54), controlPoint2: CGPoint(x: 2.03, y: -5.48))
        bezierPath.addCurve(to: CGPoint(x: 2.03, y: -4.42), controlPoint1: CGPoint(x: 2.02, y: -5.37), controlPoint2: CGPoint(x: 2.03, y: -4.42))
        bezierPath.addLine(to: CGPoint(x: -1.97, y: -4.47))
        bezierPath.addCurve(to: CGPoint(x: -1.96, y: -5.48), controlPoint1: CGPoint(x: -1.97, y: -4.47), controlPoint2: CGPoint(x: -1.96, y: -5.41))
        bezierPath.addCurve(to: CGPoint(x: -1.97, y: -5.64), controlPoint1: CGPoint(x: -1.97, y: -5.53), controlPoint2: CGPoint(x: -1.97, y: -5.59))
        bezierPath.addCurve(to: CGPoint(x: -2.45, y: -6.06), controlPoint1: CGPoint(x: -1.97, y: -5.87), controlPoint2: CGPoint(x: -2.16, y: -6.06))
        bezierPath.addCurve(to: CGPoint(x: -5.27, y: -5.27), controlPoint1: CGPoint(x: -2.66, y: -6.03), controlPoint2: CGPoint(x: -5.16, y: -5.3))
        bezierPath.addCurve(to: CGPoint(x: -5.46, y: -5.24), controlPoint1: CGPoint(x: -5.33, y: -5.25), controlPoint2: CGPoint(x: -5.4, y: -5.24))
        bezierPath.addCurve(to: CGPoint(x: -5.98, y: -5.64), controlPoint1: CGPoint(x: -5.75, y: -5.24), controlPoint2: CGPoint(x: -5.98, y: -5.42))
        bezierPath.addCurve(to: CGPoint(x: -5.82, y: -5.95), controlPoint1: CGPoint(x: -5.98, y: -5.77), controlPoint2: CGPoint(x: -5.92, y: -5.88))
        bezierPath.addCurve(to: CGPoint(x: 0.04, y: -12.42), controlPoint1: CGPoint(x: -5.7, y: -6.09), controlPoint2: CGPoint(x: -0.01, y: -12.38))
        bezierPath.addLine(to: CGPoint(x: 0.04, y: -12.42))
        bezierPath.close()
        primaryColor.setFill()
        bezierPath.fill()





        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneUturnNotRight(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group 2
        context.saveGState()
        context.translateBy(x: frame.minX + 12.98, y: frame.minY + 14.02)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 7.47, y: -11.01))
        bezier3Path.addCurve(to: CGPoint(x: 7.79, y: -10.85), controlPoint1: CGPoint(x: 7.57, y: -11.01), controlPoint2: CGPoint(x: 7.7, y: -10.95))
        bezier3Path.addCurve(to: CGPoint(x: 14.87, y: -5), controlPoint1: CGPoint(x: 7.95, y: -10.72), controlPoint2: CGPoint(x: 14.87, y: -5))
        bezier3Path.addCurve(to: CGPoint(x: 7.73, y: 0.84), controlPoint1: CGPoint(x: 14.87, y: -5), controlPoint2: CGPoint(x: 7.89, y: 0.71))
        bezier3Path.addCurve(to: CGPoint(x: 7.35, y: 1), controlPoint1: CGPoint(x: 7.63, y: 0.94), controlPoint2: CGPoint(x: 7.5, y: 1))
        bezier3Path.addCurve(to: CGPoint(x: 6.84, y: 0.49), controlPoint1: CGPoint(x: 7.07, y: 1), controlPoint2: CGPoint(x: 6.84, y: 0.77))
        bezier3Path.addCurve(to: CGPoint(x: 6.87, y: 0.3), controlPoint1: CGPoint(x: 6.84, y: 0.42), controlPoint2: CGPoint(x: 6.85, y: 0.36))
        bezier3Path.addCurve(to: CGPoint(x: 7.86, y: -2.43), controlPoint1: CGPoint(x: 6.92, y: 0.18), controlPoint2: CGPoint(x: 7.82, y: -2.32))
        bezier3Path.addCurve(to: CGPoint(x: 7.34, y: -3.01), controlPoint1: CGPoint(x: 7.87, y: -2.81), controlPoint2: CGPoint(x: 7.63, y: -3.01))
        bezier3Path.addCurve(to: CGPoint(x: 7.15, y: -3.01), controlPoint1: CGPoint(x: 7.28, y: -3.01), controlPoint2: CGPoint(x: 7.21, y: -3.01))
        bezier3Path.addCurve(to: CGPoint(x: 5.88, y: -3.01), controlPoint1: CGPoint(x: 7.06, y: -3.01), controlPoint2: CGPoint(x: 5.88, y: -3.01))
        bezier3Path.addLine(to: CGPoint(x: 5.94, y: -7))
        bezier3Path.addCurve(to: CGPoint(x: 7.2, y: -7), controlPoint1: CGPoint(x: 5.94, y: -7), controlPoint2: CGPoint(x: 7.12, y: -7))
        bezier3Path.addCurve(to: CGPoint(x: 7.4, y: -7.01), controlPoint1: CGPoint(x: 7.27, y: -7), controlPoint2: CGPoint(x: 7.34, y: -7.01))
        bezier3Path.addCurve(to: CGPoint(x: 7.93, y: -7.49), controlPoint1: CGPoint(x: 7.7, y: -7.01), controlPoint2: CGPoint(x: 7.93, y: -7.2))
        bezier3Path.addCurve(to: CGPoint(x: 6.94, y: -10.3), controlPoint1: CGPoint(x: 7.89, y: -7.69), controlPoint2: CGPoint(x: 6.98, y: -10.19))
        bezier3Path.addCurve(to: CGPoint(x: 6.9, y: -10.5), controlPoint1: CGPoint(x: 6.91, y: -10.37), controlPoint2: CGPoint(x: 6.9, y: -10.43))
        bezier3Path.addCurve(to: CGPoint(x: 7.41, y: -11.02), controlPoint1: CGPoint(x: 6.9, y: -10.78), controlPoint2: CGPoint(x: 7.13, y: -11.01))
        bezier3Path.addLine(to: CGPoint(x: 7.47, y: -11.01))
        bezier3Path.close()
        secondaryColor.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: -5.98, y: -0.02))
        bezier4Path.addLine(to: CGPoint(x: -5.98, y: -0.02))
        bezier4Path.addCurve(to: CGPoint(x: -0.98, y: -5.02), controlPoint1: CGPoint(x: -5.98, y: -0.02), controlPoint2: CGPoint(x: -5.98, y: -5.02))
        bezier4Path.addLine(to: CGPoint(x: 6.02, y: -5.02))
        secondaryColor.setStroke()
        bezier4Path.lineWidth = 4
        bezier4Path.stroke()



        context.restoreGState()


        //// Group
        context.saveGState()
        context.translateBy(x: frame.minX + 12.89, y: frame.minY + 15.95)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 4.11, y: 5.33))
        bezierPath.addLine(to: CGPoint(x: 4.11, y: -1.82))
        bezierPath.addCurve(to: CGPoint(x: -0.89, y: -6.95), controlPoint1: CGPoint(x: 4.11, y: -3.17), controlPoint2: CGPoint(x: 4.11, y: -6.95))
        bezierPath.addCurve(to: CGPoint(x: -5.89, y: -2.04), controlPoint1: CGPoint(x: -5.89, y: -6.95), controlPoint2: CGPoint(x: -5.89, y: -2.04))
        bezierPath.addLine(to: CGPoint(x: -5.89, y: 11.05))
        primaryColor.setStroke()
        bezierPath.lineWidth = 4
        bezierPath.stroke()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 6.13, y: -0.9))
        bezier2Path.addCurve(to: CGPoint(x: 6.12, y: 0.36), controlPoint1: CGPoint(x: 6.13, y: -0.9), controlPoint2: CGPoint(x: 6.12, y: 0.28))
        bezier2Path.addCurve(to: CGPoint(x: 6.13, y: 0.56), controlPoint1: CGPoint(x: 6.12, y: 0.43), controlPoint2: CGPoint(x: 6.13, y: 0.5))
        bezier2Path.addCurve(to: CGPoint(x: 6.61, y: 1.09), controlPoint1: CGPoint(x: 6.13, y: 0.85), controlPoint2: CGPoint(x: 6.32, y: 1.09))
        bezier2Path.addCurve(to: CGPoint(x: 9.43, y: 0.09), controlPoint1: CGPoint(x: 6.81, y: 1.04), controlPoint2: CGPoint(x: 9.31, y: 0.13))
        bezier2Path.addCurve(to: CGPoint(x: 9.62, y: 0.06), controlPoint1: CGPoint(x: 9.49, y: 0.07), controlPoint2: CGPoint(x: 9.55, y: 0.06))
        bezier2Path.addCurve(to: CGPoint(x: 10.11, y: 0.4), controlPoint1: CGPoint(x: 9.84, y: 0.06), controlPoint2: CGPoint(x: 10.04, y: 0.2))
        bezier2Path.addLine(to: CGPoint(x: 10.11, y: 0.57))
        bezier2Path.addLine(to: CGPoint(x: 10.11, y: 0.75))
        bezier2Path.addCurve(to: CGPoint(x: 9.98, y: 0.95), controlPoint1: CGPoint(x: 10.08, y: 0.82), controlPoint2: CGPoint(x: 10.03, y: 0.89))
        bezier2Path.addCurve(to: CGPoint(x: 4.12, y: 8.02), controlPoint1: CGPoint(x: 9.85, y: 1.11), controlPoint2: CGPoint(x: 4.12, y: 8.02))
        bezier2Path.addCurve(to: CGPoint(x: 0.41, y: 3.5), controlPoint1: CGPoint(x: 4.12, y: 8.02), controlPoint2: CGPoint(x: 2.08, y: 5.53))
        bezier2Path.addCurve(to: CGPoint(x: -1.72, y: 0.89), controlPoint1: CGPoint(x: -0.71, y: 2.12), controlPoint2: CGPoint(x: -1.67, y: 0.95))
        bezier2Path.addCurve(to: CGPoint(x: -1.88, y: 0.51), controlPoint1: CGPoint(x: -1.82, y: 0.79), controlPoint2: CGPoint(x: -1.88, y: 0.66))
        bezier2Path.addCurve(to: CGPoint(x: -1.37, y: -0.01), controlPoint1: CGPoint(x: -1.88, y: 0.22), controlPoint2: CGPoint(x: -1.65, y: -0.01))
        bezier2Path.addCurve(to: CGPoint(x: -1.18, y: 0.03), controlPoint1: CGPoint(x: -1.3, y: -0.01), controlPoint2: CGPoint(x: -1.23, y: 0.01))
        bezier2Path.addCurve(to: CGPoint(x: 1.55, y: 1.02), controlPoint1: CGPoint(x: -1.06, y: 0.07), controlPoint2: CGPoint(x: 1.44, y: 0.98))
        bezier2Path.addCurve(to: CGPoint(x: 2.13, y: 0.5), controlPoint1: CGPoint(x: 1.94, y: 1.02), controlPoint2: CGPoint(x: 2.13, y: 0.79))
        bezier2Path.addCurve(to: CGPoint(x: 2.13, y: 0.3), controlPoint1: CGPoint(x: 2.13, y: 0.43), controlPoint2: CGPoint(x: 2.13, y: 0.36))
        bezier2Path.addCurve(to: CGPoint(x: 2.13, y: -0.96), controlPoint1: CGPoint(x: 2.13, y: 0.22), controlPoint2: CGPoint(x: 2.13, y: -0.96))
        bezier2Path.addLine(to: CGPoint(x: 6.13, y: -0.9))
        bezier2Path.close()
        primaryColor.setFill()
        bezier2Path.fill()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneRightNotLeft(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group 2
        context.saveGState()
        context.translateBy(x: frame.minX + 6.13, y: frame.minY + 15.02)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 2.92, y: -11.01))
        bezier3Path.addCurve(to: CGPoint(x: 2.66, y: -10.85), controlPoint1: CGPoint(x: 2.84, y: -11.01), controlPoint2: CGPoint(x: 2.74, y: -10.95))
        bezier3Path.addCurve(to: CGPoint(x: -2.98, y: -5), controlPoint1: CGPoint(x: 2.54, y: -10.72), controlPoint2: CGPoint(x: -2.98, y: -5))
        bezier3Path.addCurve(to: CGPoint(x: 2.71, y: 0.84), controlPoint1: CGPoint(x: -2.98, y: -5), controlPoint2: CGPoint(x: 2.59, y: 0.71))
        bezier3Path.addCurve(to: CGPoint(x: 3.01, y: 1), controlPoint1: CGPoint(x: 2.79, y: 0.94), controlPoint2: CGPoint(x: 2.9, y: 1))
        bezier3Path.addCurve(to: CGPoint(x: 3.42, y: 0.49), controlPoint1: CGPoint(x: 3.24, y: 1), controlPoint2: CGPoint(x: 3.42, y: 0.77))
        bezier3Path.addCurve(to: CGPoint(x: 3.4, y: 0.3), controlPoint1: CGPoint(x: 3.42, y: 0.42), controlPoint2: CGPoint(x: 3.41, y: 0.36))
        bezier3Path.addCurve(to: CGPoint(x: 2.61, y: -2.43), controlPoint1: CGPoint(x: 3.36, y: 0.18), controlPoint2: CGPoint(x: 2.64, y: -2.32))
        bezier3Path.addCurve(to: CGPoint(x: 3.02, y: -3.01), controlPoint1: CGPoint(x: 2.6, y: -2.81), controlPoint2: CGPoint(x: 2.79, y: -3.01))
        bezier3Path.addCurve(to: CGPoint(x: 3.18, y: -3.01), controlPoint1: CGPoint(x: 3.07, y: -3.01), controlPoint2: CGPoint(x: 3.13, y: -3.01))
        bezier3Path.addCurve(to: CGPoint(x: 4.19, y: -3.01), controlPoint1: CGPoint(x: 3.24, y: -3.01), controlPoint2: CGPoint(x: 4.19, y: -3.01))
        bezier3Path.addLine(to: CGPoint(x: 4.14, y: -7))
        bezier3Path.addCurve(to: CGPoint(x: 3.13, y: -7), controlPoint1: CGPoint(x: 4.14, y: -7), controlPoint2: CGPoint(x: 3.2, y: -7))
        bezier3Path.addCurve(to: CGPoint(x: 2.97, y: -7.01), controlPoint1: CGPoint(x: 3.08, y: -7), controlPoint2: CGPoint(x: 3.02, y: -7.01))
        bezier3Path.addCurve(to: CGPoint(x: 2.55, y: -7.49), controlPoint1: CGPoint(x: 2.74, y: -7.01), controlPoint2: CGPoint(x: 2.55, y: -7.2))
        bezier3Path.addCurve(to: CGPoint(x: 3.34, y: -10.3), controlPoint1: CGPoint(x: 2.59, y: -7.69), controlPoint2: CGPoint(x: 3.31, y: -10.19))
        bezier3Path.addCurve(to: CGPoint(x: 3.38, y: -10.5), controlPoint1: CGPoint(x: 3.36, y: -10.37), controlPoint2: CGPoint(x: 3.38, y: -10.43))
        bezier3Path.addCurve(to: CGPoint(x: 2.97, y: -11.02), controlPoint1: CGPoint(x: 3.38, y: -10.78), controlPoint2: CGPoint(x: 3.19, y: -11.01))
        bezier3Path.addLine(to: CGPoint(x: 2.92, y: -11.01))
        bezier3Path.close()
        secondaryColor.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 8.87, y: 11.98))
        bezier4Path.addLine(to: CGPoint(x: 8.82, y: -1.45))
        bezier4Path.addCurve(to: CGPoint(x: 5.72, y: -4.98), controlPoint1: CGPoint(x: 8.82, y: -1.45), controlPoint2: CGPoint(x: 8.59, y: -4.98))
        bezier4Path.addLine(to: CGPoint(x: 0.06, y: -4.98))
        secondaryColor.setStroke()
        bezier4Path.lineWidth = 4
        bezier4Path.stroke()



        context.restoreGState()


        //// Group
        context.saveGState()
        context.translateBy(x: frame.minX + 20.98, y: frame.minY + 15.02)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: -0.03, y: -11.01))
        bezierPath.addCurve(to: CGPoint(x: 0.22, y: -10.85), controlPoint1: CGPoint(x: 0.04, y: -11.01), controlPoint2: CGPoint(x: 0.15, y: -10.95))
        bezierPath.addCurve(to: CGPoint(x: 5.87, y: -5), controlPoint1: CGPoint(x: 0.35, y: -10.72), controlPoint2: CGPoint(x: 5.87, y: -5))
        bezierPath.addCurve(to: CGPoint(x: 0.17, y: 0.84), controlPoint1: CGPoint(x: 5.87, y: -5), controlPoint2: CGPoint(x: 0.3, y: 0.71))
        bezierPath.addCurve(to: CGPoint(x: -0.13, y: 1), controlPoint1: CGPoint(x: 0.1, y: 0.94), controlPoint2: CGPoint(x: -0.01, y: 1))
        bezierPath.addCurve(to: CGPoint(x: -0.54, y: 0.49), controlPoint1: CGPoint(x: -0.36, y: 1), controlPoint2: CGPoint(x: -0.54, y: 0.77))
        bezierPath.addCurve(to: CGPoint(x: -0.51, y: 0.3), controlPoint1: CGPoint(x: -0.54, y: 0.42), controlPoint2: CGPoint(x: -0.53, y: 0.36))
        bezierPath.addCurve(to: CGPoint(x: 0.28, y: -2.43), controlPoint1: CGPoint(x: -0.48, y: 0.18), controlPoint2: CGPoint(x: 0.25, y: -2.32))
        bezierPath.addCurve(to: CGPoint(x: -0.14, y: -3.01), controlPoint1: CGPoint(x: 0.28, y: -2.81), controlPoint2: CGPoint(x: 0.09, y: -3.01))
        bezierPath.addCurve(to: CGPoint(x: -0.29, y: -3.01), controlPoint1: CGPoint(x: -0.19, y: -3.01), controlPoint2: CGPoint(x: -0.25, y: -3.01))
        bezierPath.addCurve(to: CGPoint(x: -1.3, y: -3.01), controlPoint1: CGPoint(x: -0.36, y: -3.01), controlPoint2: CGPoint(x: -1.3, y: -3.01))
        bezierPath.addLine(to: CGPoint(x: -1.25, y: -7))
        bezierPath.addCurve(to: CGPoint(x: -0.25, y: -7), controlPoint1: CGPoint(x: -1.25, y: -7), controlPoint2: CGPoint(x: -0.32, y: -7))
        bezierPath.addCurve(to: CGPoint(x: -0.09, y: -7.01), controlPoint1: CGPoint(x: -0.2, y: -7), controlPoint2: CGPoint(x: -0.14, y: -7.01))
        bezierPath.addCurve(to: CGPoint(x: 0.33, y: -7.49), controlPoint1: CGPoint(x: 0.14, y: -7.01), controlPoint2: CGPoint(x: 0.33, y: -7.2))
        bezierPath.addCurve(to: CGPoint(x: -0.46, y: -10.3), controlPoint1: CGPoint(x: 0.3, y: -7.69), controlPoint2: CGPoint(x: -0.43, y: -10.19))
        bezierPath.addCurve(to: CGPoint(x: -0.49, y: -10.5), controlPoint1: CGPoint(x: -0.48, y: -10.37), controlPoint2: CGPoint(x: -0.49, y: -10.43))
        bezierPath.addCurve(to: CGPoint(x: -0.08, y: -11.02), controlPoint1: CGPoint(x: -0.49, y: -10.78), controlPoint2: CGPoint(x: -0.31, y: -11.01))
        bezierPath.addLine(to: CGPoint(x: -0.03, y: -11.01))
        bezierPath.close()
        primaryColor.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: -5.98, y: 11.98))
        bezier2Path.addLine(to: CGPoint(x: -5.93, y: -1.45))
        bezier2Path.addCurve(to: CGPoint(x: -2.84, y: -4.98), controlPoint1: CGPoint(x: -5.93, y: -1.45), controlPoint2: CGPoint(x: -5.71, y: -4.98))
        bezier2Path.addLine(to: CGPoint(x: 2.82, y: -4.98))
        primaryColor.setStroke()
        bezier2Path.lineWidth = 4
        bezier2Path.stroke()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneSharpRight(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group
        context.saveGState()
        context.translateBy(x: frame.minX + 14.98, y: frame.minY + 13.11)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 5.04, y: 0.64))
        bezier3Path.addCurve(to: CGPoint(x: -0.98, y: -6.11), controlPoint1: CGPoint(x: 5.04, y: 0.64), controlPoint2: CGPoint(x: 2.02, y: -5.11))
        bezier3Path.addCurve(to: CGPoint(x: -6.3, y: -1.5), controlPoint1: CGPoint(x: -3.98, y: -7.11), controlPoint2: CGPoint(x: -5.98, y: -5.11))
        bezier3Path.addLine(to: CGPoint(x: -6.3, y: 13.77))
        primaryColor.setStroke()
        bezier3Path.lineWidth = 4
        bezier3Path.lineJoinStyle = .round
        bezier3Path.stroke()


        //// Bezier Drawing
        context.saveGState()
        context.translateBy(x: 13.95, y: 4.03)
        context.rotate(by: 149.53 * CGFloat.pi/180)

        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 4.01, y: 9.92))
        bezierPath.addLine(to: CGPoint(x: 4.02, y: 8.66))
        bezierPath.addLine(to: CGPoint(x: 4.01, y: 8.66))
        bezierPath.addCurve(to: CGPoint(x: 4.01, y: 8.46), controlPoint1: CGPoint(x: 4.01, y: 8.6), controlPoint2: CGPoint(x: 4.01, y: 8.53))
        bezierPath.addCurve(to: CGPoint(x: 3.53, y: 7.94), controlPoint1: CGPoint(x: 4.01, y: 8.17), controlPoint2: CGPoint(x: 3.82, y: 7.94))
        bezierPath.addCurve(to: CGPoint(x: 3.43, y: 7.94), controlPoint1: CGPoint(x: 3.5, y: 7.94), controlPoint2: CGPoint(x: 3.46, y: 7.94))
        bezierPath.addLine(to: CGPoint(x: 3.44, y: 7.94))
        bezierPath.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezierPath.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezierPath.addCurve(to: CGPoint(x: 0.52, y: 8.97), controlPoint1: CGPoint(x: 0.65, y: 8.96), controlPoint2: CGPoint(x: 0.59, y: 8.97))
        bezierPath.addCurve(to: CGPoint(x: 0, y: 8.45), controlPoint1: CGPoint(x: 0.23, y: 8.97), controlPoint2: CGPoint(x: 0, y: 8.74))
        bezierPath.addCurve(to: CGPoint(x: 0.16, y: 8.07), controlPoint1: CGPoint(x: 0, y: 8.3), controlPoint2: CGPoint(x: 0.06, y: 8.17))
        bezierPath.addLine(to: CGPoint(x: 0.16, y: 8.08))
        bezierPath.addLine(to: CGPoint(x: 6.02, y: 0))
        bezierPath.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezierPath.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezierPath.addCurve(to: CGPoint(x: 12.02, y: 8.52), controlPoint1: CGPoint(x: 11.96, y: 8.23), controlPoint2: CGPoint(x: 12.02, y: 8.37))
        bezierPath.addCurve(to: CGPoint(x: 11.5, y: 9.03), controlPoint1: CGPoint(x: 12.02, y: 8.8), controlPoint2: CGPoint(x: 11.79, y: 9.03))
        bezierPath.addCurve(to: CGPoint(x: 11.31, y: 8.99), controlPoint1: CGPoint(x: 11.43, y: 9.03), controlPoint2: CGPoint(x: 11.37, y: 9.02))
        bezierPath.addLine(to: CGPoint(x: 11.31, y: 8.99))
        bezierPath.addLine(to: CGPoint(x: 8.58, y: 8))
        bezierPath.addLine(to: CGPoint(x: 8.59, y: 8.01))
        bezierPath.addCurve(to: CGPoint(x: 8.49, y: 8), controlPoint1: CGPoint(x: 8.56, y: 8), controlPoint2: CGPoint(x: 8.52, y: 8))
        bezierPath.addCurve(to: CGPoint(x: 8.01, y: 8.53), controlPoint1: CGPoint(x: 8.2, y: 8), controlPoint2: CGPoint(x: 8.01, y: 8.23))
        bezierPath.addCurve(to: CGPoint(x: 8.01, y: 8.73), controlPoint1: CGPoint(x: 8.01, y: 8.59), controlPoint2: CGPoint(x: 8.01, y: 8.66))
        bezierPath.addLine(to: CGPoint(x: 8, y: 8.72))
        bezierPath.addLine(to: CGPoint(x: 8.01, y: 9.99))
        bezierPath.usesEvenOddFillRule = true
        primaryColor.setFill()
        bezierPath.fill()

        context.restoreGState()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneStraightNotSlightRight(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group 2
        context.saveGState()
        context.translateBy(x: 10.98, y: -0.58)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 7.17, y: 10.61))
        bezier3Path.addLine(to: CGPoint(x: 4.02, y: 13.58))
        bezier3Path.addCurve(to: CGPoint(x: 0.02, y: 22.58), controlPoint1: CGPoint(x: 1.02, y: 16.58), controlPoint2: CGPoint(x: 0.02, y: 20.93))
        bezier3Path.addLine(to: CGPoint(x: 0, y: 27.6))
        secondaryColor.setStroke()
        bezier3Path.lineWidth = 4
        bezier3Path.lineJoinStyle = .round
        bezier3Path.stroke()


        //// Bezier 2 Drawing
        context.saveGState()
        context.translateBy(x: 10.25, y: -0)
        context.rotate(by: 49 * CGFloat.pi/180)

        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 4.01, y: 9.92))
        bezier2Path.addLine(to: CGPoint(x: 4.02, y: 8.66))
        bezier2Path.addLine(to: CGPoint(x: 4.01, y: 8.66))
        bezier2Path.addCurve(to: CGPoint(x: 4.01, y: 8.46), controlPoint1: CGPoint(x: 4.01, y: 8.6), controlPoint2: CGPoint(x: 4.01, y: 8.53))
        bezier2Path.addCurve(to: CGPoint(x: 3.53, y: 7.94), controlPoint1: CGPoint(x: 4.01, y: 8.17), controlPoint2: CGPoint(x: 3.82, y: 7.94))
        bezier2Path.addCurve(to: CGPoint(x: 3.43, y: 7.94), controlPoint1: CGPoint(x: 3.5, y: 7.94), controlPoint2: CGPoint(x: 3.46, y: 7.94))
        bezier2Path.addLine(to: CGPoint(x: 3.44, y: 7.94))
        bezier2Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier2Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier2Path.addCurve(to: CGPoint(x: 0.52, y: 8.97), controlPoint1: CGPoint(x: 0.65, y: 8.96), controlPoint2: CGPoint(x: 0.58, y: 8.97))
        bezier2Path.addCurve(to: CGPoint(x: -0, y: 8.45), controlPoint1: CGPoint(x: 0.23, y: 8.97), controlPoint2: CGPoint(x: -0, y: 8.74))
        bezier2Path.addCurve(to: CGPoint(x: 0.16, y: 8.07), controlPoint1: CGPoint(x: -0, y: 8.3), controlPoint2: CGPoint(x: 0.06, y: 8.17))
        bezier2Path.addLine(to: CGPoint(x: 0.16, y: 8.08))
        bezier2Path.addLine(to: CGPoint(x: 6.01, y: 0))
        bezier2Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier2Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier2Path.addCurve(to: CGPoint(x: 12.02, y: 8.52), controlPoint1: CGPoint(x: 11.96, y: 8.23), controlPoint2: CGPoint(x: 12.02, y: 8.37))
        bezier2Path.addCurve(to: CGPoint(x: 11.5, y: 9.03), controlPoint1: CGPoint(x: 12.02, y: 8.8), controlPoint2: CGPoint(x: 11.79, y: 9.03))
        bezier2Path.addCurve(to: CGPoint(x: 11.31, y: 8.99), controlPoint1: CGPoint(x: 11.43, y: 9.03), controlPoint2: CGPoint(x: 11.37, y: 9.02))
        bezier2Path.addLine(to: CGPoint(x: 11.31, y: 8.99))
        bezier2Path.addLine(to: CGPoint(x: 8.58, y: 8))
        bezier2Path.addLine(to: CGPoint(x: 8.59, y: 8.01))
        bezier2Path.addCurve(to: CGPoint(x: 8.49, y: 8), controlPoint1: CGPoint(x: 8.56, y: 8), controlPoint2: CGPoint(x: 8.52, y: 8))
        bezier2Path.addCurve(to: CGPoint(x: 8.01, y: 8.53), controlPoint1: CGPoint(x: 8.2, y: 8), controlPoint2: CGPoint(x: 8.01, y: 8.23))
        bezier2Path.addCurve(to: CGPoint(x: 8, y: 8.73), controlPoint1: CGPoint(x: 8.01, y: 8.59), controlPoint2: CGPoint(x: 8, y: 8.66))
        bezier2Path.addLine(to: CGPoint(x: 8, y: 8.72))
        bezier2Path.addLine(to: CGPoint(x: 8.01, y: 9.99))
        bezier2Path.usesEvenOddFillRule = true
        secondaryColor.setFill()
        bezier2Path.fill()

        context.restoreGState()



        context.restoreGState()


        //// Group
        context.saveGState()
        context.translateBy(x: frame.minX + 14.98, y: frame.minY + 14.42)
        context.scaleBy(x: scaleX, y: 1)



        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: -5.98, y: -3.43, width: 4, height: 16))
        primaryColor.setFill()
        rectanglePath.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: -3.96, y: -12.42))
        bezierPath.addCurve(to: CGPoint(x: 1.88, y: -4.29), controlPoint1: CGPoint(x: -3.92, y: -12.37), controlPoint2: CGPoint(x: 1.76, y: -4.46))
        bezierPath.addCurve(to: CGPoint(x: 2.04, y: -3.91), controlPoint1: CGPoint(x: 1.98, y: -4.19), controlPoint2: CGPoint(x: 2.04, y: -4.06))
        bezierPath.addCurve(to: CGPoint(x: 1.52, y: -3.39), controlPoint1: CGPoint(x: 2.04, y: -3.62), controlPoint2: CGPoint(x: 1.81, y: -3.39))
        bezierPath.addCurve(to: CGPoint(x: 1.33, y: -3.43), controlPoint1: CGPoint(x: 1.46, y: -3.39), controlPoint2: CGPoint(x: 1.39, y: -3.41))
        bezierPath.addCurve(to: CGPoint(x: -1.39, y: -4.42), controlPoint1: CGPoint(x: 1.22, y: -3.47), controlPoint2: CGPoint(x: -1.28, y: -4.38))
        bezierPath.addCurve(to: CGPoint(x: -1.97, y: -3.9), controlPoint1: CGPoint(x: -1.78, y: -4.43), controlPoint2: CGPoint(x: -1.97, y: -4.19))
        bezierPath.addCurve(to: CGPoint(x: -1.97, y: -3.7), controlPoint1: CGPoint(x: -1.97, y: -3.83), controlPoint2: CGPoint(x: -1.97, y: -3.76))
        bezierPath.addCurve(to: CGPoint(x: -1.97, y: -2.44), controlPoint1: CGPoint(x: -1.98, y: -3.62), controlPoint2: CGPoint(x: -1.97, y: -2.44))
        bezierPath.addLine(to: CGPoint(x: -5.97, y: -2.5))
        bezierPath.addCurve(to: CGPoint(x: -5.96, y: -3.76), controlPoint1: CGPoint(x: -5.97, y: -2.5), controlPoint2: CGPoint(x: -5.96, y: -3.68))
        bezierPath.addCurve(to: CGPoint(x: -5.97, y: -3.96), controlPoint1: CGPoint(x: -5.97, y: -3.83), controlPoint2: CGPoint(x: -5.97, y: -3.9))
        bezierPath.addCurve(to: CGPoint(x: -6.45, y: -4.49), controlPoint1: CGPoint(x: -5.97, y: -4.25), controlPoint2: CGPoint(x: -6.16, y: -4.49))
        bezierPath.addCurve(to: CGPoint(x: -9.27, y: -3.49), controlPoint1: CGPoint(x: -6.66, y: -4.44), controlPoint2: CGPoint(x: -9.16, y: -3.54))
        bezierPath.addCurve(to: CGPoint(x: -9.46, y: -3.46), controlPoint1: CGPoint(x: -9.33, y: -3.47), controlPoint2: CGPoint(x: -9.4, y: -3.46))
        bezierPath.addCurve(to: CGPoint(x: -9.98, y: -3.97), controlPoint1: CGPoint(x: -9.75, y: -3.46), controlPoint2: CGPoint(x: -9.98, y: -3.68))
        bezierPath.addCurve(to: CGPoint(x: -9.82, y: -4.35), controlPoint1: CGPoint(x: -9.98, y: -4.12), controlPoint2: CGPoint(x: -9.92, y: -4.26))
        bezierPath.addCurve(to: CGPoint(x: -3.96, y: -12.43), controlPoint1: CGPoint(x: -9.7, y: -4.52), controlPoint2: CGPoint(x: -4.01, y: -12.37))
        bezierPath.addLine(to: CGPoint(x: -3.96, y: -12.42))
        bezierPath.close()
        primaryColor.setFill()
        bezierPath.fill()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneStraightNotSharpRight(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group 2
        context.saveGState()
        context.translateBy(x: frame.minX + 20.98, y: frame.minY + 19.11)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 1.32, y: 0.64))
        bezier3Path.addCurve(to: CGPoint(x: -3.98, y: -5.11), controlPoint1: CGPoint(x: 1.32, y: 0.64), controlPoint2: CGPoint(x: -0.98, y: -4.11))
        bezier3Path.addCurve(to: CGPoint(x: -9.98, y: 0.89), controlPoint1: CGPoint(x: -6.98, y: -6.11), controlPoint2: CGPoint(x: -9.67, y: -2.71))
        bezier3Path.addLine(to: CGPoint(x: -9.98, y: 7.89))
        secondaryColor.setStroke()
        bezier3Path.lineWidth = 4
        bezier3Path.lineJoinStyle = .round
        bezier3Path.stroke()


        //// Bezier 2 Drawing
        context.saveGState()
        context.translateBy(x: 10.23, y: 4.03)
        context.rotate(by: 149.53 * CGFloat.pi/180)

        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 4.01, y: 9.92))
        bezier2Path.addLine(to: CGPoint(x: 4.02, y: 8.66))
        bezier2Path.addLine(to: CGPoint(x: 4.01, y: 8.66))
        bezier2Path.addCurve(to: CGPoint(x: 4.01, y: 8.46), controlPoint1: CGPoint(x: 4.01, y: 8.6), controlPoint2: CGPoint(x: 4.01, y: 8.53))
        bezier2Path.addCurve(to: CGPoint(x: 3.53, y: 7.94), controlPoint1: CGPoint(x: 4.01, y: 8.17), controlPoint2: CGPoint(x: 3.82, y: 7.94))
        bezier2Path.addCurve(to: CGPoint(x: 3.43, y: 7.94), controlPoint1: CGPoint(x: 3.5, y: 7.94), controlPoint2: CGPoint(x: 3.46, y: 7.94))
        bezier2Path.addLine(to: CGPoint(x: 3.44, y: 7.94))
        bezier2Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier2Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier2Path.addCurve(to: CGPoint(x: 0.52, y: 8.97), controlPoint1: CGPoint(x: 0.65, y: 8.96), controlPoint2: CGPoint(x: 0.59, y: 8.97))
        bezier2Path.addCurve(to: CGPoint(x: 0, y: 8.45), controlPoint1: CGPoint(x: 0.23, y: 8.97), controlPoint2: CGPoint(x: 0, y: 8.74))
        bezier2Path.addCurve(to: CGPoint(x: 0.16, y: 8.07), controlPoint1: CGPoint(x: 0, y: 8.3), controlPoint2: CGPoint(x: 0.06, y: 8.17))
        bezier2Path.addLine(to: CGPoint(x: 0.16, y: 8.08))
        bezier2Path.addLine(to: CGPoint(x: 6.02, y: -0))
        bezier2Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier2Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier2Path.addCurve(to: CGPoint(x: 12.02, y: 8.52), controlPoint1: CGPoint(x: 11.96, y: 8.23), controlPoint2: CGPoint(x: 12.02, y: 8.37))
        bezier2Path.addCurve(to: CGPoint(x: 11.5, y: 9.03), controlPoint1: CGPoint(x: 12.02, y: 8.8), controlPoint2: CGPoint(x: 11.79, y: 9.03))
        bezier2Path.addCurve(to: CGPoint(x: 11.31, y: 8.99), controlPoint1: CGPoint(x: 11.43, y: 9.03), controlPoint2: CGPoint(x: 11.37, y: 9.02))
        bezier2Path.addLine(to: CGPoint(x: 11.31, y: 8.99))
        bezier2Path.addLine(to: CGPoint(x: 8.58, y: 8))
        bezier2Path.addLine(to: CGPoint(x: 8.59, y: 8.01))
        bezier2Path.addCurve(to: CGPoint(x: 8.49, y: 8), controlPoint1: CGPoint(x: 8.56, y: 8), controlPoint2: CGPoint(x: 8.52, y: 8))
        bezier2Path.addCurve(to: CGPoint(x: 8.01, y: 8.53), controlPoint1: CGPoint(x: 8.2, y: 8), controlPoint2: CGPoint(x: 8.01, y: 8.23))
        bezier2Path.addCurve(to: CGPoint(x: 8.01, y: 8.73), controlPoint1: CGPoint(x: 8.01, y: 8.59), controlPoint2: CGPoint(x: 8.01, y: 8.66))
        bezier2Path.addLine(to: CGPoint(x: 8, y: 8.72))
        bezier2Path.addLine(to: CGPoint(x: 8.01, y: 9.99))
        bezier2Path.usesEvenOddFillRule = true
        secondaryColor.setFill()
        bezier2Path.fill()

        context.restoreGState()



        context.restoreGState()


        //// Group
        context.saveGState()
        context.translateBy(x: frame.minX + 15.02, y: frame.minY + 14.58)
        context.scaleBy(x: scaleX, y: 1)



        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: -6.02, y: -3.58, width: 4, height: 16))
        primaryColor.setFill()
        rectanglePath.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: -4, y: -12.58))
        bezierPath.addCurve(to: CGPoint(x: 1.84, y: -4.45), controlPoint1: CGPoint(x: -3.96, y: -12.53), controlPoint2: CGPoint(x: 1.72, y: -4.62))
        bezierPath.addCurve(to: CGPoint(x: 2, y: -4.07), controlPoint1: CGPoint(x: 1.94, y: -4.35), controlPoint2: CGPoint(x: 2, y: -4.21))
        bezierPath.addCurve(to: CGPoint(x: 1.49, y: -3.55), controlPoint1: CGPoint(x: 2, y: -3.78), controlPoint2: CGPoint(x: 1.77, y: -3.55))
        bezierPath.addCurve(to: CGPoint(x: 1.3, y: -3.59), controlPoint1: CGPoint(x: 1.42, y: -3.55), controlPoint2: CGPoint(x: 1.36, y: -3.56))
        bezierPath.addCurve(to: CGPoint(x: -1.43, y: -4.58), controlPoint1: CGPoint(x: 1.18, y: -3.63), controlPoint2: CGPoint(x: -1.32, y: -4.54))
        bezierPath.addCurve(to: CGPoint(x: -2.01, y: -4.06), controlPoint1: CGPoint(x: -1.81, y: -4.58), controlPoint2: CGPoint(x: -2.01, y: -4.35))
        bezierPath.addCurve(to: CGPoint(x: -2.01, y: -3.86), controlPoint1: CGPoint(x: -2.01, y: -3.99), controlPoint2: CGPoint(x: -2.01, y: -3.92))
        bezierPath.addCurve(to: CGPoint(x: -2.01, y: -2.6), controlPoint1: CGPoint(x: -2.01, y: -3.78), controlPoint2: CGPoint(x: -2.01, y: -2.6))
        bezierPath.addLine(to: CGPoint(x: -6, y: -2.66))
        bezierPath.addCurve(to: CGPoint(x: -6, y: -3.92), controlPoint1: CGPoint(x: -6, y: -2.66), controlPoint2: CGPoint(x: -6, y: -3.83))
        bezierPath.addCurve(to: CGPoint(x: -6.01, y: -4.12), controlPoint1: CGPoint(x: -6, y: -3.98), controlPoint2: CGPoint(x: -6.01, y: -4.05))
        bezierPath.addCurve(to: CGPoint(x: -6.49, y: -4.65), controlPoint1: CGPoint(x: -6.01, y: -4.41), controlPoint2: CGPoint(x: -6.2, y: -4.65))
        bezierPath.addCurve(to: CGPoint(x: -9.3, y: -3.65), controlPoint1: CGPoint(x: -6.69, y: -4.6), controlPoint2: CGPoint(x: -9.19, y: -3.69))
        bezierPath.addCurve(to: CGPoint(x: -9.5, y: -3.61), controlPoint1: CGPoint(x: -9.37, y: -3.63), controlPoint2: CGPoint(x: -9.43, y: -3.61))
        bezierPath.addCurve(to: CGPoint(x: -10.02, y: -4.12), controlPoint1: CGPoint(x: -9.78, y: -3.61), controlPoint2: CGPoint(x: -10.01, y: -3.84))
        bezierPath.addCurve(to: CGPoint(x: -9.86, y: -4.51), controlPoint1: CGPoint(x: -10.01, y: -4.28), controlPoint2: CGPoint(x: -9.95, y: -4.41))
        bezierPath.addCurve(to: CGPoint(x: -4, y: -12.58), controlPoint1: CGPoint(x: -9.73, y: -4.68), controlPoint2: CGPoint(x: -4.04, y: -12.53))
        bezierPath.addLine(to: CGPoint(x: -4, y: -12.58))
        bezierPath.close()
        primaryColor.setFill()
        bezierPath.fill()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneSharpRightNotStraight(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group
        context.saveGState()
        context.translateBy(x: frame.minX + 15.02, y: frame.minY + 14.58)
        context.scaleBy(x: scaleX, y: 1)



        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: -6.02, y: -3.58, width: 4, height: 16))
        secondaryColor.setFill()
        rectanglePath.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: -4, y: -12.58))
        bezierPath.addCurve(to: CGPoint(x: 1.84, y: -4.45), controlPoint1: CGPoint(x: -3.96, y: -12.53), controlPoint2: CGPoint(x: 1.72, y: -4.62))
        bezierPath.addCurve(to: CGPoint(x: 2, y: -4.07), controlPoint1: CGPoint(x: 1.94, y: -4.35), controlPoint2: CGPoint(x: 2, y: -4.21))
        bezierPath.addCurve(to: CGPoint(x: 1.49, y: -3.55), controlPoint1: CGPoint(x: 2, y: -3.78), controlPoint2: CGPoint(x: 1.77, y: -3.55))
        bezierPath.addCurve(to: CGPoint(x: 1.3, y: -3.59), controlPoint1: CGPoint(x: 1.42, y: -3.55), controlPoint2: CGPoint(x: 1.36, y: -3.56))
        bezierPath.addCurve(to: CGPoint(x: -1.43, y: -4.58), controlPoint1: CGPoint(x: 1.18, y: -3.63), controlPoint2: CGPoint(x: -1.32, y: -4.54))
        bezierPath.addCurve(to: CGPoint(x: -2.01, y: -4.06), controlPoint1: CGPoint(x: -1.81, y: -4.58), controlPoint2: CGPoint(x: -2.01, y: -4.35))
        bezierPath.addCurve(to: CGPoint(x: -2.01, y: -3.86), controlPoint1: CGPoint(x: -2.01, y: -3.99), controlPoint2: CGPoint(x: -2.01, y: -3.92))
        bezierPath.addCurve(to: CGPoint(x: -2.01, y: -2.6), controlPoint1: CGPoint(x: -2.01, y: -3.78), controlPoint2: CGPoint(x: -2.01, y: -2.6))
        bezierPath.addLine(to: CGPoint(x: -6, y: -2.66))
        bezierPath.addCurve(to: CGPoint(x: -6, y: -3.92), controlPoint1: CGPoint(x: -6, y: -2.66), controlPoint2: CGPoint(x: -6, y: -3.83))
        bezierPath.addCurve(to: CGPoint(x: -6.01, y: -4.12), controlPoint1: CGPoint(x: -6, y: -3.98), controlPoint2: CGPoint(x: -6.01, y: -4.05))
        bezierPath.addCurve(to: CGPoint(x: -6.49, y: -4.65), controlPoint1: CGPoint(x: -6.01, y: -4.41), controlPoint2: CGPoint(x: -6.2, y: -4.65))
        bezierPath.addCurve(to: CGPoint(x: -9.3, y: -3.65), controlPoint1: CGPoint(x: -6.69, y: -4.6), controlPoint2: CGPoint(x: -9.19, y: -3.69))
        bezierPath.addCurve(to: CGPoint(x: -9.5, y: -3.61), controlPoint1: CGPoint(x: -9.37, y: -3.63), controlPoint2: CGPoint(x: -9.43, y: -3.61))
        bezierPath.addCurve(to: CGPoint(x: -10.02, y: -4.12), controlPoint1: CGPoint(x: -9.78, y: -3.61), controlPoint2: CGPoint(x: -10.01, y: -3.84))
        bezierPath.addCurve(to: CGPoint(x: -9.86, y: -4.51), controlPoint1: CGPoint(x: -10.01, y: -4.28), controlPoint2: CGPoint(x: -9.95, y: -4.41))
        bezierPath.addCurve(to: CGPoint(x: -4, y: -12.58), controlPoint1: CGPoint(x: -9.73, y: -4.68), controlPoint2: CGPoint(x: -4.04, y: -12.53))
        bezierPath.addLine(to: CGPoint(x: -4, y: -12.58))
        bezierPath.close()
        secondaryColor.setFill()
        bezierPath.fill()



        context.restoreGState()


        //// Group 2
        context.saveGState()
        context.translateBy(x: frame.minX + 20.98, y: frame.minY + 19.11)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 1.32, y: 0.64))
        bezier3Path.addCurve(to: CGPoint(x: -3.98, y: -5.11), controlPoint1: CGPoint(x: 1.32, y: 0.64), controlPoint2: CGPoint(x: -0.98, y: -4.11))
        bezier3Path.addCurve(to: CGPoint(x: -9.98, y: 0.89), controlPoint1: CGPoint(x: -6.98, y: -6.11), controlPoint2: CGPoint(x: -9.67, y: -2.71))
        bezier3Path.addLine(to: CGPoint(x: -9.98, y: 7.89))
        primaryColor.setStroke()
        bezier3Path.lineWidth = 4
        bezier3Path.lineJoinStyle = .round
        bezier3Path.stroke()


        //// Bezier 2 Drawing
        context.saveGState()
        context.translateBy(x: 10.23, y: 4.03)
        context.rotate(by: 149.53 * CGFloat.pi/180)

        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 4.01, y: 9.92))
        bezier2Path.addLine(to: CGPoint(x: 4.02, y: 8.66))
        bezier2Path.addLine(to: CGPoint(x: 4.01, y: 8.66))
        bezier2Path.addCurve(to: CGPoint(x: 4.01, y: 8.46), controlPoint1: CGPoint(x: 4.01, y: 8.6), controlPoint2: CGPoint(x: 4.01, y: 8.53))
        bezier2Path.addCurve(to: CGPoint(x: 3.53, y: 7.94), controlPoint1: CGPoint(x: 4.01, y: 8.17), controlPoint2: CGPoint(x: 3.82, y: 7.94))
        bezier2Path.addCurve(to: CGPoint(x: 3.43, y: 7.94), controlPoint1: CGPoint(x: 3.5, y: 7.94), controlPoint2: CGPoint(x: 3.46, y: 7.94))
        bezier2Path.addLine(to: CGPoint(x: 3.44, y: 7.94))
        bezier2Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier2Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier2Path.addCurve(to: CGPoint(x: 0.52, y: 8.97), controlPoint1: CGPoint(x: 0.65, y: 8.96), controlPoint2: CGPoint(x: 0.59, y: 8.97))
        bezier2Path.addCurve(to: CGPoint(x: 0, y: 8.45), controlPoint1: CGPoint(x: 0.23, y: 8.97), controlPoint2: CGPoint(x: 0, y: 8.74))
        bezier2Path.addCurve(to: CGPoint(x: 0.16, y: 8.07), controlPoint1: CGPoint(x: 0, y: 8.3), controlPoint2: CGPoint(x: 0.06, y: 8.17))
        bezier2Path.addLine(to: CGPoint(x: 0.16, y: 8.08))
        bezier2Path.addLine(to: CGPoint(x: 6.02, y: -0))
        bezier2Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier2Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier2Path.addCurve(to: CGPoint(x: 12.02, y: 8.52), controlPoint1: CGPoint(x: 11.96, y: 8.23), controlPoint2: CGPoint(x: 12.02, y: 8.37))
        bezier2Path.addCurve(to: CGPoint(x: 11.5, y: 9.03), controlPoint1: CGPoint(x: 12.02, y: 8.8), controlPoint2: CGPoint(x: 11.79, y: 9.03))
        bezier2Path.addCurve(to: CGPoint(x: 11.31, y: 8.99), controlPoint1: CGPoint(x: 11.43, y: 9.03), controlPoint2: CGPoint(x: 11.37, y: 9.02))
        bezier2Path.addLine(to: CGPoint(x: 11.31, y: 8.99))
        bezier2Path.addLine(to: CGPoint(x: 8.58, y: 8))
        bezier2Path.addLine(to: CGPoint(x: 8.59, y: 8.01))
        bezier2Path.addCurve(to: CGPoint(x: 8.49, y: 8), controlPoint1: CGPoint(x: 8.56, y: 8), controlPoint2: CGPoint(x: 8.52, y: 8))
        bezier2Path.addCurve(to: CGPoint(x: 8.01, y: 8.53), controlPoint1: CGPoint(x: 8.2, y: 8), controlPoint2: CGPoint(x: 8.01, y: 8.23))
        bezier2Path.addCurve(to: CGPoint(x: 8.01, y: 8.73), controlPoint1: CGPoint(x: 8.01, y: 8.59), controlPoint2: CGPoint(x: 8.01, y: 8.66))
        bezier2Path.addLine(to: CGPoint(x: 8, y: 8.72))
        bezier2Path.addLine(to: CGPoint(x: 8.01, y: 9.99))
        bezier2Path.usesEvenOddFillRule = true
        primaryColor.setFill()
        bezier2Path.fill()

        context.restoreGState()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneStraightNotUturn(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group
        context.saveGState()
        context.translateBy(x: frame.minX + 16.89, y: frame.minY + 15.95)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 4.11, y: 4.05))
        bezierPath.addLine(to: CGPoint(x: 4.11, y: 3.31))
        bezierPath.addCurve(to: CGPoint(x: -0.89, y: -1.95), controlPoint1: CGPoint(x: 4.11, y: 1.67), controlPoint2: CGPoint(x: 4.11, y: -1.95))
        bezierPath.addCurve(to: CGPoint(x: -5.89, y: 3.05), controlPoint1: CGPoint(x: -5.89, y: -1.95), controlPoint2: CGPoint(x: -5.89, y: 3.05))
        bezierPath.addLine(to: CGPoint(x: -5.89, y: 11.05))
        secondaryColor.setStroke()
        bezierPath.lineWidth = 4
        bezierPath.stroke()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 6.13, y: 2.1))
        bezier2Path.addCurve(to: CGPoint(x: 6.12, y: 3.36), controlPoint1: CGPoint(x: 6.13, y: 2.1), controlPoint2: CGPoint(x: 6.12, y: 3.28))
        bezier2Path.addCurve(to: CGPoint(x: 6.13, y: 3.56), controlPoint1: CGPoint(x: 6.12, y: 3.43), controlPoint2: CGPoint(x: 6.13, y: 3.5))
        bezier2Path.addCurve(to: CGPoint(x: 6.61, y: 4.09), controlPoint1: CGPoint(x: 6.13, y: 3.85), controlPoint2: CGPoint(x: 6.32, y: 4.09))
        bezier2Path.addCurve(to: CGPoint(x: 9.43, y: 3.09), controlPoint1: CGPoint(x: 6.81, y: 4.04), controlPoint2: CGPoint(x: 9.31, y: 3.13))
        bezier2Path.addCurve(to: CGPoint(x: 9.62, y: 3.06), controlPoint1: CGPoint(x: 9.49, y: 3.07), controlPoint2: CGPoint(x: 9.55, y: 3.06))
        bezier2Path.addCurve(to: CGPoint(x: 10.11, y: 3.4), controlPoint1: CGPoint(x: 9.84, y: 3.06), controlPoint2: CGPoint(x: 10.04, y: 3.2))
        bezier2Path.addLine(to: CGPoint(x: 10.11, y: 3.57))
        bezier2Path.addLine(to: CGPoint(x: 10.11, y: 3.75))
        bezier2Path.addCurve(to: CGPoint(x: 9.98, y: 3.95), controlPoint1: CGPoint(x: 10.08, y: 3.82), controlPoint2: CGPoint(x: 10.03, y: 3.89))
        bezier2Path.addCurve(to: CGPoint(x: 4.12, y: 11.02), controlPoint1: CGPoint(x: 9.85, y: 4.11), controlPoint2: CGPoint(x: 4.12, y: 11.02))
        bezier2Path.addCurve(to: CGPoint(x: 0.41, y: 6.5), controlPoint1: CGPoint(x: 4.12, y: 11.02), controlPoint2: CGPoint(x: 2.08, y: 8.53))
        bezier2Path.addCurve(to: CGPoint(x: -1.72, y: 3.89), controlPoint1: CGPoint(x: -0.71, y: 5.12), controlPoint2: CGPoint(x: -1.67, y: 3.95))
        bezier2Path.addCurve(to: CGPoint(x: -1.88, y: 3.51), controlPoint1: CGPoint(x: -1.82, y: 3.79), controlPoint2: CGPoint(x: -1.88, y: 3.66))
        bezier2Path.addCurve(to: CGPoint(x: -1.37, y: 2.99), controlPoint1: CGPoint(x: -1.88, y: 3.22), controlPoint2: CGPoint(x: -1.65, y: 2.99))
        bezier2Path.addCurve(to: CGPoint(x: -1.18, y: 3.03), controlPoint1: CGPoint(x: -1.3, y: 2.99), controlPoint2: CGPoint(x: -1.23, y: 3.01))
        bezier2Path.addCurve(to: CGPoint(x: 1.55, y: 4.02), controlPoint1: CGPoint(x: -1.06, y: 3.07), controlPoint2: CGPoint(x: 1.44, y: 3.98))
        bezier2Path.addCurve(to: CGPoint(x: 2.13, y: 3.5), controlPoint1: CGPoint(x: 1.94, y: 4.02), controlPoint2: CGPoint(x: 2.13, y: 3.79))
        bezier2Path.addCurve(to: CGPoint(x: 2.13, y: 3.3), controlPoint1: CGPoint(x: 2.13, y: 3.43), controlPoint2: CGPoint(x: 2.13, y: 3.36))
        bezier2Path.addCurve(to: CGPoint(x: 2.13, y: 2.04), controlPoint1: CGPoint(x: 2.13, y: 3.22), controlPoint2: CGPoint(x: 2.13, y: 2.04))
        bezier2Path.addLine(to: CGPoint(x: 6.13, y: 2.1))
        bezier2Path.close()
        secondaryColor.setFill()
        bezier2Path.fill()



        context.restoreGState()


        //// Group 2
        context.saveGState()
        context.translateBy(x: frame.minX + 15.02, y: frame.minY + 14.58)
        context.scaleBy(x: scaleX, y: 1)



        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: -6.02, y: -3.58, width: 4, height: 16))
        primaryColor.setFill()
        rectanglePath.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: -4, y: -12.58))
        bezier3Path.addCurve(to: CGPoint(x: 1.84, y: -4.45), controlPoint1: CGPoint(x: -3.96, y: -12.53), controlPoint2: CGPoint(x: 1.72, y: -4.62))
        bezier3Path.addCurve(to: CGPoint(x: 2, y: -4.07), controlPoint1: CGPoint(x: 1.94, y: -4.35), controlPoint2: CGPoint(x: 2, y: -4.21))
        bezier3Path.addCurve(to: CGPoint(x: 1.49, y: -3.55), controlPoint1: CGPoint(x: 2, y: -3.78), controlPoint2: CGPoint(x: 1.77, y: -3.55))
        bezier3Path.addCurve(to: CGPoint(x: 1.3, y: -3.59), controlPoint1: CGPoint(x: 1.42, y: -3.55), controlPoint2: CGPoint(x: 1.36, y: -3.56))
        bezier3Path.addCurve(to: CGPoint(x: -1.43, y: -4.58), controlPoint1: CGPoint(x: 1.18, y: -3.63), controlPoint2: CGPoint(x: -1.32, y: -4.54))
        bezier3Path.addCurve(to: CGPoint(x: -2.01, y: -4.06), controlPoint1: CGPoint(x: -1.81, y: -4.58), controlPoint2: CGPoint(x: -2.01, y: -4.35))
        bezier3Path.addCurve(to: CGPoint(x: -2.01, y: -3.86), controlPoint1: CGPoint(x: -2.01, y: -3.99), controlPoint2: CGPoint(x: -2.01, y: -3.92))
        bezier3Path.addCurve(to: CGPoint(x: -2.01, y: -2.6), controlPoint1: CGPoint(x: -2.01, y: -3.78), controlPoint2: CGPoint(x: -2.01, y: -2.6))
        bezier3Path.addLine(to: CGPoint(x: -6, y: -2.66))
        bezier3Path.addCurve(to: CGPoint(x: -6, y: -3.92), controlPoint1: CGPoint(x: -6, y: -2.66), controlPoint2: CGPoint(x: -6, y: -3.83))
        bezier3Path.addCurve(to: CGPoint(x: -6.01, y: -4.12), controlPoint1: CGPoint(x: -6, y: -3.98), controlPoint2: CGPoint(x: -6.01, y: -4.05))
        bezier3Path.addCurve(to: CGPoint(x: -6.49, y: -4.65), controlPoint1: CGPoint(x: -6.01, y: -4.41), controlPoint2: CGPoint(x: -6.2, y: -4.65))
        bezier3Path.addCurve(to: CGPoint(x: -9.3, y: -3.65), controlPoint1: CGPoint(x: -6.69, y: -4.6), controlPoint2: CGPoint(x: -9.19, y: -3.69))
        bezier3Path.addCurve(to: CGPoint(x: -9.5, y: -3.61), controlPoint1: CGPoint(x: -9.37, y: -3.63), controlPoint2: CGPoint(x: -9.43, y: -3.61))
        bezier3Path.addCurve(to: CGPoint(x: -10.02, y: -4.12), controlPoint1: CGPoint(x: -9.78, y: -3.61), controlPoint2: CGPoint(x: -10.01, y: -3.84))
        bezier3Path.addCurve(to: CGPoint(x: -9.86, y: -4.51), controlPoint1: CGPoint(x: -10.01, y: -4.28), controlPoint2: CGPoint(x: -9.95, y: -4.41))
        bezier3Path.addCurve(to: CGPoint(x: -4, y: -12.58), controlPoint1: CGPoint(x: -9.73, y: -4.68), controlPoint2: CGPoint(x: -4.04, y: -12.53))
        bezier3Path.addLine(to: CGPoint(x: -4, y: -12.58))
        bezier3Path.close()
        primaryColor.setFill()
        bezier3Path.fill()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneUturnNotStraight(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group 2
        context.saveGState()
        context.translateBy(x: frame.minX + 15.02, y: frame.minY + 14.58)
        context.scaleBy(x: scaleX, y: 1)



        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: -6.02, y: -3.58, width: 4, height: 16))
        secondaryColor.setFill()
        rectanglePath.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: -4, y: -12.58))
        bezier3Path.addCurve(to: CGPoint(x: 1.84, y: -4.45), controlPoint1: CGPoint(x: -3.96, y: -12.53), controlPoint2: CGPoint(x: 1.72, y: -4.62))
        bezier3Path.addCurve(to: CGPoint(x: 2, y: -4.07), controlPoint1: CGPoint(x: 1.94, y: -4.35), controlPoint2: CGPoint(x: 2, y: -4.21))
        bezier3Path.addCurve(to: CGPoint(x: 1.49, y: -3.55), controlPoint1: CGPoint(x: 2, y: -3.78), controlPoint2: CGPoint(x: 1.77, y: -3.55))
        bezier3Path.addCurve(to: CGPoint(x: 1.3, y: -3.59), controlPoint1: CGPoint(x: 1.42, y: -3.55), controlPoint2: CGPoint(x: 1.36, y: -3.56))
        bezier3Path.addCurve(to: CGPoint(x: -1.43, y: -4.58), controlPoint1: CGPoint(x: 1.18, y: -3.63), controlPoint2: CGPoint(x: -1.32, y: -4.54))
        bezier3Path.addCurve(to: CGPoint(x: -2.01, y: -4.06), controlPoint1: CGPoint(x: -1.81, y: -4.58), controlPoint2: CGPoint(x: -2.01, y: -4.35))
        bezier3Path.addCurve(to: CGPoint(x: -2.01, y: -3.86), controlPoint1: CGPoint(x: -2.01, y: -3.99), controlPoint2: CGPoint(x: -2.01, y: -3.92))
        bezier3Path.addCurve(to: CGPoint(x: -2.01, y: -2.6), controlPoint1: CGPoint(x: -2.01, y: -3.78), controlPoint2: CGPoint(x: -2.01, y: -2.6))
        bezier3Path.addLine(to: CGPoint(x: -6, y: -2.66))
        bezier3Path.addCurve(to: CGPoint(x: -6, y: -3.92), controlPoint1: CGPoint(x: -6, y: -2.66), controlPoint2: CGPoint(x: -6, y: -3.83))
        bezier3Path.addCurve(to: CGPoint(x: -6.01, y: -4.12), controlPoint1: CGPoint(x: -6, y: -3.98), controlPoint2: CGPoint(x: -6.01, y: -4.05))
        bezier3Path.addCurve(to: CGPoint(x: -6.49, y: -4.65), controlPoint1: CGPoint(x: -6.01, y: -4.41), controlPoint2: CGPoint(x: -6.2, y: -4.65))
        bezier3Path.addCurve(to: CGPoint(x: -9.3, y: -3.65), controlPoint1: CGPoint(x: -6.69, y: -4.6), controlPoint2: CGPoint(x: -9.19, y: -3.69))
        bezier3Path.addCurve(to: CGPoint(x: -9.5, y: -3.61), controlPoint1: CGPoint(x: -9.37, y: -3.63), controlPoint2: CGPoint(x: -9.43, y: -3.61))
        bezier3Path.addCurve(to: CGPoint(x: -10.02, y: -4.12), controlPoint1: CGPoint(x: -9.78, y: -3.61), controlPoint2: CGPoint(x: -10.01, y: -3.84))
        bezier3Path.addCurve(to: CGPoint(x: -9.86, y: -4.51), controlPoint1: CGPoint(x: -10.01, y: -4.28), controlPoint2: CGPoint(x: -9.95, y: -4.41))
        bezier3Path.addCurve(to: CGPoint(x: -4, y: -12.58), controlPoint1: CGPoint(x: -9.73, y: -4.68), controlPoint2: CGPoint(x: -4.04, y: -12.53))
        bezier3Path.addLine(to: CGPoint(x: -4, y: -12.58))
        bezier3Path.close()
        secondaryColor.setFill()
        bezier3Path.fill()



        context.restoreGState()


        //// Group 3
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: frame.minX + 21, y: frame.minY + 20))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 21, y: frame.minY + 19.26))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 16, y: frame.minY + 14), controlPoint1: CGPoint(x: frame.minX + 21, y: frame.minY + 17.62), controlPoint2: CGPoint(x: frame.minX + 21, y: frame.minY + 14))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 11, y: frame.minY + 19), controlPoint1: CGPoint(x: frame.minX + 11, y: frame.minY + 14), controlPoint2: CGPoint(x: frame.minX + 11, y: frame.minY + 19))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 11, y: frame.minY + 27))
        primaryColor.setStroke()
        bezierPath.lineWidth = 4
        bezierPath.stroke()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: frame.minX + 23.02, y: frame.minY + 18.05))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 23.01, y: frame.minY + 19.31), controlPoint1: CGPoint(x: frame.minX + 23.02, y: frame.minY + 18.05), controlPoint2: CGPoint(x: frame.minX + 23.01, y: frame.minY + 19.22))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 23.02, y: frame.minY + 19.51), controlPoint1: CGPoint(x: frame.minX + 23.02, y: frame.minY + 19.37), controlPoint2: CGPoint(x: frame.minX + 23.02, y: frame.minY + 19.44))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 23.5, y: frame.minY + 20.03), controlPoint1: CGPoint(x: frame.minX + 23.02, y: frame.minY + 19.8), controlPoint2: CGPoint(x: frame.minX + 23.21, y: frame.minY + 20.03))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 26.32, y: frame.minY + 19.04), controlPoint1: CGPoint(x: frame.minX + 23.71, y: frame.minY + 19.99), controlPoint2: CGPoint(x: frame.minX + 26.21, y: frame.minY + 19.08))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 26.51, y: frame.minY + 19), controlPoint1: CGPoint(x: frame.minX + 26.38, y: frame.minY + 19.02), controlPoint2: CGPoint(x: frame.minX + 26.45, y: frame.minY + 19))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 27, y: frame.minY + 19.34), controlPoint1: CGPoint(x: frame.minX + 26.74, y: frame.minY + 19), controlPoint2: CGPoint(x: frame.minX + 26.93, y: frame.minY + 19.15))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 27, y: frame.minY + 19.52))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 27, y: frame.minY + 19.69))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 26.87, y: frame.minY + 19.89), controlPoint1: CGPoint(x: frame.minX + 26.97, y: frame.minY + 19.77), controlPoint2: CGPoint(x: frame.minX + 26.93, y: frame.minY + 19.84))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 21.02, y: frame.minY + 26.97), controlPoint1: CGPoint(x: frame.minX + 26.74, y: frame.minY + 20.05), controlPoint2: CGPoint(x: frame.minX + 21.02, y: frame.minY + 26.97))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 17.31, y: frame.minY + 22.44), controlPoint1: CGPoint(x: frame.minX + 21.02, y: frame.minY + 26.97), controlPoint2: CGPoint(x: frame.minX + 18.98, y: frame.minY + 24.48))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 15.17, y: frame.minY + 19.84), controlPoint1: CGPoint(x: frame.minX + 16.18, y: frame.minY + 21.07), controlPoint2: CGPoint(x: frame.minX + 15.23, y: frame.minY + 19.9))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 15.01, y: frame.minY + 19.46), controlPoint1: CGPoint(x: frame.minX + 15.07, y: frame.minY + 19.74), controlPoint2: CGPoint(x: frame.minX + 15.01, y: frame.minY + 19.6))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 15.53, y: frame.minY + 18.94), controlPoint1: CGPoint(x: frame.minX + 15.01, y: frame.minY + 19.17), controlPoint2: CGPoint(x: frame.minX + 15.24, y: frame.minY + 18.94))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 15.72, y: frame.minY + 18.98), controlPoint1: CGPoint(x: frame.minX + 15.6, y: frame.minY + 18.94), controlPoint2: CGPoint(x: frame.minX + 15.66, y: frame.minY + 18.95))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 18.44, y: frame.minY + 19.97), controlPoint1: CGPoint(x: frame.minX + 15.83, y: frame.minY + 19.02), controlPoint2: CGPoint(x: frame.minX + 18.34, y: frame.minY + 19.93))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 19.02, y: frame.minY + 19.45), controlPoint1: CGPoint(x: frame.minX + 18.83, y: frame.minY + 19.97), controlPoint2: CGPoint(x: frame.minX + 19.02, y: frame.minY + 19.74))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 19.03, y: frame.minY + 19.25), controlPoint1: CGPoint(x: frame.minX + 19.02, y: frame.minY + 19.38), controlPoint2: CGPoint(x: frame.minX + 19.03, y: frame.minY + 19.31))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 19.02, y: frame.minY + 17.99), controlPoint1: CGPoint(x: frame.minX + 19.03, y: frame.minY + 19.17), controlPoint2: CGPoint(x: frame.minX + 19.02, y: frame.minY + 17.99))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 23.02, y: frame.minY + 18.05))
        bezier2Path.close()
        primaryColor.setFill()
        bezier2Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneSlightRightNotRight(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group 2
        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: frame.minX + 19.05, y: frame.minY + 14.59))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 20.31, y: frame.minY + 14.59))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 20.31, y: frame.minY + 14.59))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 20.51, y: frame.minY + 14.59), controlPoint1: CGPoint(x: frame.minX + 20.37, y: frame.minY + 14.59), controlPoint2: CGPoint(x: frame.minX + 20.44, y: frame.minY + 14.59))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 21.03, y: frame.minY + 14.1), controlPoint1: CGPoint(x: frame.minX + 20.8, y: frame.minY + 14.59), controlPoint2: CGPoint(x: frame.minX + 21.03, y: frame.minY + 14.4))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 21.03, y: frame.minY + 14.01), controlPoint1: CGPoint(x: frame.minX + 21.03, y: frame.minY + 14.07), controlPoint2: CGPoint(x: frame.minX + 21.03, y: frame.minY + 14.04))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 21.03, y: frame.minY + 14.01))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 20.04, y: frame.minY + 11.28))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 20.04, y: frame.minY + 11.29))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 20, y: frame.minY + 11.09), controlPoint1: CGPoint(x: frame.minX + 20.02, y: frame.minY + 11.23), controlPoint2: CGPoint(x: frame.minX + 20, y: frame.minY + 11.16))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 20.52, y: frame.minY + 10.58), controlPoint1: CGPoint(x: frame.minX + 20, y: frame.minY + 10.81), controlPoint2: CGPoint(x: frame.minX + 20.23, y: frame.minY + 10.58))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 20.9, y: frame.minY + 10.74), controlPoint1: CGPoint(x: frame.minX + 20.67, y: frame.minY + 10.58), controlPoint2: CGPoint(x: frame.minX + 20.8, y: frame.minY + 10.64))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 20.9, y: frame.minY + 10.74))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 27.97, y: frame.minY + 16.59))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 20.83, y: frame.minY + 22.44))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 20.84, y: frame.minY + 22.43))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 20.46, y: frame.minY + 22.6), controlPoint1: CGPoint(x: frame.minX + 20.74, y: frame.minY + 22.53), controlPoint2: CGPoint(x: frame.minX + 20.6, y: frame.minY + 22.6))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 19.94, y: frame.minY + 22.08), controlPoint1: CGPoint(x: frame.minX + 20.17, y: frame.minY + 22.6), controlPoint2: CGPoint(x: frame.minX + 19.94, y: frame.minY + 22.37))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 19.98, y: frame.minY + 21.89), controlPoint1: CGPoint(x: frame.minX + 19.94, y: frame.minY + 22.01), controlPoint2: CGPoint(x: frame.minX + 19.95, y: frame.minY + 21.95))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 19.98, y: frame.minY + 21.89))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 20.97, y: frame.minY + 19.16))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 20.97, y: frame.minY + 19.16))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 20.97, y: frame.minY + 19.07), controlPoint1: CGPoint(x: frame.minX + 20.97, y: frame.minY + 19.14), controlPoint2: CGPoint(x: frame.minX + 20.97, y: frame.minY + 19.1))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 20.45, y: frame.minY + 18.59), controlPoint1: CGPoint(x: frame.minX + 20.97, y: frame.minY + 18.78), controlPoint2: CGPoint(x: frame.minX + 20.74, y: frame.minY + 18.59))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 20.25, y: frame.minY + 18.58), controlPoint1: CGPoint(x: frame.minX + 20.38, y: frame.minY + 18.59), controlPoint2: CGPoint(x: frame.minX + 20.31, y: frame.minY + 18.58))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 20.25, y: frame.minY + 18.58))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 18.99, y: frame.minY + 18.59))
        bezier2Path.usesEvenOddFillRule = true
        secondaryColor.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: frame.minX + 7.03, y: frame.minY + 27))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 7.03, y: frame.minY + 22.87))
        bezier3Path.addCurve(to: CGPoint(x: frame.minX + 9, y: frame.minY + 18.61), controlPoint1: CGPoint(x: frame.minX + 7.03, y: frame.minY + 21.23), controlPoint2: CGPoint(x: frame.minX + 7.73, y: frame.minY + 19.65))
        bezier3Path.addCurve(to: CGPoint(x: frame.minX + 13.84, y: frame.minY + 16.61), controlPoint1: CGPoint(x: frame.minX + 10.23, y: frame.minY + 17.61), controlPoint2: CGPoint(x: frame.minX + 11.93, y: frame.minY + 16.61))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 20.03, y: frame.minY + 16.61))
        secondaryColor.setStroke()
        bezier3Path.lineWidth = 4
        bezier3Path.stroke()




        //// Group 3
        context.saveGState()
        context.translateBy(x: 6.98, y: -0.58)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 7.17, y: 10.61))
        bezier4Path.addLine(to: CGPoint(x: 4.02, y: 13.58))
        bezier4Path.addCurve(to: CGPoint(x: 0.02, y: 22.58), controlPoint1: CGPoint(x: 1.02, y: 16.58), controlPoint2: CGPoint(x: 0.02, y: 20.93))
        bezier4Path.addLine(to: CGPoint(x: 0, y: 27.6))
        primaryColor.setStroke()
        bezier4Path.lineWidth = 4
        bezier4Path.lineJoinStyle = .round
        bezier4Path.stroke()


        //// Bezier 5 Drawing
        context.saveGState()
        context.translateBy(x: 10.25, y: -0)
        context.rotate(by: 49 * CGFloat.pi/180)

        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 4.01, y: 9.92))
        bezier5Path.addLine(to: CGPoint(x: 4.02, y: 8.66))
        bezier5Path.addLine(to: CGPoint(x: 4.01, y: 8.66))
        bezier5Path.addCurve(to: CGPoint(x: 4.01, y: 8.46), controlPoint1: CGPoint(x: 4.01, y: 8.6), controlPoint2: CGPoint(x: 4.01, y: 8.53))
        bezier5Path.addCurve(to: CGPoint(x: 3.53, y: 7.94), controlPoint1: CGPoint(x: 4.01, y: 8.17), controlPoint2: CGPoint(x: 3.82, y: 7.94))
        bezier5Path.addCurve(to: CGPoint(x: 3.43, y: 7.94), controlPoint1: CGPoint(x: 3.5, y: 7.94), controlPoint2: CGPoint(x: 3.46, y: 7.94))
        bezier5Path.addLine(to: CGPoint(x: 3.44, y: 7.94))
        bezier5Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier5Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier5Path.addCurve(to: CGPoint(x: 0.52, y: 8.97), controlPoint1: CGPoint(x: 0.65, y: 8.96), controlPoint2: CGPoint(x: 0.58, y: 8.97))
        bezier5Path.addCurve(to: CGPoint(x: -0, y: 8.45), controlPoint1: CGPoint(x: 0.23, y: 8.97), controlPoint2: CGPoint(x: -0, y: 8.74))
        bezier5Path.addCurve(to: CGPoint(x: 0.16, y: 8.07), controlPoint1: CGPoint(x: -0, y: 8.3), controlPoint2: CGPoint(x: 0.06, y: 8.17))
        bezier5Path.addLine(to: CGPoint(x: 0.16, y: 8.08))
        bezier5Path.addLine(to: CGPoint(x: 6.01, y: 0))
        bezier5Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier5Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier5Path.addCurve(to: CGPoint(x: 12.02, y: 8.52), controlPoint1: CGPoint(x: 11.96, y: 8.23), controlPoint2: CGPoint(x: 12.02, y: 8.37))
        bezier5Path.addCurve(to: CGPoint(x: 11.5, y: 9.03), controlPoint1: CGPoint(x: 12.02, y: 8.8), controlPoint2: CGPoint(x: 11.79, y: 9.03))
        bezier5Path.addCurve(to: CGPoint(x: 11.31, y: 8.99), controlPoint1: CGPoint(x: 11.43, y: 9.03), controlPoint2: CGPoint(x: 11.37, y: 9.02))
        bezier5Path.addLine(to: CGPoint(x: 11.31, y: 8.99))
        bezier5Path.addLine(to: CGPoint(x: 8.58, y: 8))
        bezier5Path.addLine(to: CGPoint(x: 8.59, y: 8.01))
        bezier5Path.addCurve(to: CGPoint(x: 8.49, y: 8), controlPoint1: CGPoint(x: 8.56, y: 8), controlPoint2: CGPoint(x: 8.52, y: 8))
        bezier5Path.addCurve(to: CGPoint(x: 8.01, y: 8.53), controlPoint1: CGPoint(x: 8.2, y: 8), controlPoint2: CGPoint(x: 8.01, y: 8.23))
        bezier5Path.addCurve(to: CGPoint(x: 8, y: 8.73), controlPoint1: CGPoint(x: 8.01, y: 8.59), controlPoint2: CGPoint(x: 8, y: 8.66))
        bezier5Path.addLine(to: CGPoint(x: 8, y: 8.72))
        bezier5Path.addLine(to: CGPoint(x: 8.01, y: 9.99))
        bezier5Path.usesEvenOddFillRule = true
        primaryColor.setFill()
        bezier5Path.fill()

        context.restoreGState()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneRightNotSlightRight(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group 3
        context.saveGState()
        context.translateBy(x: 6.98, y: -0.58)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 7.17, y: 10.61))
        bezier4Path.addLine(to: CGPoint(x: 4.02, y: 13.58))
        bezier4Path.addCurve(to: CGPoint(x: 0.02, y: 22.58), controlPoint1: CGPoint(x: 1.02, y: 16.58), controlPoint2: CGPoint(x: 0.02, y: 20.93))
        bezier4Path.addLine(to: CGPoint(x: 0, y: 27.6))
        secondaryColor.setStroke()
        bezier4Path.lineWidth = 4
        bezier4Path.lineJoinStyle = .round
        bezier4Path.stroke()


        //// Bezier 5 Drawing
        context.saveGState()
        context.translateBy(x: 10.25, y: -0)
        context.rotate(by: 49 * CGFloat.pi/180)

        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 4.01, y: 9.92))
        bezier5Path.addLine(to: CGPoint(x: 4.02, y: 8.66))
        bezier5Path.addLine(to: CGPoint(x: 4.01, y: 8.66))
        bezier5Path.addCurve(to: CGPoint(x: 4.01, y: 8.46), controlPoint1: CGPoint(x: 4.01, y: 8.6), controlPoint2: CGPoint(x: 4.01, y: 8.53))
        bezier5Path.addCurve(to: CGPoint(x: 3.53, y: 7.94), controlPoint1: CGPoint(x: 4.01, y: 8.17), controlPoint2: CGPoint(x: 3.82, y: 7.94))
        bezier5Path.addCurve(to: CGPoint(x: 3.43, y: 7.94), controlPoint1: CGPoint(x: 3.5, y: 7.94), controlPoint2: CGPoint(x: 3.46, y: 7.94))
        bezier5Path.addLine(to: CGPoint(x: 3.44, y: 7.94))
        bezier5Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier5Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier5Path.addCurve(to: CGPoint(x: 0.52, y: 8.97), controlPoint1: CGPoint(x: 0.65, y: 8.96), controlPoint2: CGPoint(x: 0.58, y: 8.97))
        bezier5Path.addCurve(to: CGPoint(x: -0, y: 8.45), controlPoint1: CGPoint(x: 0.23, y: 8.97), controlPoint2: CGPoint(x: -0, y: 8.74))
        bezier5Path.addCurve(to: CGPoint(x: 0.16, y: 8.07), controlPoint1: CGPoint(x: -0, y: 8.3), controlPoint2: CGPoint(x: 0.06, y: 8.17))
        bezier5Path.addLine(to: CGPoint(x: 0.16, y: 8.08))
        bezier5Path.addLine(to: CGPoint(x: 6.01, y: 0))
        bezier5Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier5Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier5Path.addCurve(to: CGPoint(x: 12.02, y: 8.52), controlPoint1: CGPoint(x: 11.96, y: 8.23), controlPoint2: CGPoint(x: 12.02, y: 8.37))
        bezier5Path.addCurve(to: CGPoint(x: 11.5, y: 9.03), controlPoint1: CGPoint(x: 12.02, y: 8.8), controlPoint2: CGPoint(x: 11.79, y: 9.03))
        bezier5Path.addCurve(to: CGPoint(x: 11.31, y: 8.99), controlPoint1: CGPoint(x: 11.43, y: 9.03), controlPoint2: CGPoint(x: 11.37, y: 9.02))
        bezier5Path.addLine(to: CGPoint(x: 11.31, y: 8.99))
        bezier5Path.addLine(to: CGPoint(x: 8.58, y: 8))
        bezier5Path.addLine(to: CGPoint(x: 8.59, y: 8.01))
        bezier5Path.addCurve(to: CGPoint(x: 8.49, y: 8), controlPoint1: CGPoint(x: 8.56, y: 8), controlPoint2: CGPoint(x: 8.52, y: 8))
        bezier5Path.addCurve(to: CGPoint(x: 8.01, y: 8.53), controlPoint1: CGPoint(x: 8.2, y: 8), controlPoint2: CGPoint(x: 8.01, y: 8.23))
        bezier5Path.addCurve(to: CGPoint(x: 8, y: 8.73), controlPoint1: CGPoint(x: 8.01, y: 8.59), controlPoint2: CGPoint(x: 8, y: 8.66))
        bezier5Path.addLine(to: CGPoint(x: 8, y: 8.72))
        bezier5Path.addLine(to: CGPoint(x: 8.01, y: 9.99))
        bezier5Path.usesEvenOddFillRule = true
        secondaryColor.setFill()
        bezier5Path.fill()

        context.restoreGState()



        context.restoreGState()


        //// Group 2
        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: frame.minX + 19.05, y: frame.minY + 14.59))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 20.31, y: frame.minY + 14.59))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 20.31, y: frame.minY + 14.59))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 20.51, y: frame.minY + 14.59), controlPoint1: CGPoint(x: frame.minX + 20.37, y: frame.minY + 14.59), controlPoint2: CGPoint(x: frame.minX + 20.44, y: frame.minY + 14.59))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 21.03, y: frame.minY + 14.1), controlPoint1: CGPoint(x: frame.minX + 20.8, y: frame.minY + 14.59), controlPoint2: CGPoint(x: frame.minX + 21.03, y: frame.minY + 14.4))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 21.03, y: frame.minY + 14.01), controlPoint1: CGPoint(x: frame.minX + 21.03, y: frame.minY + 14.07), controlPoint2: CGPoint(x: frame.minX + 21.03, y: frame.minY + 14.04))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 21.03, y: frame.minY + 14.01))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 20.04, y: frame.minY + 11.28))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 20.04, y: frame.minY + 11.29))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 20, y: frame.minY + 11.09), controlPoint1: CGPoint(x: frame.minX + 20.02, y: frame.minY + 11.23), controlPoint2: CGPoint(x: frame.minX + 20, y: frame.minY + 11.16))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 20.52, y: frame.minY + 10.58), controlPoint1: CGPoint(x: frame.minX + 20, y: frame.minY + 10.81), controlPoint2: CGPoint(x: frame.minX + 20.23, y: frame.minY + 10.58))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 20.9, y: frame.minY + 10.74), controlPoint1: CGPoint(x: frame.minX + 20.67, y: frame.minY + 10.58), controlPoint2: CGPoint(x: frame.minX + 20.8, y: frame.minY + 10.64))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 20.9, y: frame.minY + 10.74))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 27.97, y: frame.minY + 16.59))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 20.83, y: frame.minY + 22.44))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 20.84, y: frame.minY + 22.43))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 20.46, y: frame.minY + 22.6), controlPoint1: CGPoint(x: frame.minX + 20.74, y: frame.minY + 22.53), controlPoint2: CGPoint(x: frame.minX + 20.6, y: frame.minY + 22.6))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 19.94, y: frame.minY + 22.08), controlPoint1: CGPoint(x: frame.minX + 20.17, y: frame.minY + 22.6), controlPoint2: CGPoint(x: frame.minX + 19.94, y: frame.minY + 22.37))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 19.98, y: frame.minY + 21.89), controlPoint1: CGPoint(x: frame.minX + 19.94, y: frame.minY + 22.01), controlPoint2: CGPoint(x: frame.minX + 19.95, y: frame.minY + 21.95))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 19.98, y: frame.minY + 21.89))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 20.97, y: frame.minY + 19.16))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 20.97, y: frame.minY + 19.16))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 20.97, y: frame.minY + 19.07), controlPoint1: CGPoint(x: frame.minX + 20.97, y: frame.minY + 19.14), controlPoint2: CGPoint(x: frame.minX + 20.97, y: frame.minY + 19.1))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 20.45, y: frame.minY + 18.59), controlPoint1: CGPoint(x: frame.minX + 20.97, y: frame.minY + 18.78), controlPoint2: CGPoint(x: frame.minX + 20.74, y: frame.minY + 18.59))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 20.25, y: frame.minY + 18.58), controlPoint1: CGPoint(x: frame.minX + 20.38, y: frame.minY + 18.59), controlPoint2: CGPoint(x: frame.minX + 20.31, y: frame.minY + 18.58))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 20.25, y: frame.minY + 18.58))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 18.99, y: frame.minY + 18.59))
        bezier2Path.usesEvenOddFillRule = true
        primaryColor.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: frame.minX + 7.03, y: frame.minY + 27))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 7.03, y: frame.minY + 22.87))
        bezier3Path.addCurve(to: CGPoint(x: frame.minX + 9, y: frame.minY + 18.61), controlPoint1: CGPoint(x: frame.minX + 7.03, y: frame.minY + 21.23), controlPoint2: CGPoint(x: frame.minX + 7.73, y: frame.minY + 19.65))
        bezier3Path.addCurve(to: CGPoint(x: frame.minX + 13.84, y: frame.minY + 16.61), controlPoint1: CGPoint(x: frame.minX + 10.23, y: frame.minY + 17.61), controlPoint2: CGPoint(x: frame.minX + 11.93, y: frame.minY + 16.61))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 20.03, y: frame.minY + 16.61))
        primaryColor.setStroke()
        bezier3Path.lineWidth = 4
        bezier3Path.stroke()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneSlightRightNotSharpRight(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group 2
        context.saveGState()
        context.translateBy(x: frame.minX + 17.98, y: frame.minY + 19.11)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 1.32, y: 0.64))
        bezier3Path.addCurve(to: CGPoint(x: -3.98, y: -5.11), controlPoint1: CGPoint(x: 1.32, y: 0.64), controlPoint2: CGPoint(x: -0.98, y: -4.11))
        bezier3Path.addCurve(to: CGPoint(x: -9.98, y: 1.89), controlPoint1: CGPoint(x: -6.98, y: -6.11), controlPoint2: CGPoint(x: -9.67, y: -1.71))
        bezier3Path.addLine(to: CGPoint(x: -9.98, y: 7.89))
        secondaryColor.setStroke()
        bezier3Path.lineWidth = 4
        bezier3Path.lineJoinStyle = .round
        bezier3Path.stroke()


        //// Bezier 2 Drawing
        context.saveGState()
        context.translateBy(x: 10.23, y: 4.03)
        context.rotate(by: 149.53 * CGFloat.pi/180)

        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 4.01, y: 9.92))
        bezier2Path.addLine(to: CGPoint(x: 4.02, y: 8.66))
        bezier2Path.addLine(to: CGPoint(x: 4.01, y: 8.66))
        bezier2Path.addCurve(to: CGPoint(x: 4.01, y: 8.46), controlPoint1: CGPoint(x: 4.01, y: 8.6), controlPoint2: CGPoint(x: 4.01, y: 8.53))
        bezier2Path.addCurve(to: CGPoint(x: 3.53, y: 7.94), controlPoint1: CGPoint(x: 4.01, y: 8.17), controlPoint2: CGPoint(x: 3.82, y: 7.94))
        bezier2Path.addCurve(to: CGPoint(x: 3.43, y: 7.94), controlPoint1: CGPoint(x: 3.5, y: 7.94), controlPoint2: CGPoint(x: 3.46, y: 7.94))
        bezier2Path.addLine(to: CGPoint(x: 3.44, y: 7.94))
        bezier2Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier2Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier2Path.addCurve(to: CGPoint(x: 0.52, y: 8.97), controlPoint1: CGPoint(x: 0.65, y: 8.96), controlPoint2: CGPoint(x: 0.59, y: 8.97))
        bezier2Path.addCurve(to: CGPoint(x: 0, y: 8.45), controlPoint1: CGPoint(x: 0.23, y: 8.97), controlPoint2: CGPoint(x: 0, y: 8.74))
        bezier2Path.addCurve(to: CGPoint(x: 0.16, y: 8.07), controlPoint1: CGPoint(x: 0, y: 8.3), controlPoint2: CGPoint(x: 0.06, y: 8.17))
        bezier2Path.addLine(to: CGPoint(x: 0.16, y: 8.08))
        bezier2Path.addLine(to: CGPoint(x: 6.02, y: 0))
        bezier2Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier2Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier2Path.addCurve(to: CGPoint(x: 12.02, y: 8.52), controlPoint1: CGPoint(x: 11.96, y: 8.23), controlPoint2: CGPoint(x: 12.02, y: 8.37))
        bezier2Path.addCurve(to: CGPoint(x: 11.5, y: 9.03), controlPoint1: CGPoint(x: 12.02, y: 8.8), controlPoint2: CGPoint(x: 11.79, y: 9.03))
        bezier2Path.addCurve(to: CGPoint(x: 11.31, y: 8.99), controlPoint1: CGPoint(x: 11.43, y: 9.03), controlPoint2: CGPoint(x: 11.37, y: 9.02))
        bezier2Path.addLine(to: CGPoint(x: 11.31, y: 8.99))
        bezier2Path.addLine(to: CGPoint(x: 8.58, y: 8))
        bezier2Path.addLine(to: CGPoint(x: 8.59, y: 8.01))
        bezier2Path.addCurve(to: CGPoint(x: 8.49, y: 8), controlPoint1: CGPoint(x: 8.56, y: 8), controlPoint2: CGPoint(x: 8.52, y: 8))
        bezier2Path.addCurve(to: CGPoint(x: 8.01, y: 8.53), controlPoint1: CGPoint(x: 8.2, y: 8), controlPoint2: CGPoint(x: 8.01, y: 8.23))
        bezier2Path.addCurve(to: CGPoint(x: 8.01, y: 8.73), controlPoint1: CGPoint(x: 8.01, y: 8.59), controlPoint2: CGPoint(x: 8.01, y: 8.66))
        bezier2Path.addLine(to: CGPoint(x: 8, y: 8.72))
        bezier2Path.addLine(to: CGPoint(x: 8.01, y: 9.99))
        bezier2Path.usesEvenOddFillRule = true
        secondaryColor.setFill()
        bezier2Path.fill()

        context.restoreGState()



        context.restoreGState()


        //// Group 3
        context.saveGState()
        context.translateBy(x: 7.98, y: -0.58)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 7.17, y: 10.61))
        bezier4Path.addLine(to: CGPoint(x: 4.02, y: 13.58))
        bezier4Path.addCurve(to: CGPoint(x: 0.02, y: 22.58), controlPoint1: CGPoint(x: 1.02, y: 16.58), controlPoint2: CGPoint(x: 0.02, y: 20.93))
        bezier4Path.addLine(to: CGPoint(x: 0, y: 27.6))
        primaryColor.setStroke()
        bezier4Path.lineWidth = 4
        bezier4Path.lineJoinStyle = .round
        bezier4Path.stroke()


        //// Bezier 5 Drawing
        context.saveGState()
        context.translateBy(x: 10.25, y: 0)
        context.rotate(by: 49 * CGFloat.pi/180)

        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 4.01, y: 9.92))
        bezier5Path.addLine(to: CGPoint(x: 4.02, y: 8.66))
        bezier5Path.addLine(to: CGPoint(x: 4.01, y: 8.66))
        bezier5Path.addCurve(to: CGPoint(x: 4.01, y: 8.46), controlPoint1: CGPoint(x: 4.01, y: 8.6), controlPoint2: CGPoint(x: 4.01, y: 8.53))
        bezier5Path.addCurve(to: CGPoint(x: 3.53, y: 7.94), controlPoint1: CGPoint(x: 4.01, y: 8.17), controlPoint2: CGPoint(x: 3.82, y: 7.94))
        bezier5Path.addCurve(to: CGPoint(x: 3.43, y: 7.94), controlPoint1: CGPoint(x: 3.5, y: 7.94), controlPoint2: CGPoint(x: 3.46, y: 7.94))
        bezier5Path.addLine(to: CGPoint(x: 3.44, y: 7.94))
        bezier5Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier5Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier5Path.addCurve(to: CGPoint(x: 0.52, y: 8.97), controlPoint1: CGPoint(x: 0.65, y: 8.96), controlPoint2: CGPoint(x: 0.58, y: 8.97))
        bezier5Path.addCurve(to: CGPoint(x: -0, y: 8.45), controlPoint1: CGPoint(x: 0.23, y: 8.97), controlPoint2: CGPoint(x: -0, y: 8.74))
        bezier5Path.addCurve(to: CGPoint(x: 0.16, y: 8.07), controlPoint1: CGPoint(x: -0, y: 8.3), controlPoint2: CGPoint(x: 0.06, y: 8.17))
        bezier5Path.addLine(to: CGPoint(x: 0.16, y: 8.08))
        bezier5Path.addLine(to: CGPoint(x: 6.01, y: -0))
        bezier5Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier5Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier5Path.addCurve(to: CGPoint(x: 12.02, y: 8.52), controlPoint1: CGPoint(x: 11.96, y: 8.23), controlPoint2: CGPoint(x: 12.02, y: 8.37))
        bezier5Path.addCurve(to: CGPoint(x: 11.5, y: 9.03), controlPoint1: CGPoint(x: 12.02, y: 8.8), controlPoint2: CGPoint(x: 11.79, y: 9.03))
        bezier5Path.addCurve(to: CGPoint(x: 11.31, y: 8.99), controlPoint1: CGPoint(x: 11.43, y: 9.03), controlPoint2: CGPoint(x: 11.37, y: 9.02))
        bezier5Path.addLine(to: CGPoint(x: 11.31, y: 8.99))
        bezier5Path.addLine(to: CGPoint(x: 8.58, y: 8))
        bezier5Path.addLine(to: CGPoint(x: 8.59, y: 8.01))
        bezier5Path.addCurve(to: CGPoint(x: 8.49, y: 8), controlPoint1: CGPoint(x: 8.56, y: 8), controlPoint2: CGPoint(x: 8.52, y: 8))
        bezier5Path.addCurve(to: CGPoint(x: 8.01, y: 8.53), controlPoint1: CGPoint(x: 8.2, y: 8), controlPoint2: CGPoint(x: 8.01, y: 8.23))
        bezier5Path.addCurve(to: CGPoint(x: 8, y: 8.73), controlPoint1: CGPoint(x: 8.01, y: 8.59), controlPoint2: CGPoint(x: 8, y: 8.66))
        bezier5Path.addLine(to: CGPoint(x: 8, y: 8.72))
        bezier5Path.addLine(to: CGPoint(x: 8.01, y: 9.99))
        bezier5Path.usesEvenOddFillRule = true
        primaryColor.setFill()
        bezier5Path.fill()

        context.restoreGState()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneSharpRightNotSlightRight(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group 3
        context.saveGState()
        context.translateBy(x: 7.98, y: -0.58)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 7.17, y: 10.61))
        bezier4Path.addLine(to: CGPoint(x: 4.02, y: 13.58))
        bezier4Path.addCurve(to: CGPoint(x: 0.02, y: 22.58), controlPoint1: CGPoint(x: 1.02, y: 16.58), controlPoint2: CGPoint(x: 0.02, y: 20.93))
        bezier4Path.addLine(to: CGPoint(x: 0, y: 27.6))
        secondaryColor.setStroke()
        bezier4Path.lineWidth = 4
        bezier4Path.lineJoinStyle = .round
        bezier4Path.stroke()


        //// Bezier 5 Drawing
        context.saveGState()
        context.translateBy(x: 10.25, y: 0)
        context.rotate(by: 49 * CGFloat.pi/180)

        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 4.01, y: 9.92))
        bezier5Path.addLine(to: CGPoint(x: 4.02, y: 8.66))
        bezier5Path.addLine(to: CGPoint(x: 4.01, y: 8.66))
        bezier5Path.addCurve(to: CGPoint(x: 4.01, y: 8.46), controlPoint1: CGPoint(x: 4.01, y: 8.6), controlPoint2: CGPoint(x: 4.01, y: 8.53))
        bezier5Path.addCurve(to: CGPoint(x: 3.53, y: 7.94), controlPoint1: CGPoint(x: 4.01, y: 8.17), controlPoint2: CGPoint(x: 3.82, y: 7.94))
        bezier5Path.addCurve(to: CGPoint(x: 3.43, y: 7.94), controlPoint1: CGPoint(x: 3.5, y: 7.94), controlPoint2: CGPoint(x: 3.46, y: 7.94))
        bezier5Path.addLine(to: CGPoint(x: 3.44, y: 7.94))
        bezier5Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier5Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier5Path.addCurve(to: CGPoint(x: 0.52, y: 8.97), controlPoint1: CGPoint(x: 0.65, y: 8.96), controlPoint2: CGPoint(x: 0.58, y: 8.97))
        bezier5Path.addCurve(to: CGPoint(x: -0, y: 8.45), controlPoint1: CGPoint(x: 0.23, y: 8.97), controlPoint2: CGPoint(x: -0, y: 8.74))
        bezier5Path.addCurve(to: CGPoint(x: 0.16, y: 8.07), controlPoint1: CGPoint(x: -0, y: 8.3), controlPoint2: CGPoint(x: 0.06, y: 8.17))
        bezier5Path.addLine(to: CGPoint(x: 0.16, y: 8.08))
        bezier5Path.addLine(to: CGPoint(x: 6.01, y: -0))
        bezier5Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier5Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier5Path.addCurve(to: CGPoint(x: 12.02, y: 8.52), controlPoint1: CGPoint(x: 11.96, y: 8.23), controlPoint2: CGPoint(x: 12.02, y: 8.37))
        bezier5Path.addCurve(to: CGPoint(x: 11.5, y: 9.03), controlPoint1: CGPoint(x: 12.02, y: 8.8), controlPoint2: CGPoint(x: 11.79, y: 9.03))
        bezier5Path.addCurve(to: CGPoint(x: 11.31, y: 8.99), controlPoint1: CGPoint(x: 11.43, y: 9.03), controlPoint2: CGPoint(x: 11.37, y: 9.02))
        bezier5Path.addLine(to: CGPoint(x: 11.31, y: 8.99))
        bezier5Path.addLine(to: CGPoint(x: 8.58, y: 8))
        bezier5Path.addLine(to: CGPoint(x: 8.59, y: 8.01))
        bezier5Path.addCurve(to: CGPoint(x: 8.49, y: 8), controlPoint1: CGPoint(x: 8.56, y: 8), controlPoint2: CGPoint(x: 8.52, y: 8))
        bezier5Path.addCurve(to: CGPoint(x: 8.01, y: 8.53), controlPoint1: CGPoint(x: 8.2, y: 8), controlPoint2: CGPoint(x: 8.01, y: 8.23))
        bezier5Path.addCurve(to: CGPoint(x: 8, y: 8.73), controlPoint1: CGPoint(x: 8.01, y: 8.59), controlPoint2: CGPoint(x: 8, y: 8.66))
        bezier5Path.addLine(to: CGPoint(x: 8, y: 8.72))
        bezier5Path.addLine(to: CGPoint(x: 8.01, y: 9.99))
        bezier5Path.usesEvenOddFillRule = true
        secondaryColor.setFill()
        bezier5Path.fill()

        context.restoreGState()



        context.restoreGState()


        //// Group 2
        context.saveGState()
        context.translateBy(x: frame.minX + 17.98, y: frame.minY + 19.11)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 1.32, y: 0.64))
        bezier3Path.addCurve(to: CGPoint(x: -3.98, y: -5.11), controlPoint1: CGPoint(x: 1.32, y: 0.64), controlPoint2: CGPoint(x: -0.98, y: -4.11))
        bezier3Path.addCurve(to: CGPoint(x: -9.98, y: 1.89), controlPoint1: CGPoint(x: -6.98, y: -6.11), controlPoint2: CGPoint(x: -9.67, y: -1.71))
        bezier3Path.addLine(to: CGPoint(x: -9.98, y: 7.89))
        primaryColor.setStroke()
        bezier3Path.lineWidth = 4
        bezier3Path.lineJoinStyle = .round
        bezier3Path.stroke()


        //// Bezier 2 Drawing
        context.saveGState()
        context.translateBy(x: 10.23, y: 4.03)
        context.rotate(by: 149.53 * CGFloat.pi/180)

        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 4.01, y: 9.92))
        bezier2Path.addLine(to: CGPoint(x: 4.02, y: 8.66))
        bezier2Path.addLine(to: CGPoint(x: 4.01, y: 8.66))
        bezier2Path.addCurve(to: CGPoint(x: 4.01, y: 8.46), controlPoint1: CGPoint(x: 4.01, y: 8.6), controlPoint2: CGPoint(x: 4.01, y: 8.53))
        bezier2Path.addCurve(to: CGPoint(x: 3.53, y: 7.94), controlPoint1: CGPoint(x: 4.01, y: 8.17), controlPoint2: CGPoint(x: 3.82, y: 7.94))
        bezier2Path.addCurve(to: CGPoint(x: 3.43, y: 7.94), controlPoint1: CGPoint(x: 3.5, y: 7.94), controlPoint2: CGPoint(x: 3.46, y: 7.94))
        bezier2Path.addLine(to: CGPoint(x: 3.44, y: 7.94))
        bezier2Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier2Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier2Path.addCurve(to: CGPoint(x: 0.52, y: 8.97), controlPoint1: CGPoint(x: 0.65, y: 8.96), controlPoint2: CGPoint(x: 0.59, y: 8.97))
        bezier2Path.addCurve(to: CGPoint(x: 0, y: 8.45), controlPoint1: CGPoint(x: 0.23, y: 8.97), controlPoint2: CGPoint(x: 0, y: 8.74))
        bezier2Path.addCurve(to: CGPoint(x: 0.16, y: 8.07), controlPoint1: CGPoint(x: 0, y: 8.3), controlPoint2: CGPoint(x: 0.06, y: 8.17))
        bezier2Path.addLine(to: CGPoint(x: 0.16, y: 8.08))
        bezier2Path.addLine(to: CGPoint(x: 6.02, y: 0))
        bezier2Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier2Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier2Path.addCurve(to: CGPoint(x: 12.02, y: 8.52), controlPoint1: CGPoint(x: 11.96, y: 8.23), controlPoint2: CGPoint(x: 12.02, y: 8.37))
        bezier2Path.addCurve(to: CGPoint(x: 11.5, y: 9.03), controlPoint1: CGPoint(x: 12.02, y: 8.8), controlPoint2: CGPoint(x: 11.79, y: 9.03))
        bezier2Path.addCurve(to: CGPoint(x: 11.31, y: 8.99), controlPoint1: CGPoint(x: 11.43, y: 9.03), controlPoint2: CGPoint(x: 11.37, y: 9.02))
        bezier2Path.addLine(to: CGPoint(x: 11.31, y: 8.99))
        bezier2Path.addLine(to: CGPoint(x: 8.58, y: 8))
        bezier2Path.addLine(to: CGPoint(x: 8.59, y: 8.01))
        bezier2Path.addCurve(to: CGPoint(x: 8.49, y: 8), controlPoint1: CGPoint(x: 8.56, y: 8), controlPoint2: CGPoint(x: 8.52, y: 8))
        bezier2Path.addCurve(to: CGPoint(x: 8.01, y: 8.53), controlPoint1: CGPoint(x: 8.2, y: 8), controlPoint2: CGPoint(x: 8.01, y: 8.23))
        bezier2Path.addCurve(to: CGPoint(x: 8.01, y: 8.73), controlPoint1: CGPoint(x: 8.01, y: 8.59), controlPoint2: CGPoint(x: 8.01, y: 8.66))
        bezier2Path.addLine(to: CGPoint(x: 8, y: 8.72))
        bezier2Path.addLine(to: CGPoint(x: 8.01, y: 9.99))
        bezier2Path.usesEvenOddFillRule = true
        primaryColor.setFill()
        bezier2Path.fill()

        context.restoreGState()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneSlightRightNotUturn(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: frame.minX + 19, y: frame.minY + 20))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 19, y: frame.minY + 19.26))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 14, y: frame.minY + 14), controlPoint1: CGPoint(x: frame.minX + 19, y: frame.minY + 17.62), controlPoint2: CGPoint(x: frame.minX + 19, y: frame.minY + 14))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 9, y: frame.minY + 20), controlPoint1: CGPoint(x: frame.minX + 9, y: frame.minY + 14), controlPoint2: CGPoint(x: frame.minX + 9, y: frame.minY + 20))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 9, y: frame.minY + 27))
        secondaryColor.setStroke()
        bezierPath.lineWidth = 4
        bezierPath.stroke()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: frame.minX + 21.02, y: frame.minY + 18.05))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 21.01, y: frame.minY + 19.31), controlPoint1: CGPoint(x: frame.minX + 21.02, y: frame.minY + 18.05), controlPoint2: CGPoint(x: frame.minX + 21.01, y: frame.minY + 19.22))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 21.02, y: frame.minY + 19.51), controlPoint1: CGPoint(x: frame.minX + 21.02, y: frame.minY + 19.37), controlPoint2: CGPoint(x: frame.minX + 21.02, y: frame.minY + 19.44))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 21.5, y: frame.minY + 20.03), controlPoint1: CGPoint(x: frame.minX + 21.02, y: frame.minY + 19.8), controlPoint2: CGPoint(x: frame.minX + 21.21, y: frame.minY + 20.03))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 24.32, y: frame.minY + 19.04), controlPoint1: CGPoint(x: frame.minX + 21.71, y: frame.minY + 19.99), controlPoint2: CGPoint(x: frame.minX + 24.21, y: frame.minY + 19.08))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 24.51, y: frame.minY + 19), controlPoint1: CGPoint(x: frame.minX + 24.38, y: frame.minY + 19.02), controlPoint2: CGPoint(x: frame.minX + 24.45, y: frame.minY + 19))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 25, y: frame.minY + 19.34), controlPoint1: CGPoint(x: frame.minX + 24.74, y: frame.minY + 19), controlPoint2: CGPoint(x: frame.minX + 24.93, y: frame.minY + 19.15))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 25, y: frame.minY + 19.52))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 25, y: frame.minY + 19.69))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 24.87, y: frame.minY + 19.89), controlPoint1: CGPoint(x: frame.minX + 24.97, y: frame.minY + 19.77), controlPoint2: CGPoint(x: frame.minX + 24.93, y: frame.minY + 19.84))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 19.02, y: frame.minY + 26.97), controlPoint1: CGPoint(x: frame.minX + 24.74, y: frame.minY + 20.05), controlPoint2: CGPoint(x: frame.minX + 19.02, y: frame.minY + 26.97))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 15.31, y: frame.minY + 22.44), controlPoint1: CGPoint(x: frame.minX + 19.02, y: frame.minY + 26.97), controlPoint2: CGPoint(x: frame.minX + 16.98, y: frame.minY + 24.48))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 13.17, y: frame.minY + 19.84), controlPoint1: CGPoint(x: frame.minX + 14.18, y: frame.minY + 21.07), controlPoint2: CGPoint(x: frame.minX + 13.23, y: frame.minY + 19.9))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 13.01, y: frame.minY + 19.46), controlPoint1: CGPoint(x: frame.minX + 13.07, y: frame.minY + 19.74), controlPoint2: CGPoint(x: frame.minX + 13.01, y: frame.minY + 19.6))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 13.53, y: frame.minY + 18.94), controlPoint1: CGPoint(x: frame.minX + 13.01, y: frame.minY + 19.17), controlPoint2: CGPoint(x: frame.minX + 13.24, y: frame.minY + 18.94))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 13.72, y: frame.minY + 18.98), controlPoint1: CGPoint(x: frame.minX + 13.6, y: frame.minY + 18.94), controlPoint2: CGPoint(x: frame.minX + 13.66, y: frame.minY + 18.95))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 16.44, y: frame.minY + 19.97), controlPoint1: CGPoint(x: frame.minX + 13.83, y: frame.minY + 19.02), controlPoint2: CGPoint(x: frame.minX + 16.34, y: frame.minY + 19.93))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 17.02, y: frame.minY + 19.45), controlPoint1: CGPoint(x: frame.minX + 16.83, y: frame.minY + 19.97), controlPoint2: CGPoint(x: frame.minX + 17.02, y: frame.minY + 19.74))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 17.03, y: frame.minY + 19.25), controlPoint1: CGPoint(x: frame.minX + 17.02, y: frame.minY + 19.38), controlPoint2: CGPoint(x: frame.minX + 17.03, y: frame.minY + 19.31))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 17.02, y: frame.minY + 17.99), controlPoint1: CGPoint(x: frame.minX + 17.03, y: frame.minY + 19.17), controlPoint2: CGPoint(x: frame.minX + 17.02, y: frame.minY + 17.99))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 21.02, y: frame.minY + 18.05))
        bezier2Path.close()
        secondaryColor.setFill()
        bezier2Path.fill()




        //// Group 3
        context.saveGState()
        context.translateBy(x: 8.98, y: -0.58)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 7.17, y: 10.61))
        bezier4Path.addLine(to: CGPoint(x: 4.02, y: 13.58))
        bezier4Path.addCurve(to: CGPoint(x: 0.02, y: 21.58), controlPoint1: CGPoint(x: 1.02, y: 16.58), controlPoint2: CGPoint(x: 0.02, y: 17.58))
        bezier4Path.addLine(to: CGPoint(x: 0, y: 27.6))
        primaryColor.setStroke()
        bezier4Path.lineWidth = 4
        bezier4Path.lineJoinStyle = .round
        bezier4Path.stroke()


        //// Bezier 5 Drawing
        context.saveGState()
        context.translateBy(x: 10.25, y: 0)
        context.rotate(by: 49 * CGFloat.pi/180)

        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 4.01, y: 9.92))
        bezier5Path.addLine(to: CGPoint(x: 4.02, y: 8.66))
        bezier5Path.addLine(to: CGPoint(x: 4.01, y: 8.66))
        bezier5Path.addCurve(to: CGPoint(x: 4.01, y: 8.46), controlPoint1: CGPoint(x: 4.01, y: 8.6), controlPoint2: CGPoint(x: 4.01, y: 8.53))
        bezier5Path.addCurve(to: CGPoint(x: 3.53, y: 7.94), controlPoint1: CGPoint(x: 4.01, y: 8.17), controlPoint2: CGPoint(x: 3.82, y: 7.94))
        bezier5Path.addCurve(to: CGPoint(x: 3.43, y: 7.94), controlPoint1: CGPoint(x: 3.5, y: 7.94), controlPoint2: CGPoint(x: 3.46, y: 7.94))
        bezier5Path.addLine(to: CGPoint(x: 3.44, y: 7.94))
        bezier5Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier5Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier5Path.addCurve(to: CGPoint(x: 0.52, y: 8.97), controlPoint1: CGPoint(x: 0.65, y: 8.96), controlPoint2: CGPoint(x: 0.58, y: 8.97))
        bezier5Path.addCurve(to: CGPoint(x: 0, y: 8.45), controlPoint1: CGPoint(x: 0.23, y: 8.97), controlPoint2: CGPoint(x: 0, y: 8.74))
        bezier5Path.addCurve(to: CGPoint(x: 0.16, y: 8.07), controlPoint1: CGPoint(x: 0, y: 8.3), controlPoint2: CGPoint(x: 0.06, y: 8.17))
        bezier5Path.addLine(to: CGPoint(x: 0.16, y: 8.08))
        bezier5Path.addLine(to: CGPoint(x: 6.02, y: 0))
        bezier5Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier5Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier5Path.addCurve(to: CGPoint(x: 12.02, y: 8.52), controlPoint1: CGPoint(x: 11.96, y: 8.23), controlPoint2: CGPoint(x: 12.02, y: 8.37))
        bezier5Path.addCurve(to: CGPoint(x: 11.5, y: 9.03), controlPoint1: CGPoint(x: 12.02, y: 8.8), controlPoint2: CGPoint(x: 11.79, y: 9.03))
        bezier5Path.addCurve(to: CGPoint(x: 11.31, y: 8.99), controlPoint1: CGPoint(x: 11.43, y: 9.03), controlPoint2: CGPoint(x: 11.37, y: 9.02))
        bezier5Path.addLine(to: CGPoint(x: 11.31, y: 8.99))
        bezier5Path.addLine(to: CGPoint(x: 8.58, y: 8))
        bezier5Path.addLine(to: CGPoint(x: 8.59, y: 8.01))
        bezier5Path.addCurve(to: CGPoint(x: 8.49, y: 8), controlPoint1: CGPoint(x: 8.56, y: 8), controlPoint2: CGPoint(x: 8.52, y: 8))
        bezier5Path.addCurve(to: CGPoint(x: 8.01, y: 8.53), controlPoint1: CGPoint(x: 8.2, y: 8), controlPoint2: CGPoint(x: 8.01, y: 8.23))
        bezier5Path.addCurve(to: CGPoint(x: 8.01, y: 8.73), controlPoint1: CGPoint(x: 8.01, y: 8.59), controlPoint2: CGPoint(x: 8.01, y: 8.66))
        bezier5Path.addLine(to: CGPoint(x: 8, y: 8.72))
        bezier5Path.addLine(to: CGPoint(x: 8.01, y: 9.99))
        bezier5Path.usesEvenOddFillRule = true
        primaryColor.setFill()
        bezier5Path.fill()

        context.restoreGState()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneUturnNotSlightRight(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group 3
        context.saveGState()
        context.translateBy(x: 8.98, y: -0.58)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 7.17, y: 10.61))
        bezier4Path.addLine(to: CGPoint(x: 4.02, y: 13.58))
        bezier4Path.addCurve(to: CGPoint(x: 0.02, y: 21.58), controlPoint1: CGPoint(x: 1.02, y: 16.58), controlPoint2: CGPoint(x: 0.02, y: 17.58))
        bezier4Path.addLine(to: CGPoint(x: 0, y: 27.6))
        secondaryColor.setStroke()
        bezier4Path.lineWidth = 4
        bezier4Path.lineJoinStyle = .round
        bezier4Path.stroke()


        //// Bezier 5 Drawing
        context.saveGState()
        context.translateBy(x: 10.25, y: 0)
        context.rotate(by: 49 * CGFloat.pi/180)

        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 4.01, y: 9.92))
        bezier5Path.addLine(to: CGPoint(x: 4.02, y: 8.66))
        bezier5Path.addLine(to: CGPoint(x: 4.01, y: 8.66))
        bezier5Path.addCurve(to: CGPoint(x: 4.01, y: 8.46), controlPoint1: CGPoint(x: 4.01, y: 8.6), controlPoint2: CGPoint(x: 4.01, y: 8.53))
        bezier5Path.addCurve(to: CGPoint(x: 3.53, y: 7.94), controlPoint1: CGPoint(x: 4.01, y: 8.17), controlPoint2: CGPoint(x: 3.82, y: 7.94))
        bezier5Path.addCurve(to: CGPoint(x: 3.43, y: 7.94), controlPoint1: CGPoint(x: 3.5, y: 7.94), controlPoint2: CGPoint(x: 3.46, y: 7.94))
        bezier5Path.addLine(to: CGPoint(x: 3.44, y: 7.94))
        bezier5Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier5Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier5Path.addCurve(to: CGPoint(x: 0.52, y: 8.97), controlPoint1: CGPoint(x: 0.65, y: 8.96), controlPoint2: CGPoint(x: 0.58, y: 8.97))
        bezier5Path.addCurve(to: CGPoint(x: 0, y: 8.45), controlPoint1: CGPoint(x: 0.23, y: 8.97), controlPoint2: CGPoint(x: 0, y: 8.74))
        bezier5Path.addCurve(to: CGPoint(x: 0.16, y: 8.07), controlPoint1: CGPoint(x: 0, y: 8.3), controlPoint2: CGPoint(x: 0.06, y: 8.17))
        bezier5Path.addLine(to: CGPoint(x: 0.16, y: 8.08))
        bezier5Path.addLine(to: CGPoint(x: 6.02, y: 0))
        bezier5Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier5Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier5Path.addCurve(to: CGPoint(x: 12.02, y: 8.52), controlPoint1: CGPoint(x: 11.96, y: 8.23), controlPoint2: CGPoint(x: 12.02, y: 8.37))
        bezier5Path.addCurve(to: CGPoint(x: 11.5, y: 9.03), controlPoint1: CGPoint(x: 12.02, y: 8.8), controlPoint2: CGPoint(x: 11.79, y: 9.03))
        bezier5Path.addCurve(to: CGPoint(x: 11.31, y: 8.99), controlPoint1: CGPoint(x: 11.43, y: 9.03), controlPoint2: CGPoint(x: 11.37, y: 9.02))
        bezier5Path.addLine(to: CGPoint(x: 11.31, y: 8.99))
        bezier5Path.addLine(to: CGPoint(x: 8.58, y: 8))
        bezier5Path.addLine(to: CGPoint(x: 8.59, y: 8.01))
        bezier5Path.addCurve(to: CGPoint(x: 8.49, y: 8), controlPoint1: CGPoint(x: 8.56, y: 8), controlPoint2: CGPoint(x: 8.52, y: 8))
        bezier5Path.addCurve(to: CGPoint(x: 8.01, y: 8.53), controlPoint1: CGPoint(x: 8.2, y: 8), controlPoint2: CGPoint(x: 8.01, y: 8.23))
        bezier5Path.addCurve(to: CGPoint(x: 8.01, y: 8.73), controlPoint1: CGPoint(x: 8.01, y: 8.59), controlPoint2: CGPoint(x: 8.01, y: 8.66))
        bezier5Path.addLine(to: CGPoint(x: 8, y: 8.72))
        bezier5Path.addLine(to: CGPoint(x: 8.01, y: 9.99))
        bezier5Path.usesEvenOddFillRule = true
        secondaryColor.setFill()
        bezier5Path.fill()

        context.restoreGState()



        context.restoreGState()


        //// Group
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: frame.minX + 19, y: frame.minY + 20))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 19, y: frame.minY + 19.26))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 14, y: frame.minY + 14), controlPoint1: CGPoint(x: frame.minX + 19, y: frame.minY + 17.62), controlPoint2: CGPoint(x: frame.minX + 19, y: frame.minY + 14))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 9, y: frame.minY + 20), controlPoint1: CGPoint(x: frame.minX + 9, y: frame.minY + 14), controlPoint2: CGPoint(x: frame.minX + 9, y: frame.minY + 20))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 9, y: frame.minY + 27))
        primaryColor.setStroke()
        bezierPath.lineWidth = 4
        bezierPath.stroke()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: frame.minX + 21.02, y: frame.minY + 18.05))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 21.01, y: frame.minY + 19.31), controlPoint1: CGPoint(x: frame.minX + 21.02, y: frame.minY + 18.05), controlPoint2: CGPoint(x: frame.minX + 21.01, y: frame.minY + 19.22))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 21.02, y: frame.minY + 19.51), controlPoint1: CGPoint(x: frame.minX + 21.02, y: frame.minY + 19.37), controlPoint2: CGPoint(x: frame.minX + 21.02, y: frame.minY + 19.44))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 21.5, y: frame.minY + 20.03), controlPoint1: CGPoint(x: frame.minX + 21.02, y: frame.minY + 19.8), controlPoint2: CGPoint(x: frame.minX + 21.21, y: frame.minY + 20.03))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 24.32, y: frame.minY + 19.04), controlPoint1: CGPoint(x: frame.minX + 21.71, y: frame.minY + 19.99), controlPoint2: CGPoint(x: frame.minX + 24.21, y: frame.minY + 19.08))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 24.51, y: frame.minY + 19), controlPoint1: CGPoint(x: frame.minX + 24.38, y: frame.minY + 19.02), controlPoint2: CGPoint(x: frame.minX + 24.45, y: frame.minY + 19))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 25, y: frame.minY + 19.34), controlPoint1: CGPoint(x: frame.minX + 24.74, y: frame.minY + 19), controlPoint2: CGPoint(x: frame.minX + 24.93, y: frame.minY + 19.15))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 25, y: frame.minY + 19.52))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 25, y: frame.minY + 19.69))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 24.87, y: frame.minY + 19.89), controlPoint1: CGPoint(x: frame.minX + 24.97, y: frame.minY + 19.77), controlPoint2: CGPoint(x: frame.minX + 24.93, y: frame.minY + 19.84))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 19.02, y: frame.minY + 26.97), controlPoint1: CGPoint(x: frame.minX + 24.74, y: frame.minY + 20.05), controlPoint2: CGPoint(x: frame.minX + 19.02, y: frame.minY + 26.97))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 15.31, y: frame.minY + 22.44), controlPoint1: CGPoint(x: frame.minX + 19.02, y: frame.minY + 26.97), controlPoint2: CGPoint(x: frame.minX + 16.98, y: frame.minY + 24.48))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 13.17, y: frame.minY + 19.84), controlPoint1: CGPoint(x: frame.minX + 14.18, y: frame.minY + 21.07), controlPoint2: CGPoint(x: frame.minX + 13.23, y: frame.minY + 19.9))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 13.01, y: frame.minY + 19.46), controlPoint1: CGPoint(x: frame.minX + 13.07, y: frame.minY + 19.74), controlPoint2: CGPoint(x: frame.minX + 13.01, y: frame.minY + 19.6))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 13.53, y: frame.minY + 18.94), controlPoint1: CGPoint(x: frame.minX + 13.01, y: frame.minY + 19.17), controlPoint2: CGPoint(x: frame.minX + 13.24, y: frame.minY + 18.94))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 13.72, y: frame.minY + 18.98), controlPoint1: CGPoint(x: frame.minX + 13.6, y: frame.minY + 18.94), controlPoint2: CGPoint(x: frame.minX + 13.66, y: frame.minY + 18.95))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 16.44, y: frame.minY + 19.97), controlPoint1: CGPoint(x: frame.minX + 13.83, y: frame.minY + 19.02), controlPoint2: CGPoint(x: frame.minX + 16.34, y: frame.minY + 19.93))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 17.02, y: frame.minY + 19.45), controlPoint1: CGPoint(x: frame.minX + 16.83, y: frame.minY + 19.97), controlPoint2: CGPoint(x: frame.minX + 17.02, y: frame.minY + 19.74))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 17.03, y: frame.minY + 19.25), controlPoint1: CGPoint(x: frame.minX + 17.02, y: frame.minY + 19.38), controlPoint2: CGPoint(x: frame.minX + 17.03, y: frame.minY + 19.31))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 17.02, y: frame.minY + 17.99), controlPoint1: CGPoint(x: frame.minX + 17.03, y: frame.minY + 19.17), controlPoint2: CGPoint(x: frame.minX + 17.02, y: frame.minY + 17.99))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 21.02, y: frame.minY + 18.05))
        bezier2Path.close()
        primaryColor.setFill()
        bezier2Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneRightNotUturn(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group
        context.saveGState()
        context.translateBy(x: frame.minX + 12.89, y: frame.minY + 15.95)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 4.11, y: 5.33))
        bezierPath.addLine(to: CGPoint(x: 4.11, y: -1.82))
        bezierPath.addCurve(to: CGPoint(x: -0.89, y: -6.95), controlPoint1: CGPoint(x: 4.11, y: -3.17), controlPoint2: CGPoint(x: 4.11, y: -6.95))
        bezierPath.addCurve(to: CGPoint(x: -5.89, y: -2.04), controlPoint1: CGPoint(x: -5.89, y: -6.95), controlPoint2: CGPoint(x: -5.89, y: -2.04))
        bezierPath.addLine(to: CGPoint(x: -5.89, y: 11.05))
        secondaryColor.setStroke()
        bezierPath.lineWidth = 4
        bezierPath.stroke()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 6.13, y: -0.9))
        bezier2Path.addCurve(to: CGPoint(x: 6.12, y: 0.36), controlPoint1: CGPoint(x: 6.13, y: -0.9), controlPoint2: CGPoint(x: 6.12, y: 0.28))
        bezier2Path.addCurve(to: CGPoint(x: 6.13, y: 0.56), controlPoint1: CGPoint(x: 6.12, y: 0.43), controlPoint2: CGPoint(x: 6.13, y: 0.5))
        bezier2Path.addCurve(to: CGPoint(x: 6.61, y: 1.09), controlPoint1: CGPoint(x: 6.13, y: 0.85), controlPoint2: CGPoint(x: 6.32, y: 1.09))
        bezier2Path.addCurve(to: CGPoint(x: 9.43, y: 0.09), controlPoint1: CGPoint(x: 6.81, y: 1.04), controlPoint2: CGPoint(x: 9.31, y: 0.13))
        bezier2Path.addCurve(to: CGPoint(x: 9.62, y: 0.06), controlPoint1: CGPoint(x: 9.49, y: 0.07), controlPoint2: CGPoint(x: 9.55, y: 0.06))
        bezier2Path.addCurve(to: CGPoint(x: 10.11, y: 0.4), controlPoint1: CGPoint(x: 9.84, y: 0.06), controlPoint2: CGPoint(x: 10.04, y: 0.2))
        bezier2Path.addLine(to: CGPoint(x: 10.11, y: 0.57))
        bezier2Path.addLine(to: CGPoint(x: 10.11, y: 0.75))
        bezier2Path.addCurve(to: CGPoint(x: 9.98, y: 0.95), controlPoint1: CGPoint(x: 10.08, y: 0.82), controlPoint2: CGPoint(x: 10.03, y: 0.89))
        bezier2Path.addCurve(to: CGPoint(x: 4.12, y: 8.02), controlPoint1: CGPoint(x: 9.85, y: 1.11), controlPoint2: CGPoint(x: 4.12, y: 8.02))
        bezier2Path.addCurve(to: CGPoint(x: 0.41, y: 3.5), controlPoint1: CGPoint(x: 4.12, y: 8.02), controlPoint2: CGPoint(x: 2.08, y: 5.53))
        bezier2Path.addCurve(to: CGPoint(x: -1.72, y: 0.89), controlPoint1: CGPoint(x: -0.71, y: 2.12), controlPoint2: CGPoint(x: -1.67, y: 0.95))
        bezier2Path.addCurve(to: CGPoint(x: -1.88, y: 0.51), controlPoint1: CGPoint(x: -1.82, y: 0.79), controlPoint2: CGPoint(x: -1.88, y: 0.66))
        bezier2Path.addCurve(to: CGPoint(x: -1.37, y: -0.01), controlPoint1: CGPoint(x: -1.88, y: 0.22), controlPoint2: CGPoint(x: -1.65, y: -0.01))
        bezier2Path.addCurve(to: CGPoint(x: -1.18, y: 0.03), controlPoint1: CGPoint(x: -1.3, y: -0.01), controlPoint2: CGPoint(x: -1.23, y: 0.01))
        bezier2Path.addCurve(to: CGPoint(x: 1.55, y: 1.02), controlPoint1: CGPoint(x: -1.06, y: 0.07), controlPoint2: CGPoint(x: 1.44, y: 0.98))
        bezier2Path.addCurve(to: CGPoint(x: 2.13, y: 0.5), controlPoint1: CGPoint(x: 1.94, y: 1.02), controlPoint2: CGPoint(x: 2.13, y: 0.79))
        bezier2Path.addCurve(to: CGPoint(x: 2.13, y: 0.3), controlPoint1: CGPoint(x: 2.13, y: 0.43), controlPoint2: CGPoint(x: 2.13, y: 0.36))
        bezier2Path.addCurve(to: CGPoint(x: 2.13, y: -0.96), controlPoint1: CGPoint(x: 2.13, y: 0.22), controlPoint2: CGPoint(x: 2.13, y: -0.96))
        bezier2Path.addLine(to: CGPoint(x: 6.13, y: -0.9))
        bezier2Path.close()
        secondaryColor.setFill()
        bezier2Path.fill()



        context.restoreGState()


        //// Group 2
        context.saveGState()
        context.translateBy(x: frame.minX + 12.98, y: frame.minY + 14.02)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 7.47, y: -11.01))
        bezier3Path.addCurve(to: CGPoint(x: 7.79, y: -10.85), controlPoint1: CGPoint(x: 7.57, y: -11.01), controlPoint2: CGPoint(x: 7.7, y: -10.95))
        bezier3Path.addCurve(to: CGPoint(x: 14.87, y: -5), controlPoint1: CGPoint(x: 7.95, y: -10.72), controlPoint2: CGPoint(x: 14.87, y: -5))
        bezier3Path.addCurve(to: CGPoint(x: 7.73, y: 0.84), controlPoint1: CGPoint(x: 14.87, y: -5), controlPoint2: CGPoint(x: 7.89, y: 0.71))
        bezier3Path.addCurve(to: CGPoint(x: 7.35, y: 1), controlPoint1: CGPoint(x: 7.63, y: 0.94), controlPoint2: CGPoint(x: 7.5, y: 1))
        bezier3Path.addCurve(to: CGPoint(x: 6.84, y: 0.49), controlPoint1: CGPoint(x: 7.07, y: 1), controlPoint2: CGPoint(x: 6.84, y: 0.77))
        bezier3Path.addCurve(to: CGPoint(x: 6.87, y: 0.3), controlPoint1: CGPoint(x: 6.84, y: 0.42), controlPoint2: CGPoint(x: 6.85, y: 0.36))
        bezier3Path.addCurve(to: CGPoint(x: 7.86, y: -2.43), controlPoint1: CGPoint(x: 6.92, y: 0.18), controlPoint2: CGPoint(x: 7.82, y: -2.32))
        bezier3Path.addCurve(to: CGPoint(x: 7.34, y: -3.01), controlPoint1: CGPoint(x: 7.87, y: -2.81), controlPoint2: CGPoint(x: 7.63, y: -3.01))
        bezier3Path.addCurve(to: CGPoint(x: 7.15, y: -3.01), controlPoint1: CGPoint(x: 7.28, y: -3.01), controlPoint2: CGPoint(x: 7.21, y: -3.01))
        bezier3Path.addCurve(to: CGPoint(x: 5.88, y: -3.01), controlPoint1: CGPoint(x: 7.06, y: -3.01), controlPoint2: CGPoint(x: 5.88, y: -3.01))
        bezier3Path.addLine(to: CGPoint(x: 5.94, y: -7))
        bezier3Path.addCurve(to: CGPoint(x: 7.2, y: -7), controlPoint1: CGPoint(x: 5.94, y: -7), controlPoint2: CGPoint(x: 7.12, y: -7))
        bezier3Path.addCurve(to: CGPoint(x: 7.4, y: -7.01), controlPoint1: CGPoint(x: 7.27, y: -7), controlPoint2: CGPoint(x: 7.34, y: -7.01))
        bezier3Path.addCurve(to: CGPoint(x: 7.93, y: -7.49), controlPoint1: CGPoint(x: 7.7, y: -7.01), controlPoint2: CGPoint(x: 7.93, y: -7.2))
        bezier3Path.addCurve(to: CGPoint(x: 6.94, y: -10.3), controlPoint1: CGPoint(x: 7.89, y: -7.69), controlPoint2: CGPoint(x: 6.98, y: -10.19))
        bezier3Path.addCurve(to: CGPoint(x: 6.9, y: -10.5), controlPoint1: CGPoint(x: 6.91, y: -10.37), controlPoint2: CGPoint(x: 6.9, y: -10.43))
        bezier3Path.addCurve(to: CGPoint(x: 7.41, y: -11.02), controlPoint1: CGPoint(x: 6.9, y: -10.78), controlPoint2: CGPoint(x: 7.13, y: -11.01))
        bezier3Path.addLine(to: CGPoint(x: 7.47, y: -11.01))
        bezier3Path.close()
        primaryColor.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: -5.98, y: 12.98))
        bezier4Path.addLine(to: CGPoint(x: -5.98, y: -0.02))
        bezier4Path.addCurve(to: CGPoint(x: -0.98, y: -5.02), controlPoint1: CGPoint(x: -5.98, y: -0.02), controlPoint2: CGPoint(x: -5.98, y: -5.02))
        bezier4Path.addLine(to: CGPoint(x: 6.02, y: -5.02))
        primaryColor.setStroke()
        bezier4Path.lineWidth = 4
        bezier4Path.stroke()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneStraightNotRightOrUturn(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group
        context.saveGState()
        context.translateBy(x: frame.minX + 14.89, y: frame.minY + 18.95)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 3.11, y: 5.33))
        bezierPath.addLine(to: CGPoint(x: 3.11, y: -1.82))
        bezierPath.addCurve(to: CGPoint(x: -1.89, y: -6.95), controlPoint1: CGPoint(x: 3.11, y: -3.17), controlPoint2: CGPoint(x: 2.11, y: -6.95))
        bezierPath.addCurve(to: CGPoint(x: -5.89, y: -2.04), controlPoint1: CGPoint(x: -5.89, y: -6.95), controlPoint2: CGPoint(x: -5.89, y: -2.04))
        bezierPath.addLine(to: CGPoint(x: -5.89, y: 8.05))
        secondaryColor.setStroke()
        bezierPath.lineWidth = 4
        bezierPath.stroke()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 5.13, y: -0.9))
        bezier2Path.addCurve(to: CGPoint(x: 5.12, y: 0.36), controlPoint1: CGPoint(x: 5.13, y: -0.9), controlPoint2: CGPoint(x: 5.12, y: 0.28))
        bezier2Path.addCurve(to: CGPoint(x: 5.13, y: 0.56), controlPoint1: CGPoint(x: 5.12, y: 0.43), controlPoint2: CGPoint(x: 5.13, y: 0.5))
        bezier2Path.addCurve(to: CGPoint(x: 5.61, y: 1.09), controlPoint1: CGPoint(x: 5.13, y: 0.85), controlPoint2: CGPoint(x: 5.32, y: 1.09))
        bezier2Path.addCurve(to: CGPoint(x: 8.43, y: 0.09), controlPoint1: CGPoint(x: 5.81, y: 1.04), controlPoint2: CGPoint(x: 8.31, y: 0.13))
        bezier2Path.addCurve(to: CGPoint(x: 8.62, y: 0.06), controlPoint1: CGPoint(x: 8.49, y: 0.07), controlPoint2: CGPoint(x: 8.55, y: 0.06))
        bezier2Path.addCurve(to: CGPoint(x: 9.11, y: 0.4), controlPoint1: CGPoint(x: 8.84, y: 0.06), controlPoint2: CGPoint(x: 9.04, y: 0.2))
        bezier2Path.addLine(to: CGPoint(x: 9.11, y: 0.57))
        bezier2Path.addLine(to: CGPoint(x: 9.11, y: 0.75))
        bezier2Path.addCurve(to: CGPoint(x: 8.98, y: 0.95), controlPoint1: CGPoint(x: 9.08, y: 0.82), controlPoint2: CGPoint(x: 9.03, y: 0.89))
        bezier2Path.addCurve(to: CGPoint(x: 3.12, y: 8.02), controlPoint1: CGPoint(x: 8.85, y: 1.11), controlPoint2: CGPoint(x: 3.12, y: 8.02))
        bezier2Path.addCurve(to: CGPoint(x: -0.59, y: 3.5), controlPoint1: CGPoint(x: 3.12, y: 8.02), controlPoint2: CGPoint(x: 1.08, y: 5.53))
        bezier2Path.addCurve(to: CGPoint(x: -2.72, y: 0.89), controlPoint1: CGPoint(x: -1.71, y: 2.12), controlPoint2: CGPoint(x: -2.67, y: 0.95))
        bezier2Path.addCurve(to: CGPoint(x: -2.88, y: 0.51), controlPoint1: CGPoint(x: -2.82, y: 0.79), controlPoint2: CGPoint(x: -2.88, y: 0.66))
        bezier2Path.addCurve(to: CGPoint(x: -2.37, y: -0.01), controlPoint1: CGPoint(x: -2.88, y: 0.22), controlPoint2: CGPoint(x: -2.65, y: -0.01))
        bezier2Path.addCurve(to: CGPoint(x: -2.18, y: 0.03), controlPoint1: CGPoint(x: -2.3, y: -0.01), controlPoint2: CGPoint(x: -2.23, y: 0.01))
        bezier2Path.addCurve(to: CGPoint(x: 0.55, y: 1.02), controlPoint1: CGPoint(x: -2.06, y: 0.07), controlPoint2: CGPoint(x: 0.44, y: 0.98))
        bezier2Path.addCurve(to: CGPoint(x: 1.13, y: 0.5), controlPoint1: CGPoint(x: 0.94, y: 1.02), controlPoint2: CGPoint(x: 1.13, y: 0.79))
        bezier2Path.addCurve(to: CGPoint(x: 1.13, y: 0.3), controlPoint1: CGPoint(x: 1.13, y: 0.43), controlPoint2: CGPoint(x: 1.13, y: 0.36))
        bezier2Path.addCurve(to: CGPoint(x: 1.13, y: -0.96), controlPoint1: CGPoint(x: 1.13, y: 0.22), controlPoint2: CGPoint(x: 1.13, y: -0.96))
        bezier2Path.addLine(to: CGPoint(x: 5.13, y: -0.9))
        bezier2Path.close()
        secondaryColor.setFill()
        bezier2Path.fill()



        context.restoreGState()


        //// Group 2
        context.saveGState()
        context.translateBy(x: frame.minX + 14.98, y: frame.minY + 17.02)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 6.15, y: -11.01))
        bezier3Path.addCurve(to: CGPoint(x: 6.4, y: -10.85), controlPoint1: CGPoint(x: 6.22, y: -11.01), controlPoint2: CGPoint(x: 6.32, y: -10.95))
        bezier3Path.addCurve(to: CGPoint(x: 12.02, y: -5), controlPoint1: CGPoint(x: 6.52, y: -10.72), controlPoint2: CGPoint(x: 12.02, y: -5))
        bezier3Path.addCurve(to: CGPoint(x: 6.35, y: 0.84), controlPoint1: CGPoint(x: 12.02, y: -5), controlPoint2: CGPoint(x: 6.47, y: 0.71))
        bezier3Path.addCurve(to: CGPoint(x: 6.05, y: 1), controlPoint1: CGPoint(x: 6.27, y: 0.94), controlPoint2: CGPoint(x: 6.17, y: 1))
        bezier3Path.addCurve(to: CGPoint(x: 5.64, y: 0.49), controlPoint1: CGPoint(x: 5.82, y: 1), controlPoint2: CGPoint(x: 5.64, y: 0.77))
        bezier3Path.addCurve(to: CGPoint(x: 5.67, y: 0.3), controlPoint1: CGPoint(x: 5.64, y: 0.42), controlPoint2: CGPoint(x: 5.65, y: 0.36))
        bezier3Path.addCurve(to: CGPoint(x: 6.45, y: -2.43), controlPoint1: CGPoint(x: 5.7, y: 0.18), controlPoint2: CGPoint(x: 6.42, y: -2.32))
        bezier3Path.addCurve(to: CGPoint(x: 6.04, y: -3.01), controlPoint1: CGPoint(x: 6.46, y: -2.81), controlPoint2: CGPoint(x: 6.27, y: -3.01))
        bezier3Path.addCurve(to: CGPoint(x: 5.89, y: -3.01), controlPoint1: CGPoint(x: 5.99, y: -3.01), controlPoint2: CGPoint(x: 5.93, y: -3.01))
        bezier3Path.addCurve(to: CGPoint(x: 4.88, y: -3.01), controlPoint1: CGPoint(x: 5.82, y: -3.01), controlPoint2: CGPoint(x: 4.88, y: -3.01))
        bezier3Path.addLine(to: CGPoint(x: 4.93, y: -7))
        bezier3Path.addCurve(to: CGPoint(x: 5.93, y: -7), controlPoint1: CGPoint(x: 4.93, y: -7), controlPoint2: CGPoint(x: 5.86, y: -7))
        bezier3Path.addCurve(to: CGPoint(x: 6.09, y: -7.01), controlPoint1: CGPoint(x: 5.98, y: -7), controlPoint2: CGPoint(x: 6.04, y: -7.01))
        bezier3Path.addCurve(to: CGPoint(x: 6.51, y: -7.49), controlPoint1: CGPoint(x: 6.32, y: -7.01), controlPoint2: CGPoint(x: 6.51, y: -7.2))
        bezier3Path.addCurve(to: CGPoint(x: 5.72, y: -10.3), controlPoint1: CGPoint(x: 6.47, y: -7.69), controlPoint2: CGPoint(x: 5.75, y: -10.19))
        bezier3Path.addCurve(to: CGPoint(x: 5.69, y: -10.5), controlPoint1: CGPoint(x: 5.7, y: -10.37), controlPoint2: CGPoint(x: 5.69, y: -10.43))
        bezier3Path.addCurve(to: CGPoint(x: 6.09, y: -11.02), controlPoint1: CGPoint(x: 5.69, y: -10.78), controlPoint2: CGPoint(x: 5.87, y: -11.01))
        bezier3Path.addLine(to: CGPoint(x: 6.15, y: -11.01))
        bezier3Path.close()
        secondaryColor.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: -5.98, y: 9.98))
        bezier4Path.addLine(to: CGPoint(x: -5.98, y: -0.02))
        bezier4Path.addCurve(to: CGPoint(x: -1.98, y: -5.02), controlPoint1: CGPoint(x: -5.98, y: -0.02), controlPoint2: CGPoint(x: -5.98, y: -5.02))
        bezier4Path.addLine(to: CGPoint(x: 6.02, y: -5.02))
        secondaryColor.setStroke()
        bezier4Path.lineWidth = 4
        bezier4Path.stroke()



        context.restoreGState()


        //// Group 5
        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: frame.minX + 7, y: frame.minY + 9, width: 4, height: 18))
        primaryColor.setFill()
        rectanglePath.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: frame.minX + 9.02, y: frame.minY + 2))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 14.86, y: frame.minY + 8.52), controlPoint1: CGPoint(x: frame.minX + 9.06, y: frame.minY + 2.04), controlPoint2: CGPoint(x: frame.minX + 14.74, y: frame.minY + 8.38))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 15.02, y: frame.minY + 8.82), controlPoint1: CGPoint(x: frame.minX + 14.96, y: frame.minY + 8.6), controlPoint2: CGPoint(x: frame.minX + 15.02, y: frame.minY + 8.7))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 14.5, y: frame.minY + 9.23), controlPoint1: CGPoint(x: frame.minX + 15.02, y: frame.minY + 9.05), controlPoint2: CGPoint(x: frame.minX + 14.79, y: frame.minY + 9.23))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 14.31, y: frame.minY + 9.21), controlPoint1: CGPoint(x: frame.minX + 14.44, y: frame.minY + 9.23), controlPoint2: CGPoint(x: frame.minX + 14.37, y: frame.minY + 9.22))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 11.59, y: frame.minY + 8.41), controlPoint1: CGPoint(x: frame.minX + 14.2, y: frame.minY + 9.17), controlPoint2: CGPoint(x: frame.minX + 11.69, y: frame.minY + 8.44))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 11.01, y: frame.minY + 8.83), controlPoint1: CGPoint(x: frame.minX + 11.2, y: frame.minY + 8.41), controlPoint2: CGPoint(x: frame.minX + 11.01, y: frame.minY + 8.6))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 11, y: frame.minY + 8.99), controlPoint1: CGPoint(x: frame.minX + 11.01, y: frame.minY + 8.88), controlPoint2: CGPoint(x: frame.minX + 11, y: frame.minY + 8.94))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 11.01, y: frame.minY + 10), controlPoint1: CGPoint(x: frame.minX + 11, y: frame.minY + 9.05), controlPoint2: CGPoint(x: frame.minX + 11.01, y: frame.minY + 10))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 7.01, y: frame.minY + 9.95))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 7.02, y: frame.minY + 8.94), controlPoint1: CGPoint(x: frame.minX + 7.01, y: frame.minY + 9.95), controlPoint2: CGPoint(x: frame.minX + 7.02, y: frame.minY + 9.01))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 7.01, y: frame.minY + 8.78), controlPoint1: CGPoint(x: frame.minX + 7.01, y: frame.minY + 8.89), controlPoint2: CGPoint(x: frame.minX + 7.01, y: frame.minY + 8.83))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 6.53, y: frame.minY + 8.36), controlPoint1: CGPoint(x: frame.minX + 7.01, y: frame.minY + 8.55), controlPoint2: CGPoint(x: frame.minX + 6.82, y: frame.minY + 8.36))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 3.71, y: frame.minY + 9.15), controlPoint1: CGPoint(x: frame.minX + 6.32, y: frame.minY + 8.39), controlPoint2: CGPoint(x: frame.minX + 3.82, y: frame.minY + 9.12))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 3.52, y: frame.minY + 9.19), controlPoint1: CGPoint(x: frame.minX + 3.65, y: frame.minY + 9.17), controlPoint2: CGPoint(x: frame.minX + 3.58, y: frame.minY + 9.19))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 3, y: frame.minY + 8.78), controlPoint1: CGPoint(x: frame.minX + 3.23, y: frame.minY + 9.19), controlPoint2: CGPoint(x: frame.minX + 3, y: frame.minY + 9))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 3.16, y: frame.minY + 8.47), controlPoint1: CGPoint(x: frame.minX + 3, y: frame.minY + 8.65), controlPoint2: CGPoint(x: frame.minX + 3.06, y: frame.minY + 8.54))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 9.01, y: frame.minY + 2), controlPoint1: CGPoint(x: frame.minX + 3.28, y: frame.minY + 8.33), controlPoint2: CGPoint(x: frame.minX + 8.97, y: frame.minY + 2.04))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 9.02, y: frame.minY + 2))
        bezier5Path.close()
        primaryColor.setFill()
        bezier5Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneRightNotStraightOrUturn(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group
        context.saveGState()
        context.translateBy(x: frame.minX + 14.89, y: frame.minY + 18.95)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 3.11, y: 5.33))
        bezierPath.addLine(to: CGPoint(x: 3.11, y: -1.82))
        bezierPath.addCurve(to: CGPoint(x: -1.89, y: -6.95), controlPoint1: CGPoint(x: 3.11, y: -3.17), controlPoint2: CGPoint(x: 2.11, y: -6.95))
        bezierPath.addCurve(to: CGPoint(x: -5.89, y: -2.04), controlPoint1: CGPoint(x: -5.89, y: -6.95), controlPoint2: CGPoint(x: -5.89, y: -2.04))
        bezierPath.addLine(to: CGPoint(x: -5.89, y: 8.05))
        secondaryColor.setStroke()
        bezierPath.lineWidth = 4
        bezierPath.stroke()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 5.13, y: -0.9))
        bezier2Path.addCurve(to: CGPoint(x: 5.12, y: 0.36), controlPoint1: CGPoint(x: 5.13, y: -0.9), controlPoint2: CGPoint(x: 5.12, y: 0.28))
        bezier2Path.addCurve(to: CGPoint(x: 5.13, y: 0.56), controlPoint1: CGPoint(x: 5.12, y: 0.43), controlPoint2: CGPoint(x: 5.13, y: 0.5))
        bezier2Path.addCurve(to: CGPoint(x: 5.61, y: 1.09), controlPoint1: CGPoint(x: 5.13, y: 0.85), controlPoint2: CGPoint(x: 5.32, y: 1.09))
        bezier2Path.addCurve(to: CGPoint(x: 8.43, y: 0.09), controlPoint1: CGPoint(x: 5.81, y: 1.04), controlPoint2: CGPoint(x: 8.31, y: 0.13))
        bezier2Path.addCurve(to: CGPoint(x: 8.62, y: 0.06), controlPoint1: CGPoint(x: 8.49, y: 0.07), controlPoint2: CGPoint(x: 8.55, y: 0.06))
        bezier2Path.addCurve(to: CGPoint(x: 9.11, y: 0.4), controlPoint1: CGPoint(x: 8.84, y: 0.06), controlPoint2: CGPoint(x: 9.04, y: 0.2))
        bezier2Path.addLine(to: CGPoint(x: 9.11, y: 0.57))
        bezier2Path.addLine(to: CGPoint(x: 9.11, y: 0.75))
        bezier2Path.addCurve(to: CGPoint(x: 8.98, y: 0.95), controlPoint1: CGPoint(x: 9.08, y: 0.82), controlPoint2: CGPoint(x: 9.03, y: 0.89))
        bezier2Path.addCurve(to: CGPoint(x: 3.12, y: 8.02), controlPoint1: CGPoint(x: 8.85, y: 1.11), controlPoint2: CGPoint(x: 3.12, y: 8.02))
        bezier2Path.addCurve(to: CGPoint(x: -0.59, y: 3.5), controlPoint1: CGPoint(x: 3.12, y: 8.02), controlPoint2: CGPoint(x: 1.08, y: 5.53))
        bezier2Path.addCurve(to: CGPoint(x: -2.72, y: 0.89), controlPoint1: CGPoint(x: -1.71, y: 2.12), controlPoint2: CGPoint(x: -2.67, y: 0.95))
        bezier2Path.addCurve(to: CGPoint(x: -2.88, y: 0.51), controlPoint1: CGPoint(x: -2.82, y: 0.79), controlPoint2: CGPoint(x: -2.88, y: 0.66))
        bezier2Path.addCurve(to: CGPoint(x: -2.37, y: -0.01), controlPoint1: CGPoint(x: -2.88, y: 0.22), controlPoint2: CGPoint(x: -2.65, y: -0.01))
        bezier2Path.addCurve(to: CGPoint(x: -2.18, y: 0.03), controlPoint1: CGPoint(x: -2.3, y: -0.01), controlPoint2: CGPoint(x: -2.23, y: 0.01))
        bezier2Path.addCurve(to: CGPoint(x: 0.55, y: 1.02), controlPoint1: CGPoint(x: -2.06, y: 0.07), controlPoint2: CGPoint(x: 0.44, y: 0.98))
        bezier2Path.addCurve(to: CGPoint(x: 1.13, y: 0.5), controlPoint1: CGPoint(x: 0.94, y: 1.02), controlPoint2: CGPoint(x: 1.13, y: 0.79))
        bezier2Path.addCurve(to: CGPoint(x: 1.13, y: 0.3), controlPoint1: CGPoint(x: 1.13, y: 0.43), controlPoint2: CGPoint(x: 1.13, y: 0.36))
        bezier2Path.addCurve(to: CGPoint(x: 1.13, y: -0.96), controlPoint1: CGPoint(x: 1.13, y: 0.22), controlPoint2: CGPoint(x: 1.13, y: -0.96))
        bezier2Path.addLine(to: CGPoint(x: 5.13, y: -0.9))
        bezier2Path.close()
        secondaryColor.setFill()
        bezier2Path.fill()



        context.restoreGState()


        //// Group 5
        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: frame.minX + 7, y: frame.minY + 9, width: 4, height: 18))
        secondaryColor.setFill()
        rectanglePath.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: frame.minX + 9.02, y: frame.minY + 2))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 14.86, y: frame.minY + 8.52), controlPoint1: CGPoint(x: frame.minX + 9.06, y: frame.minY + 2.04), controlPoint2: CGPoint(x: frame.minX + 14.74, y: frame.minY + 8.38))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 15.02, y: frame.minY + 8.82), controlPoint1: CGPoint(x: frame.minX + 14.96, y: frame.minY + 8.6), controlPoint2: CGPoint(x: frame.minX + 15.02, y: frame.minY + 8.7))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 14.5, y: frame.minY + 9.23), controlPoint1: CGPoint(x: frame.minX + 15.02, y: frame.minY + 9.05), controlPoint2: CGPoint(x: frame.minX + 14.79, y: frame.minY + 9.23))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 14.31, y: frame.minY + 9.21), controlPoint1: CGPoint(x: frame.minX + 14.44, y: frame.minY + 9.23), controlPoint2: CGPoint(x: frame.minX + 14.37, y: frame.minY + 9.22))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 11.59, y: frame.minY + 8.41), controlPoint1: CGPoint(x: frame.minX + 14.2, y: frame.minY + 9.17), controlPoint2: CGPoint(x: frame.minX + 11.69, y: frame.minY + 8.44))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 11.01, y: frame.minY + 8.83), controlPoint1: CGPoint(x: frame.minX + 11.2, y: frame.minY + 8.41), controlPoint2: CGPoint(x: frame.minX + 11.01, y: frame.minY + 8.6))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 11, y: frame.minY + 8.99), controlPoint1: CGPoint(x: frame.minX + 11.01, y: frame.minY + 8.88), controlPoint2: CGPoint(x: frame.minX + 11, y: frame.minY + 8.94))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 11.01, y: frame.minY + 10), controlPoint1: CGPoint(x: frame.minX + 11, y: frame.minY + 9.05), controlPoint2: CGPoint(x: frame.minX + 11.01, y: frame.minY + 10))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 7.01, y: frame.minY + 9.95))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 7.02, y: frame.minY + 8.94), controlPoint1: CGPoint(x: frame.minX + 7.01, y: frame.minY + 9.95), controlPoint2: CGPoint(x: frame.minX + 7.02, y: frame.minY + 9.01))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 7.01, y: frame.minY + 8.78), controlPoint1: CGPoint(x: frame.minX + 7.01, y: frame.minY + 8.89), controlPoint2: CGPoint(x: frame.minX + 7.01, y: frame.minY + 8.83))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 6.53, y: frame.minY + 8.36), controlPoint1: CGPoint(x: frame.minX + 7.01, y: frame.minY + 8.55), controlPoint2: CGPoint(x: frame.minX + 6.82, y: frame.minY + 8.36))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 3.71, y: frame.minY + 9.15), controlPoint1: CGPoint(x: frame.minX + 6.32, y: frame.minY + 8.39), controlPoint2: CGPoint(x: frame.minX + 3.82, y: frame.minY + 9.12))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 3.52, y: frame.minY + 9.19), controlPoint1: CGPoint(x: frame.minX + 3.65, y: frame.minY + 9.17), controlPoint2: CGPoint(x: frame.minX + 3.58, y: frame.minY + 9.19))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 3, y: frame.minY + 8.78), controlPoint1: CGPoint(x: frame.minX + 3.23, y: frame.minY + 9.19), controlPoint2: CGPoint(x: frame.minX + 3, y: frame.minY + 9))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 3.16, y: frame.minY + 8.47), controlPoint1: CGPoint(x: frame.minX + 3, y: frame.minY + 8.65), controlPoint2: CGPoint(x: frame.minX + 3.06, y: frame.minY + 8.54))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 9.01, y: frame.minY + 2), controlPoint1: CGPoint(x: frame.minX + 3.28, y: frame.minY + 8.33), controlPoint2: CGPoint(x: frame.minX + 8.97, y: frame.minY + 2.04))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 9.02, y: frame.minY + 2))
        bezier5Path.close()
        secondaryColor.setFill()
        bezier5Path.fill()




        //// Group 2
        context.saveGState()
        context.translateBy(x: frame.minX + 14.98, y: frame.minY + 17.02)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 6.15, y: -11.01))
        bezier3Path.addCurve(to: CGPoint(x: 6.4, y: -10.85), controlPoint1: CGPoint(x: 6.22, y: -11.01), controlPoint2: CGPoint(x: 6.32, y: -10.95))
        bezier3Path.addCurve(to: CGPoint(x: 12.02, y: -5), controlPoint1: CGPoint(x: 6.52, y: -10.72), controlPoint2: CGPoint(x: 12.02, y: -5))
        bezier3Path.addCurve(to: CGPoint(x: 6.35, y: 0.84), controlPoint1: CGPoint(x: 12.02, y: -5), controlPoint2: CGPoint(x: 6.47, y: 0.71))
        bezier3Path.addCurve(to: CGPoint(x: 6.05, y: 1), controlPoint1: CGPoint(x: 6.27, y: 0.94), controlPoint2: CGPoint(x: 6.17, y: 1))
        bezier3Path.addCurve(to: CGPoint(x: 5.64, y: 0.49), controlPoint1: CGPoint(x: 5.82, y: 1), controlPoint2: CGPoint(x: 5.64, y: 0.77))
        bezier3Path.addCurve(to: CGPoint(x: 5.67, y: 0.3), controlPoint1: CGPoint(x: 5.64, y: 0.42), controlPoint2: CGPoint(x: 5.65, y: 0.36))
        bezier3Path.addCurve(to: CGPoint(x: 6.45, y: -2.43), controlPoint1: CGPoint(x: 5.7, y: 0.18), controlPoint2: CGPoint(x: 6.42, y: -2.32))
        bezier3Path.addCurve(to: CGPoint(x: 6.04, y: -3.01), controlPoint1: CGPoint(x: 6.46, y: -2.81), controlPoint2: CGPoint(x: 6.27, y: -3.01))
        bezier3Path.addCurve(to: CGPoint(x: 5.89, y: -3.01), controlPoint1: CGPoint(x: 5.99, y: -3.01), controlPoint2: CGPoint(x: 5.93, y: -3.01))
        bezier3Path.addCurve(to: CGPoint(x: 4.88, y: -3.01), controlPoint1: CGPoint(x: 5.82, y: -3.01), controlPoint2: CGPoint(x: 4.88, y: -3.01))
        bezier3Path.addLine(to: CGPoint(x: 4.93, y: -7))
        bezier3Path.addCurve(to: CGPoint(x: 5.93, y: -7), controlPoint1: CGPoint(x: 4.93, y: -7), controlPoint2: CGPoint(x: 5.86, y: -7))
        bezier3Path.addCurve(to: CGPoint(x: 6.09, y: -7.01), controlPoint1: CGPoint(x: 5.98, y: -7), controlPoint2: CGPoint(x: 6.04, y: -7.01))
        bezier3Path.addCurve(to: CGPoint(x: 6.51, y: -7.49), controlPoint1: CGPoint(x: 6.32, y: -7.01), controlPoint2: CGPoint(x: 6.51, y: -7.2))
        bezier3Path.addCurve(to: CGPoint(x: 5.72, y: -10.3), controlPoint1: CGPoint(x: 6.47, y: -7.69), controlPoint2: CGPoint(x: 5.75, y: -10.19))
        bezier3Path.addCurve(to: CGPoint(x: 5.69, y: -10.5), controlPoint1: CGPoint(x: 5.7, y: -10.37), controlPoint2: CGPoint(x: 5.69, y: -10.43))
        bezier3Path.addCurve(to: CGPoint(x: 6.09, y: -11.02), controlPoint1: CGPoint(x: 5.69, y: -10.78), controlPoint2: CGPoint(x: 5.87, y: -11.01))
        bezier3Path.addLine(to: CGPoint(x: 6.15, y: -11.01))
        bezier3Path.close()
        primaryColor.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: -5.98, y: 9.98))
        bezier4Path.addLine(to: CGPoint(x: -5.98, y: -0.02))
        bezier4Path.addCurve(to: CGPoint(x: -1.98, y: -5.02), controlPoint1: CGPoint(x: -5.98, y: -0.02), controlPoint2: CGPoint(x: -5.98, y: -5.02))
        bezier4Path.addLine(to: CGPoint(x: 6.02, y: -5.02))
        primaryColor.setStroke()
        bezier4Path.lineWidth = 4
        bezier4Path.stroke()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneUturnNotStraightOrRight(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group 5
        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: frame.minX + 7, y: frame.minY + 9, width: 4, height: 18))
        secondaryColor.setFill()
        rectanglePath.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: frame.minX + 9.02, y: frame.minY + 2))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 14.86, y: frame.minY + 8.52), controlPoint1: CGPoint(x: frame.minX + 9.06, y: frame.minY + 2.04), controlPoint2: CGPoint(x: frame.minX + 14.74, y: frame.minY + 8.38))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 15.02, y: frame.minY + 8.82), controlPoint1: CGPoint(x: frame.minX + 14.96, y: frame.minY + 8.6), controlPoint2: CGPoint(x: frame.minX + 15.02, y: frame.minY + 8.7))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 14.5, y: frame.minY + 9.23), controlPoint1: CGPoint(x: frame.minX + 15.02, y: frame.minY + 9.05), controlPoint2: CGPoint(x: frame.minX + 14.79, y: frame.minY + 9.23))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 14.31, y: frame.minY + 9.21), controlPoint1: CGPoint(x: frame.minX + 14.44, y: frame.minY + 9.23), controlPoint2: CGPoint(x: frame.minX + 14.37, y: frame.minY + 9.22))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 11.59, y: frame.minY + 8.41), controlPoint1: CGPoint(x: frame.minX + 14.2, y: frame.minY + 9.17), controlPoint2: CGPoint(x: frame.minX + 11.69, y: frame.minY + 8.44))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 11.01, y: frame.minY + 8.83), controlPoint1: CGPoint(x: frame.minX + 11.2, y: frame.minY + 8.41), controlPoint2: CGPoint(x: frame.minX + 11.01, y: frame.minY + 8.6))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 11, y: frame.minY + 8.99), controlPoint1: CGPoint(x: frame.minX + 11.01, y: frame.minY + 8.88), controlPoint2: CGPoint(x: frame.minX + 11, y: frame.minY + 8.94))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 11.01, y: frame.minY + 10), controlPoint1: CGPoint(x: frame.minX + 11, y: frame.minY + 9.05), controlPoint2: CGPoint(x: frame.minX + 11.01, y: frame.minY + 10))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 7.01, y: frame.minY + 9.95))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 7.02, y: frame.minY + 8.94), controlPoint1: CGPoint(x: frame.minX + 7.01, y: frame.minY + 9.95), controlPoint2: CGPoint(x: frame.minX + 7.02, y: frame.minY + 9.01))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 7.01, y: frame.minY + 8.78), controlPoint1: CGPoint(x: frame.minX + 7.01, y: frame.minY + 8.89), controlPoint2: CGPoint(x: frame.minX + 7.01, y: frame.minY + 8.83))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 6.53, y: frame.minY + 8.36), controlPoint1: CGPoint(x: frame.minX + 7.01, y: frame.minY + 8.55), controlPoint2: CGPoint(x: frame.minX + 6.82, y: frame.minY + 8.36))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 3.71, y: frame.minY + 9.15), controlPoint1: CGPoint(x: frame.minX + 6.32, y: frame.minY + 8.39), controlPoint2: CGPoint(x: frame.minX + 3.82, y: frame.minY + 9.12))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 3.52, y: frame.minY + 9.19), controlPoint1: CGPoint(x: frame.minX + 3.65, y: frame.minY + 9.17), controlPoint2: CGPoint(x: frame.minX + 3.58, y: frame.minY + 9.19))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 3, y: frame.minY + 8.78), controlPoint1: CGPoint(x: frame.minX + 3.23, y: frame.minY + 9.19), controlPoint2: CGPoint(x: frame.minX + 3, y: frame.minY + 9))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 3.16, y: frame.minY + 8.47), controlPoint1: CGPoint(x: frame.minX + 3, y: frame.minY + 8.65), controlPoint2: CGPoint(x: frame.minX + 3.06, y: frame.minY + 8.54))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 9.01, y: frame.minY + 2), controlPoint1: CGPoint(x: frame.minX + 3.28, y: frame.minY + 8.33), controlPoint2: CGPoint(x: frame.minX + 8.97, y: frame.minY + 2.04))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 9.02, y: frame.minY + 2))
        bezier5Path.close()
        secondaryColor.setFill()
        bezier5Path.fill()




        //// Group 2
        context.saveGState()
        context.translateBy(x: frame.minX + 14.98, y: frame.minY + 17.02)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 6.15, y: -11.01))
        bezier3Path.addCurve(to: CGPoint(x: 6.4, y: -10.85), controlPoint1: CGPoint(x: 6.22, y: -11.01), controlPoint2: CGPoint(x: 6.32, y: -10.95))
        bezier3Path.addCurve(to: CGPoint(x: 12.02, y: -5), controlPoint1: CGPoint(x: 6.52, y: -10.72), controlPoint2: CGPoint(x: 12.02, y: -5))
        bezier3Path.addCurve(to: CGPoint(x: 6.35, y: 0.84), controlPoint1: CGPoint(x: 12.02, y: -5), controlPoint2: CGPoint(x: 6.47, y: 0.71))
        bezier3Path.addCurve(to: CGPoint(x: 6.05, y: 1), controlPoint1: CGPoint(x: 6.27, y: 0.94), controlPoint2: CGPoint(x: 6.17, y: 1))
        bezier3Path.addCurve(to: CGPoint(x: 5.64, y: 0.49), controlPoint1: CGPoint(x: 5.82, y: 1), controlPoint2: CGPoint(x: 5.64, y: 0.77))
        bezier3Path.addCurve(to: CGPoint(x: 5.67, y: 0.3), controlPoint1: CGPoint(x: 5.64, y: 0.42), controlPoint2: CGPoint(x: 5.65, y: 0.36))
        bezier3Path.addCurve(to: CGPoint(x: 6.45, y: -2.43), controlPoint1: CGPoint(x: 5.7, y: 0.18), controlPoint2: CGPoint(x: 6.42, y: -2.32))
        bezier3Path.addCurve(to: CGPoint(x: 6.04, y: -3.01), controlPoint1: CGPoint(x: 6.46, y: -2.81), controlPoint2: CGPoint(x: 6.27, y: -3.01))
        bezier3Path.addCurve(to: CGPoint(x: 5.89, y: -3.01), controlPoint1: CGPoint(x: 5.99, y: -3.01), controlPoint2: CGPoint(x: 5.93, y: -3.01))
        bezier3Path.addCurve(to: CGPoint(x: 4.88, y: -3.01), controlPoint1: CGPoint(x: 5.82, y: -3.01), controlPoint2: CGPoint(x: 4.88, y: -3.01))
        bezier3Path.addLine(to: CGPoint(x: 4.93, y: -7))
        bezier3Path.addCurve(to: CGPoint(x: 5.93, y: -7), controlPoint1: CGPoint(x: 4.93, y: -7), controlPoint2: CGPoint(x: 5.86, y: -7))
        bezier3Path.addCurve(to: CGPoint(x: 6.09, y: -7.01), controlPoint1: CGPoint(x: 5.98, y: -7), controlPoint2: CGPoint(x: 6.04, y: -7.01))
        bezier3Path.addCurve(to: CGPoint(x: 6.51, y: -7.49), controlPoint1: CGPoint(x: 6.32, y: -7.01), controlPoint2: CGPoint(x: 6.51, y: -7.2))
        bezier3Path.addCurve(to: CGPoint(x: 5.72, y: -10.3), controlPoint1: CGPoint(x: 6.47, y: -7.69), controlPoint2: CGPoint(x: 5.75, y: -10.19))
        bezier3Path.addCurve(to: CGPoint(x: 5.69, y: -10.5), controlPoint1: CGPoint(x: 5.7, y: -10.37), controlPoint2: CGPoint(x: 5.69, y: -10.43))
        bezier3Path.addCurve(to: CGPoint(x: 6.09, y: -11.02), controlPoint1: CGPoint(x: 5.69, y: -10.78), controlPoint2: CGPoint(x: 5.87, y: -11.01))
        bezier3Path.addLine(to: CGPoint(x: 6.15, y: -11.01))
        bezier3Path.close()
        secondaryColor.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: -5.98, y: 9.98))
        bezier4Path.addLine(to: CGPoint(x: -5.98, y: -0.02))
        bezier4Path.addCurve(to: CGPoint(x: -1.98, y: -5.02), controlPoint1: CGPoint(x: -5.98, y: -0.02), controlPoint2: CGPoint(x: -5.98, y: -5.02))
        bezier4Path.addLine(to: CGPoint(x: 6.02, y: -5.02))
        secondaryColor.setStroke()
        bezier4Path.lineWidth = 4
        bezier4Path.stroke()



        context.restoreGState()


        //// Group
        context.saveGState()
        context.translateBy(x: frame.minX + 14.89, y: frame.minY + 18.95)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 3.11, y: 5.33))
        bezierPath.addLine(to: CGPoint(x: 3.11, y: -1.82))
        bezierPath.addCurve(to: CGPoint(x: -1.89, y: -6.95), controlPoint1: CGPoint(x: 3.11, y: -3.17), controlPoint2: CGPoint(x: 2.11, y: -6.95))
        bezierPath.addCurve(to: CGPoint(x: -5.89, y: -2.04), controlPoint1: CGPoint(x: -5.89, y: -6.95), controlPoint2: CGPoint(x: -5.89, y: -2.04))
        bezierPath.addLine(to: CGPoint(x: -5.89, y: 8.05))
        primaryColor.setStroke()
        bezierPath.lineWidth = 4
        bezierPath.stroke()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 5.13, y: -0.9))
        bezier2Path.addCurve(to: CGPoint(x: 5.12, y: 0.36), controlPoint1: CGPoint(x: 5.13, y: -0.9), controlPoint2: CGPoint(x: 5.12, y: 0.28))
        bezier2Path.addCurve(to: CGPoint(x: 5.13, y: 0.56), controlPoint1: CGPoint(x: 5.12, y: 0.43), controlPoint2: CGPoint(x: 5.13, y: 0.5))
        bezier2Path.addCurve(to: CGPoint(x: 5.61, y: 1.09), controlPoint1: CGPoint(x: 5.13, y: 0.85), controlPoint2: CGPoint(x: 5.32, y: 1.09))
        bezier2Path.addCurve(to: CGPoint(x: 8.43, y: 0.09), controlPoint1: CGPoint(x: 5.81, y: 1.04), controlPoint2: CGPoint(x: 8.31, y: 0.13))
        bezier2Path.addCurve(to: CGPoint(x: 8.62, y: 0.06), controlPoint1: CGPoint(x: 8.49, y: 0.07), controlPoint2: CGPoint(x: 8.55, y: 0.06))
        bezier2Path.addCurve(to: CGPoint(x: 9.11, y: 0.4), controlPoint1: CGPoint(x: 8.84, y: 0.06), controlPoint2: CGPoint(x: 9.04, y: 0.2))
        bezier2Path.addLine(to: CGPoint(x: 9.11, y: 0.57))
        bezier2Path.addLine(to: CGPoint(x: 9.11, y: 0.75))
        bezier2Path.addCurve(to: CGPoint(x: 8.98, y: 0.95), controlPoint1: CGPoint(x: 9.08, y: 0.82), controlPoint2: CGPoint(x: 9.03, y: 0.89))
        bezier2Path.addCurve(to: CGPoint(x: 3.12, y: 8.02), controlPoint1: CGPoint(x: 8.85, y: 1.11), controlPoint2: CGPoint(x: 3.12, y: 8.02))
        bezier2Path.addCurve(to: CGPoint(x: -0.59, y: 3.5), controlPoint1: CGPoint(x: 3.12, y: 8.02), controlPoint2: CGPoint(x: 1.08, y: 5.53))
        bezier2Path.addCurve(to: CGPoint(x: -2.72, y: 0.89), controlPoint1: CGPoint(x: -1.71, y: 2.12), controlPoint2: CGPoint(x: -2.67, y: 0.95))
        bezier2Path.addCurve(to: CGPoint(x: -2.88, y: 0.51), controlPoint1: CGPoint(x: -2.82, y: 0.79), controlPoint2: CGPoint(x: -2.88, y: 0.66))
        bezier2Path.addCurve(to: CGPoint(x: -2.37, y: -0.01), controlPoint1: CGPoint(x: -2.88, y: 0.22), controlPoint2: CGPoint(x: -2.65, y: -0.01))
        bezier2Path.addCurve(to: CGPoint(x: -2.18, y: 0.03), controlPoint1: CGPoint(x: -2.3, y: -0.01), controlPoint2: CGPoint(x: -2.23, y: 0.01))
        bezier2Path.addCurve(to: CGPoint(x: 0.55, y: 1.02), controlPoint1: CGPoint(x: -2.06, y: 0.07), controlPoint2: CGPoint(x: 0.44, y: 0.98))
        bezier2Path.addCurve(to: CGPoint(x: 1.13, y: 0.5), controlPoint1: CGPoint(x: 0.94, y: 1.02), controlPoint2: CGPoint(x: 1.13, y: 0.79))
        bezier2Path.addCurve(to: CGPoint(x: 1.13, y: 0.3), controlPoint1: CGPoint(x: 1.13, y: 0.43), controlPoint2: CGPoint(x: 1.13, y: 0.36))
        bezier2Path.addCurve(to: CGPoint(x: 1.13, y: -0.96), controlPoint1: CGPoint(x: 1.13, y: 0.22), controlPoint2: CGPoint(x: 1.13, y: -0.96))
        bezier2Path.addLine(to: CGPoint(x: 5.13, y: -0.9))
        bezier2Path.close()
        primaryColor.setFill()
        bezier2Path.fill()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneRightNotSharpRight(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group
        context.saveGState()
        context.translateBy(x: frame.minX + 15.98, y: frame.minY + 19.11)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 2.02, y: -0.11))
        bezierPath.addCurve(to: CGPoint(x: -4.98, y: -7.11), controlPoint1: CGPoint(x: 2.02, y: -0.11), controlPoint2: CGPoint(x: -1.98, y: -6.11))
        bezierPath.addCurve(to: CGPoint(x: -9.98, y: -0.11), controlPoint1: CGPoint(x: -7.98, y: -8.11), controlPoint2: CGPoint(x: -9.67, y: -3.71))
        bezierPath.addLine(to: CGPoint(x: -9.98, y: 7.89))
        secondaryColor.setStroke()
        bezierPath.lineWidth = 4
        bezierPath.lineJoinStyle = .round
        bezierPath.stroke()


        //// Bezier 2 Drawing
        context.saveGState()
        context.translateBy(x: 11.23, y: 4.03)
        context.rotate(by: 149.53 * CGFloat.pi/180)

        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 4.01, y: 9.92))
        bezier2Path.addLine(to: CGPoint(x: 4.02, y: 8.66))
        bezier2Path.addLine(to: CGPoint(x: 4.01, y: 8.66))
        bezier2Path.addCurve(to: CGPoint(x: 4.01, y: 8.46), controlPoint1: CGPoint(x: 4.01, y: 8.6), controlPoint2: CGPoint(x: 4.01, y: 8.53))
        bezier2Path.addCurve(to: CGPoint(x: 3.53, y: 7.94), controlPoint1: CGPoint(x: 4.01, y: 8.17), controlPoint2: CGPoint(x: 3.82, y: 7.94))
        bezier2Path.addCurve(to: CGPoint(x: 3.43, y: 7.94), controlPoint1: CGPoint(x: 3.5, y: 7.94), controlPoint2: CGPoint(x: 3.46, y: 7.94))
        bezier2Path.addLine(to: CGPoint(x: 3.44, y: 7.94))
        bezier2Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier2Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier2Path.addCurve(to: CGPoint(x: 0.52, y: 8.97), controlPoint1: CGPoint(x: 0.65, y: 8.96), controlPoint2: CGPoint(x: 0.58, y: 8.97))
        bezier2Path.addCurve(to: CGPoint(x: -0, y: 8.45), controlPoint1: CGPoint(x: 0.23, y: 8.97), controlPoint2: CGPoint(x: -0, y: 8.74))
        bezier2Path.addCurve(to: CGPoint(x: 0.16, y: 8.07), controlPoint1: CGPoint(x: -0, y: 8.3), controlPoint2: CGPoint(x: 0.06, y: 8.17))
        bezier2Path.addLine(to: CGPoint(x: 0.16, y: 8.08))
        bezier2Path.addLine(to: CGPoint(x: 6.01, y: 0))
        bezier2Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier2Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier2Path.addCurve(to: CGPoint(x: 12.02, y: 8.52), controlPoint1: CGPoint(x: 11.96, y: 8.23), controlPoint2: CGPoint(x: 12.02, y: 8.37))
        bezier2Path.addCurve(to: CGPoint(x: 11.5, y: 9.03), controlPoint1: CGPoint(x: 12.02, y: 8.8), controlPoint2: CGPoint(x: 11.79, y: 9.03))
        bezier2Path.addCurve(to: CGPoint(x: 11.31, y: 8.99), controlPoint1: CGPoint(x: 11.43, y: 9.03), controlPoint2: CGPoint(x: 11.37, y: 9.02))
        bezier2Path.addLine(to: CGPoint(x: 11.31, y: 8.99))
        bezier2Path.addLine(to: CGPoint(x: 8.58, y: 8))
        bezier2Path.addLine(to: CGPoint(x: 8.59, y: 8.01))
        bezier2Path.addCurve(to: CGPoint(x: 8.49, y: 8), controlPoint1: CGPoint(x: 8.56, y: 8), controlPoint2: CGPoint(x: 8.52, y: 8))
        bezier2Path.addCurve(to: CGPoint(x: 8.01, y: 8.53), controlPoint1: CGPoint(x: 8.2, y: 8), controlPoint2: CGPoint(x: 8.01, y: 8.23))
        bezier2Path.addCurve(to: CGPoint(x: 8, y: 8.73), controlPoint1: CGPoint(x: 8.01, y: 8.59), controlPoint2: CGPoint(x: 8, y: 8.66))
        bezier2Path.addLine(to: CGPoint(x: 8, y: 8.72))
        bezier2Path.addLine(to: CGPoint(x: 8.01, y: 9.99))
        bezier2Path.usesEvenOddFillRule = true
        secondaryColor.setFill()
        bezier2Path.fill()

        context.restoreGState()



        context.restoreGState()


        //// Group 2
        context.saveGState()
        context.translateBy(x: frame.minX + 11.98, y: frame.minY + 14.02)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 7.47, y: -11.01))
        bezier3Path.addCurve(to: CGPoint(x: 7.79, y: -10.85), controlPoint1: CGPoint(x: 7.57, y: -11.01), controlPoint2: CGPoint(x: 7.7, y: -10.95))
        bezier3Path.addCurve(to: CGPoint(x: 14.87, y: -5), controlPoint1: CGPoint(x: 7.95, y: -10.72), controlPoint2: CGPoint(x: 14.87, y: -5))
        bezier3Path.addCurve(to: CGPoint(x: 7.73, y: 0.84), controlPoint1: CGPoint(x: 14.87, y: -5), controlPoint2: CGPoint(x: 7.89, y: 0.71))
        bezier3Path.addCurve(to: CGPoint(x: 7.35, y: 1), controlPoint1: CGPoint(x: 7.63, y: 0.94), controlPoint2: CGPoint(x: 7.5, y: 1))
        bezier3Path.addCurve(to: CGPoint(x: 6.84, y: 0.49), controlPoint1: CGPoint(x: 7.07, y: 1), controlPoint2: CGPoint(x: 6.84, y: 0.77))
        bezier3Path.addCurve(to: CGPoint(x: 6.87, y: 0.3), controlPoint1: CGPoint(x: 6.84, y: 0.42), controlPoint2: CGPoint(x: 6.85, y: 0.36))
        bezier3Path.addCurve(to: CGPoint(x: 7.86, y: -2.43), controlPoint1: CGPoint(x: 6.92, y: 0.18), controlPoint2: CGPoint(x: 7.82, y: -2.32))
        bezier3Path.addCurve(to: CGPoint(x: 7.34, y: -3.01), controlPoint1: CGPoint(x: 7.87, y: -2.81), controlPoint2: CGPoint(x: 7.63, y: -3.01))
        bezier3Path.addCurve(to: CGPoint(x: 7.15, y: -3.01), controlPoint1: CGPoint(x: 7.28, y: -3.01), controlPoint2: CGPoint(x: 7.21, y: -3.01))
        bezier3Path.addCurve(to: CGPoint(x: 5.88, y: -3.01), controlPoint1: CGPoint(x: 7.06, y: -3.01), controlPoint2: CGPoint(x: 5.88, y: -3.01))
        bezier3Path.addLine(to: CGPoint(x: 5.94, y: -7))
        bezier3Path.addCurve(to: CGPoint(x: 7.2, y: -7), controlPoint1: CGPoint(x: 5.94, y: -7), controlPoint2: CGPoint(x: 7.12, y: -7))
        bezier3Path.addCurve(to: CGPoint(x: 7.4, y: -7.01), controlPoint1: CGPoint(x: 7.27, y: -7), controlPoint2: CGPoint(x: 7.34, y: -7.01))
        bezier3Path.addCurve(to: CGPoint(x: 7.93, y: -7.49), controlPoint1: CGPoint(x: 7.7, y: -7.01), controlPoint2: CGPoint(x: 7.93, y: -7.2))
        bezier3Path.addCurve(to: CGPoint(x: 6.94, y: -10.3), controlPoint1: CGPoint(x: 7.89, y: -7.69), controlPoint2: CGPoint(x: 6.98, y: -10.19))
        bezier3Path.addCurve(to: CGPoint(x: 6.9, y: -10.5), controlPoint1: CGPoint(x: 6.91, y: -10.37), controlPoint2: CGPoint(x: 6.9, y: -10.43))
        bezier3Path.addCurve(to: CGPoint(x: 7.41, y: -11.02), controlPoint1: CGPoint(x: 6.9, y: -10.78), controlPoint2: CGPoint(x: 7.13, y: -11.01))
        bezier3Path.addLine(to: CGPoint(x: 7.47, y: -11.01))
        bezier3Path.close()
        primaryColor.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: -5.98, y: 12.98))
        bezier4Path.addLine(to: CGPoint(x: -5.98, y: 4.98))
        bezier4Path.addCurve(to: CGPoint(x: 2.02, y: -5.02), controlPoint1: CGPoint(x: -5.98, y: 4.98), controlPoint2: CGPoint(x: -4.98, y: -5.02))
        bezier4Path.addLine(to: CGPoint(x: 6.02, y: -5.02))
        primaryColor.setStroke()
        bezier4Path.lineWidth = 4
        bezier4Path.stroke()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLaneSharpRightNotRight(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, primaryColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), secondaryColor: UIColor = UIColor(red: 0.618, green: 0.618, blue: 0.618, alpha: 1.000), size: CGSize = CGSize(width: 32, height: 32), flipHorizontally: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)



        //// Variable Declarations
        let scaleX: CGFloat = flipHorizontally ? -1 : 1

        //// Frames
        let frame = CGRect(x: 0, y: 0, width: (size.width - 2), height: (size.height - 2))


        //// Group 2
        context.saveGState()
        context.translateBy(x: frame.minX + 11.98, y: frame.minY + 14.02)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 7.47, y: -11.01))
        bezier3Path.addCurve(to: CGPoint(x: 7.79, y: -10.85), controlPoint1: CGPoint(x: 7.57, y: -11.01), controlPoint2: CGPoint(x: 7.7, y: -10.95))
        bezier3Path.addCurve(to: CGPoint(x: 14.87, y: -5), controlPoint1: CGPoint(x: 7.95, y: -10.72), controlPoint2: CGPoint(x: 14.87, y: -5))
        bezier3Path.addCurve(to: CGPoint(x: 7.73, y: 0.84), controlPoint1: CGPoint(x: 14.87, y: -5), controlPoint2: CGPoint(x: 7.89, y: 0.71))
        bezier3Path.addCurve(to: CGPoint(x: 7.35, y: 1), controlPoint1: CGPoint(x: 7.63, y: 0.94), controlPoint2: CGPoint(x: 7.5, y: 1))
        bezier3Path.addCurve(to: CGPoint(x: 6.84, y: 0.49), controlPoint1: CGPoint(x: 7.07, y: 1), controlPoint2: CGPoint(x: 6.84, y: 0.77))
        bezier3Path.addCurve(to: CGPoint(x: 6.87, y: 0.3), controlPoint1: CGPoint(x: 6.84, y: 0.42), controlPoint2: CGPoint(x: 6.85, y: 0.36))
        bezier3Path.addCurve(to: CGPoint(x: 7.86, y: -2.43), controlPoint1: CGPoint(x: 6.92, y: 0.18), controlPoint2: CGPoint(x: 7.82, y: -2.32))
        bezier3Path.addCurve(to: CGPoint(x: 7.34, y: -3.01), controlPoint1: CGPoint(x: 7.87, y: -2.81), controlPoint2: CGPoint(x: 7.63, y: -3.01))
        bezier3Path.addCurve(to: CGPoint(x: 7.15, y: -3.01), controlPoint1: CGPoint(x: 7.28, y: -3.01), controlPoint2: CGPoint(x: 7.21, y: -3.01))
        bezier3Path.addCurve(to: CGPoint(x: 5.88, y: -3.01), controlPoint1: CGPoint(x: 7.06, y: -3.01), controlPoint2: CGPoint(x: 5.88, y: -3.01))
        bezier3Path.addLine(to: CGPoint(x: 5.94, y: -7))
        bezier3Path.addCurve(to: CGPoint(x: 7.2, y: -7), controlPoint1: CGPoint(x: 5.94, y: -7), controlPoint2: CGPoint(x: 7.12, y: -7))
        bezier3Path.addCurve(to: CGPoint(x: 7.4, y: -7.01), controlPoint1: CGPoint(x: 7.27, y: -7), controlPoint2: CGPoint(x: 7.34, y: -7.01))
        bezier3Path.addCurve(to: CGPoint(x: 7.93, y: -7.49), controlPoint1: CGPoint(x: 7.7, y: -7.01), controlPoint2: CGPoint(x: 7.93, y: -7.2))
        bezier3Path.addCurve(to: CGPoint(x: 6.94, y: -10.3), controlPoint1: CGPoint(x: 7.89, y: -7.69), controlPoint2: CGPoint(x: 6.98, y: -10.19))
        bezier3Path.addCurve(to: CGPoint(x: 6.9, y: -10.5), controlPoint1: CGPoint(x: 6.91, y: -10.37), controlPoint2: CGPoint(x: 6.9, y: -10.43))
        bezier3Path.addCurve(to: CGPoint(x: 7.41, y: -11.02), controlPoint1: CGPoint(x: 6.9, y: -10.78), controlPoint2: CGPoint(x: 7.13, y: -11.01))
        bezier3Path.addLine(to: CGPoint(x: 7.47, y: -11.01))
        bezier3Path.close()
        secondaryColor.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: -5.98, y: 12.98))
        bezier4Path.addLine(to: CGPoint(x: -5.98, y: 4.98))
        bezier4Path.addCurve(to: CGPoint(x: 2.02, y: -5.02), controlPoint1: CGPoint(x: -5.98, y: 4.98), controlPoint2: CGPoint(x: -4.98, y: -5.02))
        bezier4Path.addLine(to: CGPoint(x: 6.02, y: -5.02))
        secondaryColor.setStroke()
        bezier4Path.lineWidth = 4
        bezier4Path.stroke()



        context.restoreGState()


        //// Group
        context.saveGState()
        context.translateBy(x: frame.minX + 15.98, y: frame.minY + 19.11)
        context.scaleBy(x: scaleX, y: 1)



        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 2.02, y: -0.11))
        bezierPath.addCurve(to: CGPoint(x: -4.98, y: -7.11), controlPoint1: CGPoint(x: 2.02, y: -0.11), controlPoint2: CGPoint(x: -1.98, y: -6.11))
        bezierPath.addCurve(to: CGPoint(x: -9.98, y: -0.11), controlPoint1: CGPoint(x: -7.98, y: -8.11), controlPoint2: CGPoint(x: -9.67, y: -3.71))
        bezierPath.addLine(to: CGPoint(x: -9.98, y: 7.89))
        primaryColor.setStroke()
        bezierPath.lineWidth = 4
        bezierPath.lineJoinStyle = .round
        bezierPath.stroke()


        //// Bezier 2 Drawing
        context.saveGState()
        context.translateBy(x: 11.23, y: 4.03)
        context.rotate(by: 149.53 * CGFloat.pi/180)

        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 4.01, y: 9.92))
        bezier2Path.addLine(to: CGPoint(x: 4.02, y: 8.66))
        bezier2Path.addLine(to: CGPoint(x: 4.01, y: 8.66))
        bezier2Path.addCurve(to: CGPoint(x: 4.01, y: 8.46), controlPoint1: CGPoint(x: 4.01, y: 8.6), controlPoint2: CGPoint(x: 4.01, y: 8.53))
        bezier2Path.addCurve(to: CGPoint(x: 3.53, y: 7.94), controlPoint1: CGPoint(x: 4.01, y: 8.17), controlPoint2: CGPoint(x: 3.82, y: 7.94))
        bezier2Path.addCurve(to: CGPoint(x: 3.43, y: 7.94), controlPoint1: CGPoint(x: 3.5, y: 7.94), controlPoint2: CGPoint(x: 3.46, y: 7.94))
        bezier2Path.addLine(to: CGPoint(x: 3.44, y: 7.94))
        bezier2Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier2Path.addLine(to: CGPoint(x: 0.71, y: 8.93))
        bezier2Path.addCurve(to: CGPoint(x: 0.52, y: 8.97), controlPoint1: CGPoint(x: 0.65, y: 8.96), controlPoint2: CGPoint(x: 0.58, y: 8.97))
        bezier2Path.addCurve(to: CGPoint(x: -0, y: 8.45), controlPoint1: CGPoint(x: 0.23, y: 8.97), controlPoint2: CGPoint(x: -0, y: 8.74))
        bezier2Path.addCurve(to: CGPoint(x: 0.16, y: 8.07), controlPoint1: CGPoint(x: -0, y: 8.3), controlPoint2: CGPoint(x: 0.06, y: 8.17))
        bezier2Path.addLine(to: CGPoint(x: 0.16, y: 8.08))
        bezier2Path.addLine(to: CGPoint(x: 6.01, y: 0))
        bezier2Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier2Path.addLine(to: CGPoint(x: 11.86, y: 8.14))
        bezier2Path.addCurve(to: CGPoint(x: 12.02, y: 8.52), controlPoint1: CGPoint(x: 11.96, y: 8.23), controlPoint2: CGPoint(x: 12.02, y: 8.37))
        bezier2Path.addCurve(to: CGPoint(x: 11.5, y: 9.03), controlPoint1: CGPoint(x: 12.02, y: 8.8), controlPoint2: CGPoint(x: 11.79, y: 9.03))
        bezier2Path.addCurve(to: CGPoint(x: 11.31, y: 8.99), controlPoint1: CGPoint(x: 11.43, y: 9.03), controlPoint2: CGPoint(x: 11.37, y: 9.02))
        bezier2Path.addLine(to: CGPoint(x: 11.31, y: 8.99))
        bezier2Path.addLine(to: CGPoint(x: 8.58, y: 8))
        bezier2Path.addLine(to: CGPoint(x: 8.59, y: 8.01))
        bezier2Path.addCurve(to: CGPoint(x: 8.49, y: 8), controlPoint1: CGPoint(x: 8.56, y: 8), controlPoint2: CGPoint(x: 8.52, y: 8))
        bezier2Path.addCurve(to: CGPoint(x: 8.01, y: 8.53), controlPoint1: CGPoint(x: 8.2, y: 8), controlPoint2: CGPoint(x: 8.01, y: 8.23))
        bezier2Path.addCurve(to: CGPoint(x: 8, y: 8.73), controlPoint1: CGPoint(x: 8.01, y: 8.59), controlPoint2: CGPoint(x: 8, y: 8.66))
        bezier2Path.addLine(to: CGPoint(x: 8, y: 8.72))
        bezier2Path.addLine(to: CGPoint(x: 8.01, y: 9.99))
        bezier2Path.usesEvenOddFillRule = true
        primaryColor.setFill()
        bezier2Path.fill()

        context.restoreGState()



        context.restoreGState()
        
        context.restoreGState()

    }




    @objc(LanesStyleKitResizingBehavior)
    public enum ResizingBehavior: Int {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.

        public func apply(rect: CGRect, target: CGRect) -> CGRect {
            if rect == target || target == CGRect.zero {
                return rect
            }

            var scales = CGSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)

            switch self {
                case .aspectFit:
                    scales.width = min(scales.width, scales.height)
                    scales.height = scales.width
                case .aspectFill:
                    scales.width = max(scales.width, scales.height)
                    scales.height = scales.width
                case .stretch:
                    break
                case .center:
                    scales.width = 1
                    scales.height = 1
            }

            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
}
