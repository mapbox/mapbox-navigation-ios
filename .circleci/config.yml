version: 2.1

orbs:
  slack: circleci/slack@4.4.2
  macos: circleci/macos@2.4.1
  gh: circleci/github-cli@2.0

parameters:
  weekly_snapshot:
    type: boolean
    default: false
  ignore_snapshot_dependencies:
    type: boolean
    default: false
  ignore_snapshot_week:
    type: boolean
    default: false

commands:
  install-mbx-ci:
    steps:
      - run:
          name: "Install MBX CI"
          command: |
            curl -Ls https://mapbox-release-engineering.s3.amazonaws.com/mbx-ci/latest/mbx-ci-darwin-amd64 > /usr/local/bin/mbx-ci
            chmod 755 /usr/local/bin/mbx-ci
  notify-build-finished:
      parameters:
        notify_success:
          type: boolean
          default: false
      steps:
        - when:
            condition: << parameters.notify_success >>
            steps:
              - slack/notify:
                  channel: mobile-bots
                  event: pass
                  template: basic_success_1
                  branch_pattern: lts/v2
        - slack/notify:
            channel: mobile-bots
            event: fail
            template: basic_fail_1
            branch_pattern: lts/v2
            mentions: '@here'
  install-xcodegen:
      steps:
        - run:
            name: Install XcodeGen
            command: |
              brew install xcodegen
  install-swift-sh:
      steps:
        - run:
            name: Install swift sh
            command: |
              brew install swift-sh
  install-bash5:
      steps:
        - run:
            name: Install Bash 5
            command: |
              brew install bash
            environment:
              HOMEBREW_NO_AUTO_UPDATE: 1
  restore-carthage-cache:
    parameters:
      xcode:
        type: string
    steps:
      - restore_cache:
          key: carthage-cache-v1-{{ checksum "Cartfile.resolved" }}-<< parameters.xcode >>
  save-carthage-cache:
    parameters:
      xcode:
        type: string
    steps:
      - save_cache:
          key: carthage-cache-v1-{{ checksum "Cartfile.resolved" }}-<< parameters.xcode >>
          paths:
            - Carthage

  save-api-diff-cache:
    parameters:
      key:
        type: string
      is_template:
        type: boolean
        default: false
    steps:
      - when:
          condition: << parameters.is_template >>
          steps:
            - save_cache:
                key: nav-sdk-diff-cache-v8-{{ << parameters.key >> }}
                paths:
                  - api_logs
            - store_artifacts:
                path: api_logs
                destination: api_logs_base_api
      - unless:
          condition: << parameters.is_template >>
          steps:
            - save_cache:
                key: nav-sdk-diff-cache-v8-<< parameters.key >>
                paths:
                  - api_logs
            - store_artifacts:
                path: api_logs
                destination: api_logs_<< parameters.key >>
  restore-api-diff-cache:
    parameters:
      key:
        type: string
      is_template:
        type: boolean
        default: false
    steps:
      - when:
          condition: << parameters.is_template >>
          steps:
            - restore_cache:
                key: nav-sdk-diff-cache-v8-{{ << parameters.key >> }}
      - unless:
          condition: << parameters.is_template >>
          steps:
            - restore_cache:
                key: nav-sdk-diff-cache-v8-<< parameters.key >>

  run_api_log_in_current_env:
    steps:
      - run:
          name: "Build SDK API Logs"
          command: |
            set -e -o pipefail -u

            mkdir $CIRCLE_WORKING_DIRECTORY/api_logs
            $CIRCLE_WORKING_DIRECTORY/scripts/api-compatibility-check/build-api-logs.sh "12.0" $CIRCLE_WORKING_DIRECTORY $CIRCLE_WORKING_DIRECTORY/api_logs/core_navigation_log.json $CIRCLE_WORKING_DIRECTORY/api_logs/navigation_log.json

  run_breaking_changes_detector:
    parameters:
      module_name:
        type: string
      base_api_path:
        type: string
      new_api_path:
        type: string
    steps:
      - run:
          name: Generating << parameters.module_name >> API Diff
          command: |
            export GITHUB_TOKEN=$(mbx-ci github issues public token)
            ./scripts/api-compatibility-check/ci-analyze-api.sh << parameters.module_name >> << parameters.base_api_path >> << parameters.new_api_path >> $CIRCLE_WORKING_DIRECTORY/.breakage-allowlist

  carthage-bootstrap:
    steps:
      - run:
          name: Install Dependencies
          command: carthage bootstrap --platform ios --cache-builds --configuration Debug --use-netrc --use-xcframeworks

  pre-snapshot-check:
    steps:
      - run:
          name: Pre-snapshot check
          command: |
            export GITHUB_TOKEN=$(mbx-ci github writer private token)
            pip3 install requests
            python3 scripts/snapshot/pre-snapshot-check.py

  prepare-snapshot:
    steps:
      - run:
          name: Prepare snapshot
          command: |
            export GITHUB_TOKEN=$(mbx-ci github writer private token)
            git remote set-url origin "https://x-access-token:$(mbx-ci github writer public token)@github.com/mapbox/mapbox-navigation-ios.git"
            git config user.email "release-bot@mapbox.com"
            git config user.name "Mapbox Releases"
            pip3 install requests
            python3 scripts/snapshot/prepare-snapshot.py << pipeline.parameters.ignore_snapshot_dependencies >> << pipeline.parameters.ignore_snapshot_week >>

  trigger-onetap:
    steps:
      - run:
          name: Trigger onetap
          command: |
            pip3 install requests
            python3 scripts/snapshot/trigger-onetap.py

  send-slack-notification:
    steps:
      - run:
          when: on_fail
          command: |
            curl -X POST -H 'Content-type: application/json' --data '{"text": ":x: '"$SLACK_MENTION_SLUG"' <'"$CIRCLE_BUILD_URL"' | '"$CIRCLE_JOB"'> job from snapshot pipeline failed.", "link_names" : 1}' $SLACK_WEBHOOK


step-library:
  - &restore-cache
      restore_cache:
        keys:
          - nav-cache-v{{ .Environment.CARTHAGE_CACHE_VERSION }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Cartfile.resolved" }}
  - &restore-cache-cocoapods
      restore_cache:
        keys:
          - nav-cache-pod-v1-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Tests/CocoaPodsTest/PodInstall/Podfile.lock" }}
          - nav-cache-pod-v1

  - &restore-cache-gems
      restore_cache:
        keys:
          - 1-gems-{{ checksum "Gemfile.lock" }}

  - &install-gems
      run:
        name: Install Gems
        command: |
          bundle config set path 'vendor/bundle'
          bundle check || bundle install

  - &save-cache-gems
      save_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  - &save-cache-cocoapods
      save_cache:
        key: nav-cache-pod-v1-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Tests/CocoaPodsTest/PodInstall/Podfile.lock" }}
        paths:
          - Tests/CocoaPodsTest/PodInstall/Pods

  - &restore-cache-podmaster
      restore_cache:
        keys:
          - podmaster-cache

  - &save-cache-podmaster
      save_cache:
        key: podmaster-cache
        paths:
          - "~/.cocoapods/repos/master"

  - &prepare-mapbox-file
      run:
        name: Prepare .mapbox file
        command: |
          echo "${MAPBOX_ACCESS_TOKEN}" > ~/.mapbox

  - &prepare-netrc-file
      run:
        name: Prepare .netrc file
        command: |
          echo "machine api.mapbox.com" >> ~/.netrc
          echo "login mapbox" >> ~/.netrc
          echo "password $SDK_REGISTRY_TOKEN" >> ~/.netrc
          chmod 0600 ~/.netrc

  - &update-carthage-version
      run:
        name: Update Carthage version
        command: |
          curl -OL "https://github.com/Carthage/Carthage/releases/download/0.38.0/Carthage.pkg"
          sudo installer -pkg Carthage.pkg -target /

  - &verify-missing-localizable-strings
      run:
        name: Verify missing localizable strings
        command: |
          ./scripts/convert_string_files.sh
          git diff --exit-code -- */*/*.lproj

  - &add-github-to-known-hosts
      run:
        name: Add GitHub to known hosts
        command: |
          for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts

  - &trigger-metrics
      run:
        name: Trigger metrics
        command: |
          pip3 install requests
          python3 scripts/trigger-metrics.py

jobs:
  pod-job:
    parameters:
      update:
        type: boolean
        default: false
      xcode:
        type: string
        default: "14.2.0"
      lint:
        type: boolean
        default: false
      archive:
        type: boolean
        default: false
    macos:
      xcode: << parameters.xcode >>
    resource_class: macos.m1.medium.gen1
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - *restore-cache-gems
      - *restore-cache-podmaster
      - *restore-cache-cocoapods
      - *install-gems
      - *prepare-mapbox-file
      - *prepare-netrc-file
      - macos/install-rosetta
      - *update-carthage-version
      - when:
          condition: << parameters.update >>
          steps:
            - run: cd Tests/CocoaPodsTest/PodInstall && bundle exec pod update --repo-update
      - unless:
          condition: << parameters.update >>
          steps:
            - run: cd Tests/CocoaPodsTest/PodInstall && bundle exec pod install --repo-update
      - run: cd Tests/CocoaPodsTest/PodInstall && xcodebuild -workspace PodInstall.xcworkspace -scheme PodInstall -destination 'generic/platform=iOS Simulator' -sdk iphonesimulator clean build
      - when:
          condition: << parameters.archive >>
          steps:
            - run: cd Tests/CocoaPodsTest/PodInstall && xcodebuild -workspace PodInstall.xcworkspace -scheme PodInstall -destination 'generic/platform=iOS Simulator' -sdk iphonesimulator clean archive CODE_SIGNING_ALLOWED="NO"
      - when:
          condition: << parameters.lint >>
          steps:
            - run: find . -path '*.podspec' -exec perl -pi -e 's/.+\.social_media_url.+//' {} \;
            - run: bundle exec pod lib lint MapboxCoreNavigation.podspec
      - *save-cache-podmaster
      - *save-cache-cocoapods
      - *save-cache-gems
      - notify-build-finished

  build-job:
    parameters:
      xcode:
        type: string
        default: "14.1.0"
      device:
        type: string
        default: "iPhone 14 Pro Max"
      iOS:
        type: string
        default: "16.1"
      spm:
        type: boolean
        default: false
      test:
        type: boolean
        default: true
      clean_build:
        type: boolean
        default: true
      codecoverage:
        type: boolean
        default: false
      verify_localization:
        type: boolean
        default: true
      configuration:
        type: string
        default: "Debug"
      scheme:
        type: string
        default: "MapboxCoreNavigation"
    macos:
      xcode: << parameters.xcode >>
    resource_class: macos.m1.medium.gen1
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - *prepare-mapbox-file
      - *prepare-netrc-file
      - macos/install-rosetta
      - run:
          name: Install prerequisites
          command: if [ $(xcversion simulators | grep -cF "iOS << parameters.iOS >> Simulator (installed)") -eq 0 ]; then xcversion simulators --install="iOS << parameters.iOS >>" || true; fi
      - when: # Simulator is needed only for tests
          condition: << parameters.test >>
          steps:
            - run:
                name: pre-start simulator
                command: xcrun instruments -w "<< parameters.device >> (<< parameters.iOS >>) [" || true
      - when:
          condition: << parameters.verify_localization >>
          steps:
            - *verify-missing-localizable-strings
      - *add-github-to-known-hosts
      - when:
          condition:
            not: << parameters.spm >>
          steps:
            - *update-carthage-version
            - restore-carthage-cache:
                xcode: << parameters.xcode >>
            - carthage-bootstrap
            - save-carthage-cache:
                xcode: << parameters.xcode >>
            - run:
                name: MapboxCoreNavigation
                command: xcodebuild -sdk iphonesimulator -destination 'platform=iOS Simulator,OS=<< parameters.iOS >>,name=<< parameters.device >>' -project MapboxNavigation.xcodeproj -scheme << parameters.scheme >> -configuration << parameters.configuration >> <<# parameters.clean_build >>clean build <</ parameters.clean_build >><<# parameters.test >>test <</ parameters.test >> <<# parameters.codecoverage >>-enableCodeCoverage YES<</ parameters.codecoverage >> ENABLE_TESTABILITY=YES CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED="NO"
      - when:
          condition: << parameters.spm >>
          steps:
            - run:
                name: Move Xcode project aside
                command: rm -rf *.xcodeproj
            - run:
                name: Resolve Package versions
                command: xcodebuild -resolvePackageDependencies
            - run:
                name: MapboxNavigation-Package
                command: xcodebuild -sdk iphonesimulator -destination 'platform=iOS Simulator,OS=<< parameters.iOS >>,name=<< parameters.device >>' -scheme MapboxNavigation-Package -configuration << parameters.configuration >> build <<# parameters.test >>test <</ parameters.test >> <<# parameters.codecoverage >>-enableCodeCoverage YES<</ parameters.codecoverage >> ENABLE_TESTABILITY=YES CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED="NO"
      # FIXME: SPM test host is currently disabled, but we should run tests on the SPM test host job. When it is reenabled, delete this section that generates the code coverage report.
      - when:
          condition: << parameters.codecoverage >>
          steps:
            - run:
                name: Generate code coverage report
                command: |
                  xcrun llvm-cov export -arch $(uname -m) -format="lcov" \
                    -instr-profile=$(find "${HOME}/Library/Developer/Xcode/DerivedData" -name '*.profdata' | head -n 1) \
                    $(find "${HOME}/Library/Developer/Xcode/DerivedData" -name "MapboxNavigation.o") > coverage.lcov
            - run:
                name: Send code coverage
                command: |
                  curl -Os https://uploader.codecov.io/latest/macos/codecov
                  chmod +x codecov
                  ./codecov
            - store_artifacts:
                path: coverage.lcov
      - notify-build-finished

  build-example:
    parameters:
      xcode:
        type: string
        default: "14.3.1"
      spm:
        type: boolean
        default: true
    macos:
      xcode: << parameters.xcode >>
    resource_class: macos.m1.medium.gen1
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - *prepare-mapbox-file
      - *prepare-netrc-file
      - *add-github-to-known-hosts
      - run:
          name: Build Example app
          command: xcodebuild -sdk iphonesimulator -destination 'platform=iOS Simulator,OS=15.4,name=iPhone 13 Pro Max' -project MapboxNavigation-SPM.xcodeproj -scheme Example clean build CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED="NO"
      - notify-build-finished

  ios-trigger-metrics:
    parameters:
      xcode:
        type: string
        default: "14.1.0"
    macos:
      xcode: << parameters.xcode >>
    resource_class: macos.m1.medium.gen1
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - *trigger-metrics

  spm-test-job:
    parameters:
      xcode:
        type: string
        default: "14.3.1"
      device:
        type: string
      iOS:
        type: string
        default: "16.4"
      notify_success:
        type: boolean
        default: false
    macos:
      xcode: << parameters.xcode >>
    resource_class: macos.m1.medium.gen1
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - *prepare-mapbox-file
      - *prepare-netrc-file
      - *add-github-to-known-hosts
      - run:
          name: Move Xcode project aside
          command: rm -rf *.xcodeproj
      - run:
          name: Run xcodebuild for Package.swift
          command: xcodebuild -scheme MapboxNavigation-Package test -destination "platform=iOS Simulator,OS=<< parameters.iOS >>,name=<< parameters.device >>"
      - notify-build-finished:
          notify_success: << parameters.notify_success >>

  spm-test-host-job:
    parameters:
      xcode:
        type: string
        default: "14.3.1"
      device:
        type: string
      iOS:
        type: string
        default: "16.4"
      notify_success:
        type: boolean
        default: false
      codecoverage:
        type: boolean
        default: true
    macos:
      xcode: << parameters.xcode >>
    resource_class: macos.m1.medium.gen1
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - *prepare-mapbox-file
      - *prepare-netrc-file
      - macos/install-rosetta
      - *add-github-to-known-hosts
      - run:
          name: Build test host application and execute tests
          command: xcodebuild -project MapboxNavigation-SPM.xcodeproj -scheme MapboxNavigationTestHost -sdk iphonesimulator -configuration Release -destination "platform=iOS Simulator,OS=<< parameters.iOS >>,name=<< parameters.device >>" clean build test <<# parameters.codecoverage >>-enableCodeCoverage YES<</ parameters.codecoverage >> ENABLE_TESTABILITY=YES
      - when:
          condition: << parameters.codecoverage >>
          steps:
            - run:
                name: Generate code coverage report
                command: |
                  xcrun llvm-cov export -arch $(uname -m) -format="lcov" \
                    -instr-profile=$(find "${HOME}/Library/Developer/Xcode/DerivedData" -name '*.profdata' | head -n 1) \
                    $(find build -name "MapboxNavigation.o") > coverage.lcov
            - run:
                name: Send code coverage
                command: |
                  curl -Os https://uploader.codecov.io/latest/macos/codecov
                  chmod +x codecov
                  ./codecov
            - store_artifacts:
                path: coverage.lcov
      - notify-build-finished

  get-api-log-job:
    parameters:
      xcode:
        type: string
        default: "14.2.0"
      is_base_api:
        type: boolean
        default: false
      commit_hash:
        description: "git hash of the commit to be used for generating logs in api_logs folder"
        type: string
    macos:
      xcode: << parameters.xcode >>
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - when:
          condition: << parameters.is_base_api >>
          steps:
            - restore-api-diff-cache:
                is_template: true
                key: checksum ".base_api"
      - unless:
          condition: << parameters.is_base_api >>
          steps:
            - restore-api-diff-cache:
                key: << parameters.commit_hash >>
      - run:
          name: "Check if cache already exists"
          command: |
            API_LOGS_DIR=api_logs
            if test -d "$API_LOGS_DIR"; then
                echo "API logs cache at $API_LOGS_DIR exist. Finishing job."
                circleci step halt
            else
                echo "API logs cache at $API_LOGS_DIR doesnt exist. Building from scratch."
            fi
      - *add-github-to-known-hosts
      - *prepare-mapbox-file
      - *prepare-netrc-file
      - macos/install-rosetta
      - *update-carthage-version
      - when:
          condition: << parameters.is_base_api >>
          steps:
            - run:
                name: Checking out base api
                command: mv .base_api .base_api_keep && git checkout $(cat .base_api_keep)
      - unless:
          condition: << parameters.is_base_api >>
          steps:
            - run:
                name: Checking out commit
                command: git checkout << parameters.commit_hash >>
      - run_api_log_in_current_env
      - when:
          condition: << parameters.is_base_api >>
          steps:
            - save-api-diff-cache:
                is_template: true
                key: checksum ".base_api_keep"
      - unless:
          condition: << parameters.is_base_api >>
          steps:
            - save-api-diff-cache:
                key: << parameters.commit_hash >>

  api-diff-job:
    macos:
      xcode: 14.2.0
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - *add-github-to-known-hosts
      - *prepare-mapbox-file
      - *prepare-netrc-file
      - install-mbx-ci
      - restore-api-diff-cache:
          key: .Environment.CIRCLE_SHA1
          is_template: true
      - run:
          name: Pick current API
          command: mv api_logs new_api
      - restore-api-diff-cache:
          is_template: true
          key: checksum ".base_api"
      - run:
          name: Pick old API
          command: mv api_logs old_api
      - run_breaking_changes_detector:
          module_name: MapboxCoreNavigation
          base_api_path: $CIRCLE_WORKING_DIRECTORY/old_api/core_navigation_log.json
          new_api_path: $CIRCLE_WORKING_DIRECTORY/new_api/core_navigation_log.json
      - run_breaking_changes_detector:
          module_name: MapboxNavigation
          base_api_path: $CIRCLE_WORKING_DIRECTORY/old_api/navigation_log.json
          new_api_path: $CIRCLE_WORKING_DIRECTORY/new_api/navigation_log.json

  spm-core-integration-test-job:
    macos:
      xcode: "14.3.1"
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - *prepare-netrc-file
      - *add-github-to-known-hosts
      - run:
          name: Build SPM Core integration test
          command: cd Tests/SPMTest/CoreSPMTest && xcodebuild -scheme CoreSPMTest -destination "platform=iOS Simulator,OS=16.4,name=iPhone 13 Pro Max" build CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED="NO"

  spm-ui-integration-test-job:
    macos:
      xcode: "14.1.0"
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - install-bash5
      - *prepare-netrc-file
      - *add-github-to-known-hosts
      - install-xcodegen
      - install-swift-sh
      - run:
          name: Validate released Navigation SDK versions
          command: /usr/local/bin/bash ./scripts/validate_releases.sh # Use Bash 5 that is installed via Homebrew.

  generate-docs-job:
    parameters:
      xcode:
        type: string
        default: "14.1.0"
    macos:
      xcode: << parameters.xcode >>
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - *restore-cache-gems
      - *restore-cache-podmaster
      - *install-gems
      - *prepare-netrc-file
      - *add-github-to-known-hosts
      - install-mbx-ci
      - run:
          name: Generate docs
          command: |
            OUTPUT=$( echo << pipeline.git.tag >> | sed 's/^v//' )
            export OUTPUT="${OUTPUT:-documentation}"
            echo "export OUTPUT=$OUTPUT" >> $BASH_ENV
            ./scripts/document.sh
            cp -a "$OUTPUT" /tmp/generated-docs
      - *save-cache-podmaster
      - *save-cache-gems
      - run:
          name: Compress Docs
          command: tar -cvzf /tmp/docs.tar /tmp/generated-docs
      - store_artifacts:
          path: /tmp/docs.tar
          destination: docs
      - when:
          condition: << pipeline.git.tag >>
          steps:
            - run:
                name: Push docs to publisher-production
                command: |
                  git remote set-url origin "https://x-access-token:$(mbx-ci github writer public token)@github.com/mapbox/mapbox-navigation-ios.git"
                  git config user.email "release-bot@mapbox.com"
                  git config user.name "Mapbox Releases"
                  VERSION="${OUTPUT}" scripts/publish-docs.sh
            - notify-build-finished:
                notify_success: true
      - notify-build-finished

  update-version-job:
    parameters:
      xcode:
        type: string
        default: "14.1.0"
    macos:
      xcode: << parameters.xcode >>
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - *restore-cache-gems
      - *restore-cache-podmaster
      - *install-gems
      - *prepare-netrc-file
      - *add-github-to-known-hosts
      - install-mbx-ci
      - run:
          name: Update version
          command: |
            export GITHUB_WRITER_TOKEN=$(mbx-ci github writer public token)
            git remote set-url origin "https://x-access-token:$GITHUB_WRITER_TOKEN@github.com/mapbox/mapbox-navigation-ios"
            git config --global user.email no-reply@mapbox.com && git config --global user.name mapbox-ci
            VERSION=$( echo << pipeline.git.branch >> | sed 's/^trigger-update-version-//' )
            ./scripts/update-version.sh $VERSION
      - *save-cache-podmaster
      - *save-cache-gems

  distribute-version-job:
    parameters:
      xcode:
        type: string
        default: "14.1.0"
    macos:
      xcode: << parameters.xcode >>
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - *restore-cache-gems
      - *restore-cache-podmaster
      - *install-gems
      - *prepare-netrc-file
      - *add-github-to-known-hosts
      - install-mbx-ci
      - run:
          name: Update version
          no_output_timeout: 20m
          command: python3 scripts/distribute-version.py
      - *save-cache-podmaster
      - *save-cache-gems

  pre-snapshot-check:
    parameters:
      xcode:
        type: string
        default: "14.1.0"
    macos:
      xcode: << parameters.xcode >>
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - install-mbx-ci
      - pre-snapshot-check

  release-weekly-snapshot:
    parameters:
      xcode:
        type: string
        default: "14.1.0"
    macos:
      xcode: << parameters.xcode >>
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - install-mbx-ci
      - *prepare-netrc-file
      - prepare-snapshot
      - trigger-onetap
      - send-slack-notification

workflows:
  extended-workflow:
    jobs:
      - spm-test-job:
          name: "swift test; Xcode 14.1.0; iOS 16.1"
          xcode: "14.1.0"
          iOS: "16.1"
          device: "iPhone 14 Pro Max"
          context: Slack Orb
          notify_success: true
      - spm-test-job:
          name: "swift test; Xcode 14.1.0; iOS 15.5"
          xcode: "14.1.0"
          iOS: "15.5"
          device: "iPhone 13 Pro Max"
          context: Slack Orb
          notify_success: true
      - spm-ui-integration-test-job:
          name: "Xcode 14.1.0; SPM UI test"
    triggers:
       - schedule:
           cron: "0 0 * * *" # Once per day at 00:00
           filters:
             branches:
               only:
                 - lts/v2
  api-diff-workflow:
    jobs:
      - get-api-log-job:
          name: "Get old API logs"
          is_base_api: true
          commit_hash: ""
      - get-api-log-job:
          name: "Get new API logs"
          commit_hash: << pipeline.git.revision >>
      - api-diff-job:
          name: "Create breaking changes PR comment"
          requires:
            - "Get old API logs"
            - "Get new API logs"
  main-workflow:
      jobs:
        - build-job:
            name: "Xcode_14.3.1_iOS_16.4_Debug"
            xcode: "14.3.1"
            iOS: "16.4"
            device: "iPhone 14 Pro Max"
            codecoverage: false
            context: Slack Orb
        - build-job:
            name: "Xcode_15.2_iOS_17.2_SPM_Debug"
            xcode: "15.2"
            iOS: "17.2"
            device: "iPhone 15 Pro Max"
            spm: true
            codecoverage: true
            context: Slack Orb
        - build-job:
            name: "Xcode_14.1_iOS_16.1_SPM_Debug"
            xcode: "14.1"
            iOS: "16.1"
            device: "iPhone 14 Pro Max"
            spm: true
            codecoverage: true
            context: Slack Orb
        - build-job:
            name: "Xcode_14.1.0_iOS_16.1_Release"
            xcode: "14.1.0"
            iOS: "16.1"
            device: "iPhone 14 Pro Max"
            codecoverage: false
            context: Slack Orb
            configuration: "Release"
        - build-job:
            name: "Xcode_14.1.0_iOS_16.1_SPM_Release"
            xcode: "14.1.0"
            iOS: "16.1"
            device: "iPhone 14 Pro Max"
            spm: true
            codecoverage: false
            context: Slack Orb
            configuration: "Release"
        - build-job:
            name: "Xcode_14.1.0_iOS_15.5"
            xcode: "14.1.0"
            iOS: "15.5"
            device: "iPhone 13 Pro Max"
            spm: true
            codecoverage: false
            context: Slack Orb
        - build-job:
            name: "Xcode_14.1_iOS_16.1"
            xcode: "14.1.0"
            iOS: "16.1"
            device: "iPhone 14 Pro Max"
            spm: true
            codecoverage: false
            context: Slack Orb
        - pod-job:
            name: "Xcode_14.2.0 pod install"
            update: false
            xcode: "14.2.0"
            archive: true
            context: Slack Orb
        - pod-job:
            name: "Xcode_14.3.1 pod update"
            update: true
            xcode: "14.3.1"
            lint: true
            context: Slack Orb
        - build-example:
            name: "Build Example"
            context: Slack Orb
        - spm-core-integration-test-job:
            name: "Xcode 14.3.1; iOS 16.4; SPM Core test"
        - build-job:
            name: "Core integration test; Xcode 14.1; iOS 16.1"
            xcode: "14.1.0"
            iOS: "16.1"
            device: "iPhone 14 Pro Max"
            scheme: "MapboxCoreNavigationIntegrationTests"
            codecoverage: false
            clean_build: false
            context: Slack Orb
        - generate-docs-job:
            name: Generate / Publish Documentation
            context: Slack Orb
            filters:
              tags:
                only: /^v\d+\.\d+\.\d+(-.+)?$/
        - ios-trigger-metrics:
            filters:
              branches:
                only: lts/v2
  update-version-workflow:
    jobs:
      - update-version-job:
          filters:
            branches:
              only: /^trigger-update-version-.*/
  distribute-version-workflow:
    jobs:
      - distribute-version-job:
          filters:
            branches:
              only: /^trigger-distribute-version-.*/
