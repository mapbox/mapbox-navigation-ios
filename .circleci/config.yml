version: 2.1

step-library:
  - &restore-cache
      restore_cache:
        keys:
          - nav-cache-v3-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Cartfile.resolved" }}
          - nav-cache-v3-{{ .Environment.CIRCLE_JOB }} # used if checksum fails

  - &save-cache
      save_cache:
        key: nav-cache-v3-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Cartfile.resolved" }}
        paths:
          - Carthage

  - &restore-cache-cocoapods
      restore_cache:
        keys:
          - nav-cache-pod-v1-{{ .Environment.CIRCLE_JOB }}-{{ checksum "MapboxCoreNavigationTests/CocoaPodsTest/PodInstall/Podfile.lock" }}
          - nav-cache-pod-v1
  
  - &save-cache-cocoapods
      save_cache:
        key: nav-cache-pod-v1-{{ .Environment.CIRCLE_JOB }}-{{ checksum "MapboxCoreNavigationTests/CocoaPodsTest/PodInstall/Podfile.lock" }}
        paths:
          - MapboxCoreNavigationTests/CocoaPodsTest/PodInstall/Pods

  - &restore-cache-podmaster
      restore_cache:
        keys:
          - podmaster-cache

  - &save-cache-podmaster
      save_cache:
        key: podmaster-cache
        paths:
          - "~/.cocoapods/repos/master"

  - &prepare-mapbox-file
      run:
        name: Prepare .mapbox file
        command: |
          echo "foo" > ~/.mapbox

  - &prepare-netrc-file
      run:
        name: Prepare .netrc file
        command: |
          echo "machine dl.bintray.com" > ~/.netrc
          echo "login $BINTRAY_LOGIN" >> ~/.netrc
          echo "password $BINTRAY_API_KEY" >> ~/.netrc
          echo >> ~/.netrc
          echo "machine api.mapbox.com" >> ~/.netrc
          echo "login mapbox" >> ~/.netrc
          echo "password $SDK_REGISTRY_TOKEN" >> ~/.netrc

  - &update-carthage-version
      run:
        name: Update Carthage version
        command: |
          brew update && brew upgrade carthage

  - &verify-missing-localizable-strings
      run:
        name: Verify missing localizable strings
        command: |
          ./scripts/convert_string_files.sh
          git diff --exit-code -- */*/*.lproj

  - &install-dependencies
      run:
        name: Install Dependencies
        command: |
          carthage bootstrap --platform ios --cache-builds --configuration Debug --no-use-binaries --use-netrc
          carthage outdated --xcode-warnings # prints warnings if there are outdated carthage dependencies

  - &build-Example
      run:
        name: Build Example
        command: |
          xcodebuild -sdk iphonesimulator -destination 'platform=iOS Simulator,OS=13.4.1,name=iPhone 8 Plus' -project MapboxNavigation.xcodeproj -scheme Example clean build | xcpretty

  - &trigger-metrics
      run:
        name: Trigger metrics
        command: |
          if [ -n "${MOBILE_METRICS_TOKEN}" ]; then
            bash -c "curl -X POST --header \"Content-Type: application/json\" --data '{\"parameters\": {\"run_ios_navigation_benchmark\": true, \"ci_ref\": $CIRCLE_BUILD_NUM }, \"branch\": \"master\" }' https://circleci.com/api/v2/project/github/mapbox/mobile-metrics/pipeline?circle-token=${MOBILE_METRICS_TOKEN}"
          else
            echo "MOBILE_METRICS_TOKEN not provided"
          fi

jobs:
  pod-job:
    parameters:
      update:
        type: boolean
        default: false
      iOS:
        type: string
        default: "13.4.1"
      xcode:
        type: string
        default: "11.4.1"
      lint:
        type: boolean
        default: false
    macos:
      xcode: << parameters.xcode >>
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - *prepare-mapbox-file
      - *prepare-netrc-file
      - *update-carthage-version
      - *restore-cache-podmaster
      - *restore-cache-cocoapods
      - when:
          condition: << parameters.update >>
          steps:
            - run: cd MapboxCoreNavigationTests/CocoaPodsTest/PodInstall && pod update --repo-update
      - unless:
          condition: << parameters.update >>
          steps:
            - run: cd MapboxCoreNavigationTests/CocoaPodsTest/PodInstall && pod install --repo-update
      - run: cd MapboxCoreNavigationTests/CocoaPodsTest/PodInstall && xcodebuild -workspace PodInstall.xcworkspace -scheme PodInstall -destination 'platform=iOS Simulator,OS=<< parameters.iOS >>,name=iPhone 8 Plus' clean build | xcpretty
      - when:
          condition: << parameters.lint >>
          steps:
            - run: find . -path '*.podspec' -exec perl -pi -e 's/.+\.social_media_url.+//' {} \;
            - run: pod lib lint MapboxCoreNavigation.podspec
      - *save-cache-podmaster
      - *save-cache-cocoapods

  build-job:
    parameters:
      xcode:
        type: string
        default: "11.4.1"
      device:
        type: string
        default: "iPhone 8 Plus"
      iOS:
        type: string
        default: "13.4.1"
      test:
        type: boolean
        default: true
      codecoverage:
        type: boolean
        default: false
      delete_private_deps:
        type: boolean
        default: false
    macos:
      xcode: << parameters.xcode >>
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - *prepare-mapbox-file
      - *prepare-netrc-file
      - *update-carthage-version
      - *restore-cache
      - when:
          condition: << parameters.delete_private_deps >>
          steps:
            - run: rm -rf Cartfile.private && rm -rf Cartfile.resolved
      - *install-dependencies
      - *save-cache
      - run:
          name: Install prerequisites
          command: if [ $(xcversion simulators | grep -cF "iOS << parameters.iOS >> Simulator (installed)") -eq 0 ]; then xcversion simulators --install="iOS << parameters.iOS >>" || true; fi
      - run:
          name: pre-start simulator
          command: xcrun instruments -w "<< parameters.device >> (<< parameters.iOS >>) [" || true
      - *verify-missing-localizable-strings
      - run:
          name: MapboxCoreNavigation
          command: xcodebuild -sdk iphonesimulator -destination 'platform=iOS Simulator,OS=<< parameters.iOS >>,name=<< parameters.device >>' -project MapboxNavigation.xcodeproj -scheme MapboxCoreNavigation clean build <<# parameters.test >>test <</ parameters.test >> <<# parameters.codecoverage >>-enableCodeCoverage YES<</ parameters.codecoverage >> 
      - when:
          condition: << parameters.codecoverage >>
          steps:
            - run: bash <(curl -s https://codecov.io/bash)
      - run:
          name: MapboxNavigation
          command: xcodebuild -sdk iphonesimulator -destination 'platform=iOS Simulator,OS=<< parameters.iOS >>,name=<< parameters.device >>' -project MapboxNavigation.xcodeproj -scheme MapboxNavigation clean build <<# parameters.test >>test <</ parameters.test >> <<# parameters.codecoverage >>-enableCodeCoverage YES<</ parameters.codecoverage >> 
      - when:
          condition: << parameters.codecoverage >>
          steps:
            - run: bash <(curl -s https://codecov.io/bash)

  xcode-11-examples:
    macos:
      xcode: "11.4.1"
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - *prepare-mapbox-file
      - *prepare-netrc-file
      - *update-carthage-version
      - *restore-cache
      - *install-dependencies
      - *build-Example
      - *save-cache

  ios-trigger-metrics:
    macos:
      xcode: "11.4.1"
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - *trigger-metrics

workflows:
  workflow:
    jobs:
      - build-job:
          name: "Xcode_11.5_iOS_13.5"
          xcode: "11.5.0"
          iOS: "13.5"
          device: "iPhone 8 Plus"
      - build-job:
          name: "Xcode_11.4.1_iOS_12.2"
          xcode: "11.4.1"
          iOS: "12.2"
          codecoverage: true
      - build-job:
          name: "Xcode_11.4.1_iOS_10.3.1"
          xcode: "11.4.1"
          iOS: "10.3.1"
          test: false
          device: "iPhone 7 Plus"
      - pod-job:
          name: "Xcode_11.4.1_iOS_12.2_CP_install"
          update: false
          xcode: "11.4.1"
          iOS: "12.2"
      - pod-job:
          name: "Xcode_11.4.1_iOS_12.2_CP_update"
          update: true
          xcode: "11.4.1"
          iOS: "12.2"
          lint: true
      - xcode-11-examples
      - ios-trigger-metrics:
          filters:
            branches:
              only: master
